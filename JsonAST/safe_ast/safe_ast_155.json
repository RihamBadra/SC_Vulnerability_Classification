{
  "type": "SourceUnit",
  "children": [
    {
      "type": "PragmaDirective",
      "name": "solidity",
      "value": "0.5.17"
    },
    {
      "type": "ContractDefinition",
      "name": "IFactRegistry",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "isValid",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "fact",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "IMerkleVerifier",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MAX_N_MERKLE_VERIFIER_QUERIES",
              "expression": {
                "type": "NumberLiteral",
                "number": "128",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "128",
            "subdenomination": null
          }
        },
        {
          "type": "FunctionDefinition",
          "name": "verify",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "channelPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "queuePtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "root",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "n",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "hash",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "IQueryableFactRegistry",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "IFactRegistry"
          },
          "arguments": null
        }
      ],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "hasRegisteredFact",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "IStarkVerifier",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "verifyProof",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "proofParams",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "proof",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "publicInput",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": [],
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "MemoryMap",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "CHANNEL_STATE_SIZE",
              "expression": {
                "type": "NumberLiteral",
                "number": "3",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "3",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MAX_N_QUERIES",
              "expression": {
                "type": "NumberLiteral",
                "number": "48",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "48",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "FRI_QUEUE_SIZE",
              "expression": {
                "type": "Identifier",
                "name": "MAX_N_QUERIES"
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "Identifier",
            "name": "MAX_N_QUERIES"
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MAX_SUPPORTED_MAX_FRI_STEP",
              "expression": {
                "type": "NumberLiteral",
                "number": "4",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "4",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_EVAL_DOMAIN_SIZE",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x0",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_BLOW_UP_FACTOR",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x1",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x1",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_LOG_EVAL_DOMAIN_SIZE",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x2",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x2",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_PROOF_OF_WORK_BITS",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x3",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x3",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_EVAL_DOMAIN_GENERATOR",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x4",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x4",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_PUBLIC_INPUT_PTR",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x5",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x5",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_TRACE_COMMITMENT",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x6",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x6",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_OODS_COMMITMENT",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x7",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x7",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_N_UNIQUE_QUERIES",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x8",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x8",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_CHANNEL",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x9",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x9",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_MERKLE_QUEUE",
              "expression": {
                "type": "NumberLiteral",
                "number": "0xc",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0xc",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_FRI_QUEUE",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x6c",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x6c",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_FRI_QUERIES_DELIMITER",
              "expression": {
                "type": "NumberLiteral",
                "number": "0xfc",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0xfc",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_FRI_CTX",
              "expression": {
                "type": "NumberLiteral",
                "number": "0xfd",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0xfd",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_FRI_STEPS_PTR",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x125",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x125",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_FRI_EVAL_POINTS",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x126",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x126",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_FRI_COMMITMENTS",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x130",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x130",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_FRI_LAST_LAYER_DEG_BOUND",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x13a",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x13a",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_FRI_LAST_LAYER_PTR",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x13b",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x13b",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_CONSTRAINT_POLY_ARGS_START",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x13c",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x13c",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_PERIODIC_COLUMN__CONSTS0_A",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x13c",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x13c",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_PERIODIC_COLUMN__CONSTS1_A",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x13d",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x13d",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_PERIODIC_COLUMN__CONSTS2_A",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x13e",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x13e",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_PERIODIC_COLUMN__CONSTS3_A",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x13f",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x13f",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_PERIODIC_COLUMN__CONSTS4_A",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x140",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x140",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_PERIODIC_COLUMN__CONSTS5_A",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x141",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x141",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_PERIODIC_COLUMN__CONSTS6_A",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x142",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x142",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_PERIODIC_COLUMN__CONSTS7_A",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x143",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x143",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_PERIODIC_COLUMN__CONSTS8_A",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x144",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x144",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_PERIODIC_COLUMN__CONSTS9_A",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x145",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x145",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_PERIODIC_COLUMN__CONSTS0_B",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x146",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x146",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_PERIODIC_COLUMN__CONSTS1_B",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x147",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x147",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_PERIODIC_COLUMN__CONSTS2_B",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x148",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x148",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_PERIODIC_COLUMN__CONSTS3_B",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x149",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x149",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_PERIODIC_COLUMN__CONSTS4_B",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x14a",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x14a",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_PERIODIC_COLUMN__CONSTS5_B",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x14b",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x14b",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_PERIODIC_COLUMN__CONSTS6_B",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x14c",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x14c",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_PERIODIC_COLUMN__CONSTS7_B",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x14d",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x14d",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_PERIODIC_COLUMN__CONSTS8_B",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x14e",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x14e",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_PERIODIC_COLUMN__CONSTS9_B",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x14f",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x14f",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_MAT00",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x150",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x150",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_MAT01",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x151",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x151",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_TRACE_LENGTH",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x152",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x152",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_MAT10",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x153",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x153",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_MAT11",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x154",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x154",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_INPUT_VALUE_A",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x155",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x155",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_OUTPUT_VALUE_A",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x156",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x156",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_INPUT_VALUE_B",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x157",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x157",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_OUTPUT_VALUE_B",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x158",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x158",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_TRACE_GENERATOR",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x159",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x159",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_OODS_POINT",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x15a",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x15a",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_COEFFICIENTS",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x15b",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x15b",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_OODS_VALUES",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x18b",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x18b",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_CONSTRAINT_POLY_ARGS_END",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x1a1",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x1a1",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_COMPOSITION_OODS_VALUES",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x1a1",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x1a1",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_OODS_EVAL_POINTS",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x1a3",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x1a3",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_OODS_COEFFICIENTS",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x1d3",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x1d3",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_TRACE_QUERY_RESPONSES",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x1eb",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x1eb",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_COMPOSITION_QUERY_RESPONSES",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x5ab",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x5ab",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MM_CONTEXT_SIZE",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x60b",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x60b",
            "subdenomination": null
          }
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "MerkleVerifier",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "IMerkleVerifier"
          },
          "arguments": null
        }
      ],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "getHashMask",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "NumberLiteral",
                "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000",
                "subdenomination": null
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "verify",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "channelPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "queuePtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "root",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "n",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "hash",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "lhashMask",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "getHashMask"
                  },
                  "arguments": [],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<=",
                      "left": {
                        "type": "Identifier",
                        "name": "n"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "MAX_N_MERKLE_VERIFIER_QUERIES"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "TOO_MANY_MERKLE_QUERIES"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "hashesPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "queuePtr",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x20"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "queueSize"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mul",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "n",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x40"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "slotSize"
                        }
                      ],
                      "expression": {
                        "type": "HexNumber",
                        "value": "0x40"
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "rdIdx"
                        }
                      ],
                      "expression": {
                        "type": "DecimalNumber",
                        "value": "0"
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "wrIdx"
                        }
                      ],
                      "expression": {
                        "type": "DecimalNumber",
                        "value": "0"
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "index"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "rdIdx",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "queuePtr",
                                "arguments": []
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "proofPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "channelPtr",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyFor",
                      "pre": {
                        "type": "AssemblyBlock",
                        "operations": []
                      },
                      "condition": {
                        "type": "AssemblyExpression",
                        "functionName": "gt",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "index",
                            "arguments": []
                          },
                          {
                            "type": "DecimalNumber",
                            "value": "1"
                          }
                        ]
                      },
                      "post": {
                        "type": "AssemblyBlock",
                        "operations": []
                      },
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "siblingIndex"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "xor",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "index",
                                  "arguments": []
                                },
                                {
                                  "type": "DecimalNumber",
                                  "value": "1"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "sibblingOffset"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mulmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "siblingIndex",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x40"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "xor",
                                "arguments": [
                                  {
                                    "type": "HexNumber",
                                    "value": "0x20"
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sibblingOffset",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mload",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "rdIdx",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "hashesPtr",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "rdIdx"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "addmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "rdIdx",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "slotSize",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "queueSize",
                                  "arguments": []
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "newHashPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "proofPtr",
                              "arguments": []
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "proofPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "proofPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "wrIdx",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "queuePtr",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "div",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "index",
                                    "arguments": []
                                  },
                                  {
                                    "type": "DecimalNumber",
                                    "value": "2"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "index"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mload",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "rdIdx",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "queuePtr",
                                      "arguments": []
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyIf",
                            "condition": {
                              "type": "AssemblyExpression",
                              "functionName": "eq",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "index",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "siblingIndex",
                                  "arguments": []
                                }
                              ]
                            },
                            "body": {
                              "type": "AssemblyBlock",
                              "operations": [
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "newHashPtr"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "rdIdx",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "hashesPtr",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "proofPtr"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "proofPtr",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x20"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "rdIdx"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "addmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "rdIdx",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "slotSize",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "queueSize",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "index"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "rdIdx",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "queuePtr",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "sibblingOffset",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mload",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "newHashPtr",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "wrIdx",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "hashesPtr",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "and",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "lhashMask",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "keccak256",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0x00"
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x40"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "wrIdx"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "addmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "wrIdx",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "slotSize",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "queueSize",
                                  "arguments": []
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "hash"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "rdIdx",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "hashesPtr",
                                "arguments": []
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "channelPtr",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "proofPtr",
                          "arguments": []
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "Identifier",
                        "name": "hash"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "root"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "INVALID_MERKLE_PROOF"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "MimcConstraintPoly",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "function()external{uint256res;assembly{letPRIME:=0x30000003000000010000000000000001calldatacopy(0x0,0x0,0xca0)letpoint:=mload(0x3c0)mstore(0xca0,mul(2,mload(0x2c0)))functionexpmod(base,exponent,modulus)->res{letp:=0x10c0mstore(p,0x20)mstore(add(p,0x20),0x20)mstore(add(p,0x40),0x20)mstore(add(p,0x60),base)mstore(add(p,0x80),exponent)mstore(add(p,0xa0),modulus)ifiszero(staticcall(not(0),0x05,p,0xc0,p,0x20)){revert(0,0)}res:=mload(p)}functiondegreeAdjustment(compositionPolynomialDegreeBound,constraintDegree,numeratorDegree,denominatorDegree)->res{res:=sub(sub(compositionPolynomialDegreeBound,1),sub(add(constraintDegree,numeratorDegree),denominatorDegree))}{mstore(0xf40,expmod(point,mload(0x2c0),PRIME))mstore(0xf60,expmod(mload(0x3a0),sub(mload(0x2c0),1),PRIME))}{mstore(0xfe0,addmod(mload(0xf40),sub(PRIME,1),PRIME))mstore(0x1000,addmod(point,sub(PRIME,1),PRIME))mstore(0x1020,addmod(point,sub(PRIME,mload(0xf60)),PRIME))}{letproductsToValuesOffset:=0x60letprod:=1letpartialProductEndPtr:=0xfe0for{letpartialProductPtr:=0xf80}lt(partialProductPtr,partialProductEndPtr){partialProductPtr:=add(partialProductPtr,0x20)}{mstore(partialProductPtr,prod)prod:=mulmod(prod,mload(add(partialProductPtr,productsToValuesOffset)),PRIME)}letfirstPartialProductPtr:=0xf80letprodInv:=expmod(prod,sub(PRIME,2),PRIME)ifeq(prodInv,0){mstore(0,0x08c379a000000000000000000000000000000000000000000000000000000000)mstore(0x4,0x20)mstore(0x24,0x1e)mstore(0x44,\"Batch inverse product is zero.\")revert(0,0x62)}letcurrentPartialProductPtr:=0xfe0for{}gt(currentPartialProductPtr,firstPartialProductPtr){}{currentPartialProductPtr:=sub(currentPartialProductPtr,0x20)mstore(currentPartialProductPtr,mulmod(mload(currentPartialProductPtr),prodInv,PRIME))prodInv:=mulmod(prodInv,mload(add(currentPartialProductPtr,productsToValuesOffset)),PRIME)}}{mstore(0x1040,addmod(point,sub(PRIME,mload(0xf60)),PRIME))mstore(0x1060,expmod(point,degreeAdjustment(mload(0xca0),mul(3,sub(mload(0x2c0),1)),0,mload(0x2c0)),PRIME))mstore(0x1080,expmod(point,degreeAdjustment(mload(0xca0),mul(3,sub(mload(0x2c0),1)),1,mload(0x2c0)),PRIME))mstore(0x10a0,expmod(point,degreeAdjustment(mload(0xca0),sub(mload(0x2c0),1),0,1),PRIME))}{{letval:=addmod(mulmod(mload(0x280),addmod(mload(0x9e0),sub(PRIME,mload(0x0)),PRIME),PRIME),mulmod(mload(0x2a0),addmod(mload(0xb40),sub(PRIME,mload(0x140)),PRIME),PRIME),PRIME)mstore(0xcc0,val)}{letval:=addmod(mulmod(mload(0x2e0),addmod(mload(0x9e0),sub(PRIME,mload(0x0)),PRIME),PRIME),mulmod(mload(0x300),addmod(mload(0xb40),sub(PRIME,mload(0x140)),PRIME),PRIME),PRIME)mstore(0xce0,val)}{letval:=addmod(mulmod(mload(0x280),addmod(mload(0xa20),sub(PRIME,mload(0x20)),PRIME),PRIME),mulmod(mload(0x2a0),addmod(mload(0xb80),sub(PRIME,mload(0x160)),PRIME),PRIME),PRIME)mstore(0xd00,val)}{letval:=addmod(mulmod(mload(0x2e0),addmod(mload(0xa20),sub(PRIME,mload(0x20)),PRIME),PRIME),mulmod(mload(0x300),addmod(mload(0xb80),sub(PRIME,mload(0x160)),PRIME),PRIME),PRIME)mstore(0xd20,val)}{letval:=addmod(mulmod(mload(0x280),addmod(mload(0xa40),sub(PRIME,mload(0x40)),PRIME),PRIME),mulmod(mload(0x2a0),addmod(mload(0xba0),sub(PRIME,mload(0x180)),PRIME),PRIME),PRIME)mstore(0xd40,val)}{letval:=addmod(mulmod(mload(0x2e0),addmod(mload(0xa40),sub(PRIME,mload(0x40)),PRIME),PRIME),mulmod(mload(0x300),addmod(mload(0xba0),sub(PRIME,mload(0x180)),PRIME),PRIME),PRIME)mstore(0xd60,val)}{letval:=addmod(mulmod(mload(0x280),addmod(mload(0xa60),sub(PRIME,mload(0x60)),PRIME),PRIME),mulmod(mload(0x2a0),addmod(mload(0xbc0),sub(PRIME,mload(0x1a0)),PRIME),PRIME),PRIME)mstore(0xd80,val)}{letval:=addmod(mulmod(mload(0x2e0),addmod(mload(0xa60),sub(PRIME,mload(0x60)),PRIME),PRIME),mulmod(mload(0x300),addmod(mload(0xbc0),sub(PRIME,mload(0x1a0)),PRIME),PRIME),PRIME)mstore(0xda0,val)}{letval:=addmod(mulmod(mload(0x280),addmod(mload(0xa80),sub(PRIME,mload(0x80)),PRIME),PRIME),mulmod(mload(0x2a0),addmod(mload(0xbe0),sub(PRIME,mload(0x1c0)),PRIME),PRIME),PRIME)mstore(0xdc0,val)}{letval:=addmod(mulmod(mload(0x2e0),addmod(mload(0xa80),sub(PRIME,mload(0x80)),PRIME),PRIME),mulmod(mload(0x300),addmod(mload(0xbe0),sub(PRIME,mload(0x1c0)),PRIME),PRIME),PRIME)mstore(0xde0,val)}{letval:=addmod(mulmod(mload(0x280),addmod(mload(0xaa0),sub(PRIME,mload(0xa0)),PRIME),PRIME),mulmod(mload(0x2a0),addmod(mload(0xc00),sub(PRIME,mload(0x1e0)),PRIME),PRIME),PRIME)mstore(0xe00,val)}{letval:=addmod(mulmod(mload(0x2e0),addmod(mload(0xaa0),sub(PRIME,mload(0xa0)),PRIME),PRIME),mulmod(mload(0x300),addmod(mload(0xc00),sub(PRIME,mload(0x1e0)),PRIME),PRIME),PRIME)mstore(0xe20,val)}{letval:=addmod(mulmod(mload(0x280),addmod(mload(0xac0),sub(PRIME,mload(0xc0)),PRIME),PRIME),mulmod(mload(0x2a0),addmod(mload(0xc20),sub(PRIME,mload(0x200)),PRIME),PRIME),PRIME)mstore(0xe40,val)}{letval:=addmod(mulmod(mload(0x2e0),addmod(mload(0xac0),sub(PRIME,mload(0xc0)),PRIME),PRIME),mulmod(mload(0x300),addmod(mload(0xc20),sub(PRIME,mload(0x200)),PRIME),PRIME),PRIME)mstore(0xe60,val)}{letval:=addmod(mulmod(mload(0x280),addmod(mload(0xae0),sub(PRIME,mload(0xe0)),PRIME),PRIME),mulmod(mload(0x2a0),addmod(mload(0xc40),sub(PRIME,mload(0x220)),PRIME),PRIME),PRIME)mstore(0xe80,val)}{letval:=addmod(mulmod(mload(0x2e0),addmod(mload(0xae0),sub(PRIME,mload(0xe0)),PRIME),PRIME),mulmod(mload(0x300),addmod(mload(0xc40),sub(PRIME,mload(0x220)),PRIME),PRIME),PRIME)mstore(0xea0,val)}{letval:=addmod(mulmod(mload(0x280),addmod(mload(0xb00),sub(PRIME,mload(0x100)),PRIME),PRIME),mulmod(mload(0x2a0),addmod(mload(0xc60),sub(PRIME,mload(0x240)),PRIME),PRIME),PRIME)mstore(0xec0,val)}{letval:=addmod(mulmod(mload(0x2e0),addmod(mload(0xb00),sub(PRIME,mload(0x100)),PRIME),PRIME),mulmod(mload(0x300),addmod(mload(0xc60),sub(PRIME,mload(0x240)),PRIME),PRIME),PRIME)mstore(0xee0,val)}{letval:=addmod(mulmod(mload(0x280),addmod(mload(0xb20),sub(PRIME,mload(0x120)),PRIME),PRIME),mulmod(mload(0x2a0),addmod(mload(0xc80),sub(PRIME,mload(0x260)),PRIME),PRIME),PRIME)mstore(0xf00,val)}{letval:=addmod(mulmod(mload(0x2e0),addmod(mload(0xb20),sub(PRIME,mload(0x120)),PRIME),PRIME),mulmod(mload(0x300),addmod(mload(0xc80),sub(PRIME,mload(0x260)),PRIME),PRIME),PRIME)mstore(0xf20,val)}{letval:=addmod(mload(0xa20),sub(PRIME,mulmod(mulmod(mload(0xcc0),mload(0xcc0),PRIME),mload(0xcc0),PRIME)),PRIME)val:=mulmod(val,mload(0xf80),PRIME)res:=addmod(res,mulmod(val,add(mload(0x3e0),mulmod(mload(0x400),mload(0x1060),PRIME)),PRIME),PRIME)}{letval:=addmod(mload(0xb80),sub(PRIME,mulmod(mulmod(mload(0xce0),mload(0xce0),PRIME),mload(0xce0),PRIME)),PRIME)val:=mulmod(val,mload(0xf80),PRIME)res:=addmod(res,mulmod(val,add(mload(0x420),mulmod(mload(0x440),mload(0x1060),PRIME)),PRIME),PRIME)}{letval:=addmod(mload(0xa40),sub(PRIME,mulmod(mulmod(mload(0xd00),mload(0xd00),PRIME),mload(0xd00),PRIME)),PRIME)val:=mulmod(val,mload(0xf80),PRIME)res:=addmod(res,mulmod(val,add(mload(0x460),mulmod(mload(0x480),mload(0x1060),PRIME)),PRIME),PRIME)}{letval:=addmod(mload(0xba0),sub(PRIME,mulmod(mulmod(mload(0xd20),mload(0xd20),PRIME),mload(0xd20),PRIME)),PRIME)val:=mulmod(val,mload(0xf80),PRIME)res:=addmod(res,mulmod(val,add(mload(0x4a0),mulmod(mload(0x4c0),mload(0x1060),PRIME)),PRIME),PRIME)}{letval:=addmod(mload(0xa60),sub(PRIME,mulmod(mulmod(mload(0xd40),mload(0xd40),PRIME),mload(0xd40),PRIME)),PRIME)val:=mulmod(val,mload(0xf80),PRIME)res:=addmod(res,mulmod(val,add(mload(0x4e0),mulmod(mload(0x500),mload(0x1060),PRIME)),PRIME),PRIME)}{letval:=addmod(mload(0xbc0),sub(PRIME,mulmod(mulmod(mload(0xd60),mload(0xd60),PRIME),mload(0xd60),PRIME)),PRIME)val:=mulmod(val,mload(0xf80),PRIME)res:=addmod(res,mulmod(val,add(mload(0x520),mulmod(mload(0x540),mload(0x1060),PRIME)),PRIME),PRIME)}{letval:=addmod(mload(0xa80),sub(PRIME,mulmod(mulmod(mload(0xd80),mload(0xd80),PRIME),mload(0xd80),PRIME)),PRIME)val:=mulmod(val,mload(0xf80),PRIME)res:=addmod(res,mulmod(val,add(mload(0x560),mulmod(mload(0x580),mload(0x1060),PRIME)),PRIME),PRIME)}{letval:=addmod(mload(0xbe0),sub(PRIME,mulmod(mulmod(mload(0xda0),mload(0xda0),PRIME),mload(0xda0),PRIME)),PRIME)val:=mulmod(val,mload(0xf80),PRIME)res:=addmod(res,mulmod(val,add(mload(0x5a0),mulmod(mload(0x5c0),mload(0x1060),PRIME)),PRIME),PRIME)}{letval:=addmod(mload(0xaa0),sub(PRIME,mulmod(mulmod(mload(0xdc0),mload(0xdc0),PRIME),mload(0xdc0),PRIME)),PRIME)val:=mulmod(val,mload(0xf80),PRIME)res:=addmod(res,mulmod(val,add(mload(0x5e0),mulmod(mload(0x600),mload(0x1060),PRIME)),PRIME),PRIME)}{letval:=addmod(mload(0xc00),sub(PRIME,mulmod(mulmod(mload(0xde0),mload(0xde0),PRIME),mload(0xde0),PRIME)),PRIME)val:=mulmod(val,mload(0xf80),PRIME)res:=addmod(res,mulmod(val,add(mload(0x620),mulmod(mload(0x640),mload(0x1060),PRIME)),PRIME),PRIME)}{letval:=addmod(mload(0xac0),sub(PRIME,mulmod(mulmod(mload(0xe00),mload(0xe00),PRIME),mload(0xe00),PRIME)),PRIME)val:=mulmod(val,mload(0xf80),PRIME)res:=addmod(res,mulmod(val,add(mload(0x660),mulmod(mload(0x680),mload(0x1060),PRIME)),PRIME),PRIME)}{letval:=addmod(mload(0xc20),sub(PRIME,mulmod(mulmod(mload(0xe20),mload(0xe20),PRIME),mload(0xe20),PRIME)),PRIME)val:=mulmod(val,mload(0xf80),PRIME)res:=addmod(res,mulmod(val,add(mload(0x6a0),mulmod(mload(0x6c0),mload(0x1060),PRIME)),PRIME),PRIME)}{letval:=addmod(mload(0xae0),sub(PRIME,mulmod(mulmod(mload(0xe40),mload(0xe40),PRIME),mload(0xe40),PRIME)),PRIME)val:=mulmod(val,mload(0xf80),PRIME)res:=addmod(res,mulmod(val,add(mload(0x6e0),mulmod(mload(0x700),mload(0x1060),PRIME)),PRIME),PRIME)}{letval:=addmod(mload(0xc40),sub(PRIME,mulmod(mulmod(mload(0xe60),mload(0xe60),PRIME),mload(0xe60),PRIME)),PRIME)val:=mulmod(val,mload(0xf80),PRIME)res:=addmod(res,mulmod(val,add(mload(0x720),mulmod(mload(0x740),mload(0x1060),PRIME)),PRIME),PRIME)}{letval:=addmod(mload(0xb00),sub(PRIME,mulmod(mulmod(mload(0xe80),mload(0xe80),PRIME),mload(0xe80),PRIME)),PRIME)val:=mulmod(val,mload(0xf80),PRIME)res:=addmod(res,mulmod(val,add(mload(0x760),mulmod(mload(0x780),mload(0x1060),PRIME)),PRIME),PRIME)}{letval:=addmod(mload(0xc60),sub(PRIME,mulmod(mulmod(mload(0xea0),mload(0xea0),PRIME),mload(0xea0),PRIME)),PRIME)val:=mulmod(val,mload(0xf80),PRIME)res:=addmod(res,mulmod(val,add(mload(0x7a0),mulmod(mload(0x7c0),mload(0x1060),PRIME)),PRIME),PRIME)}{letval:=addmod(mload(0xb20),sub(PRIME,mulmod(mulmod(mload(0xec0),mload(0xec0),PRIME),mload(0xec0),PRIME)),PRIME)val:=mulmod(val,mload(0xf80),PRIME)res:=addmod(res,mulmod(val,add(mload(0x7e0),mulmod(mload(0x800),mload(0x1060),PRIME)),PRIME),PRIME)}{letval:=addmod(mload(0xc80),sub(PRIME,mulmod(mulmod(mload(0xee0),mload(0xee0),PRIME),mload(0xee0),PRIME)),PRIME)val:=mulmod(val,mload(0xf80),PRIME)res:=addmod(res,mulmod(val,add(mload(0x820),mulmod(mload(0x840),mload(0x1060),PRIME)),PRIME),PRIME)}{letval:=addmod(mload(0xa00),sub(PRIME,mulmod(mulmod(mload(0xf00),mload(0xf00),PRIME),mload(0xf00),PRIME)),PRIME)val:=mulmod(val,mload(0x1040),PRIME)val:=mulmod(val,mload(0xf80),PRIME)res:=addmod(res,mulmod(val,add(mload(0x860),mulmod(mload(0x880),mload(0x1080),PRIME)),PRIME),PRIME)}{letval:=addmod(mload(0xb60),sub(PRIME,mulmod(mulmod(mload(0xf20),mload(0xf20),PRIME),mload(0xf20),PRIME)),PRIME)val:=mulmod(val,mload(0x1040),PRIME)val:=mulmod(val,mload(0xf80),PRIME)res:=addmod(res,mulmod(val,add(mload(0x8a0),mulmod(mload(0x8c0),mload(0x1080),PRIME)),PRIME),PRIME)}{letval:=addmod(mload(0x9e0),sub(PRIME,mload(0x320)),PRIME)val:=mulmod(val,mload(0xfa0),PRIME)res:=addmod(res,mulmod(val,add(mload(0x8e0),mulmod(mload(0x900),mload(0x10a0),PRIME)),PRIME),PRIME)}{letval:=addmod(mload(0xb20),sub(PRIME,mload(0x340)),PRIME)val:=mulmod(val,mload(0xfc0),PRIME)res:=addmod(res,mulmod(val,add(mload(0x920),mulmod(mload(0x940),mload(0x10a0),PRIME)),PRIME),PRIME)}{letval:=addmod(mload(0xb40),sub(PRIME,mload(0x360)),PRIME)val:=mulmod(val,mload(0xfa0),PRIME)res:=addmod(res,mulmod(val,add(mload(0x960),mulmod(mload(0x980),mload(0x10a0),PRIME)),PRIME),PRIME)}{letval:=addmod(mload(0xc80),sub(PRIME,mload(0x380)),PRIME)val:=mulmod(val,mload(0xfc0),PRIME)res:=addmod(res,mulmod(val,add(mload(0x9a0),mulmod(mload(0x9c0),mload(0x10a0),PRIME)),PRIME),PRIME)}mstore(0,res)return(0,0x20)}}}",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "res",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "PRIME"
                        }
                      ],
                      "expression": {
                        "type": "HexNumber",
                        "value": "0x30000003000000010000000000000001"
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "calldatacopy",
                      "arguments": [
                        {
                          "type": "HexNumber",
                          "value": "0x0"
                        },
                        {
                          "type": "HexNumber",
                          "value": "0x0"
                        },
                        {
                          "type": "HexNumber",
                          "value": "0xca0"
                        }
                      ]
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "point"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "HexNumber",
                            "value": "0x3c0"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "HexNumber",
                          "value": "0xca0"
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "mul",
                          "arguments": [
                            {
                              "type": "DecimalNumber",
                              "value": "2"
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "mload",
                              "arguments": [
                                {
                                  "type": "HexNumber",
                                  "value": "0x2c0"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AssemblyFunctionDefinition",
                      "name": "expmod",
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "base"
                        },
                        {
                          "type": "Identifier",
                          "name": "exponent"
                        },
                        {
                          "type": "Identifier",
                          "name": "modulus"
                        }
                      ],
                      "returnArguments": [
                        {
                          "type": "Identifier",
                          "name": "res"
                        }
                      ],
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "p"
                              }
                            ],
                            "expression": {
                              "type": "HexNumber",
                              "value": "0x10c0"
                            }
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "p",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x20"
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "p",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x20"
                                  }
                                ]
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x20"
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "p",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x40"
                                  }
                                ]
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x20"
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "p",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x60"
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "base",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "p",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x80"
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "exponent",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "p",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0xa0"
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "modulus",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyIf",
                            "condition": {
                              "type": "AssemblyExpression",
                              "functionName": "iszero",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "staticcall",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "not",
                                      "arguments": [
                                        {
                                          "type": "DecimalNumber",
                                          "value": "0"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "HexNumber",
                                      "value": "0x05"
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "p",
                                      "arguments": []
                                    },
                                    {
                                      "type": "HexNumber",
                                      "value": "0xc0"
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "p",
                                      "arguments": []
                                    },
                                    {
                                      "type": "HexNumber",
                                      "value": "0x20"
                                    }
                                  ]
                                }
                              ]
                            },
                            "body": {
                              "type": "AssemblyBlock",
                              "operations": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "revert",
                                  "arguments": [
                                    {
                                      "type": "DecimalNumber",
                                      "value": "0"
                                    },
                                    {
                                      "type": "DecimalNumber",
                                      "value": "0"
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "res"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mload",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "p",
                                  "arguments": []
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyFunctionDefinition",
                      "name": "degreeAdjustment",
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "compositionPolynomialDegreeBound"
                        },
                        {
                          "type": "Identifier",
                          "name": "constraintDegree"
                        },
                        {
                          "type": "Identifier",
                          "name": "numeratorDegree"
                        },
                        {
                          "type": "Identifier",
                          "name": "denominatorDegree"
                        }
                      ],
                      "returnArguments": [
                        {
                          "type": "Identifier",
                          "name": "res"
                        }
                      ],
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "res"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "sub",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "sub",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "compositionPolynomialDegreeBound",
                                      "arguments": []
                                    },
                                    {
                                      "type": "DecimalNumber",
                                      "value": "1"
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "sub",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "add",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "constraintDegree",
                                          "arguments": []
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "numeratorDegree",
                                          "arguments": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "denominatorDegree",
                                      "arguments": []
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "mstore",
                          "arguments": [
                            {
                              "type": "HexNumber",
                              "value": "0xf40"
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "expmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "point",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mload",
                                  "arguments": [
                                    {
                                      "type": "HexNumber",
                                      "value": "0x2c0"
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "PRIME",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "mstore",
                          "arguments": [
                            {
                              "type": "HexNumber",
                              "value": "0xf60"
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "expmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mload",
                                  "arguments": [
                                    {
                                      "type": "HexNumber",
                                      "value": "0x3a0"
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "sub",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "HexNumber",
                                          "value": "0x2c0"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "DecimalNumber",
                                      "value": "1"
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "PRIME",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "mstore",
                          "arguments": [
                            {
                              "type": "HexNumber",
                              "value": "0xfe0"
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "addmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mload",
                                  "arguments": [
                                    {
                                      "type": "HexNumber",
                                      "value": "0xf40"
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "sub",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    },
                                    {
                                      "type": "DecimalNumber",
                                      "value": "1"
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "PRIME",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "mstore",
                          "arguments": [
                            {
                              "type": "HexNumber",
                              "value": "0x1000"
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "addmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "point",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "sub",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    },
                                    {
                                      "type": "DecimalNumber",
                                      "value": "1"
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "PRIME",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "mstore",
                          "arguments": [
                            {
                              "type": "HexNumber",
                              "value": "0x1020"
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "addmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "point",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "sub",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "HexNumber",
                                          "value": "0xf60"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "PRIME",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "productsToValuesOffset"
                            }
                          ],
                          "expression": {
                            "type": "HexNumber",
                            "value": "0x60"
                          }
                        },
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "prod"
                            }
                          ],
                          "expression": {
                            "type": "DecimalNumber",
                            "value": "1"
                          }
                        },
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "partialProductEndPtr"
                            }
                          ],
                          "expression": {
                            "type": "HexNumber",
                            "value": "0xfe0"
                          }
                        },
                        {
                          "type": "AssemblyFor",
                          "pre": {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "partialProductPtr"
                                  }
                                ],
                                "expression": {
                                  "type": "HexNumber",
                                  "value": "0xf80"
                                }
                              }
                            ]
                          },
                          "condition": {
                            "type": "AssemblyExpression",
                            "functionName": "lt",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "partialProductPtr",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "partialProductEndPtr",
                                "arguments": []
                              }
                            ]
                          },
                          "post": {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "partialProductPtr"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "partialProductPtr",
                                      "arguments": []
                                    },
                                    {
                                      "type": "HexNumber",
                                      "value": "0x20"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "body": {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mstore",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "partialProductPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "prod",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "prod"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "prod",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "partialProductPtr",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "productsToValuesOffset",
                                              "arguments": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "firstPartialProductPtr"
                            }
                          ],
                          "expression": {
                            "type": "HexNumber",
                            "value": "0xf80"
                          }
                        },
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "prodInv"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "expmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "prod",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "sub",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  },
                                  {
                                    "type": "DecimalNumber",
                                    "value": "2"
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyIf",
                          "condition": {
                            "type": "AssemblyExpression",
                            "functionName": "eq",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "prodInv",
                                "arguments": []
                              },
                              {
                                "type": "DecimalNumber",
                                "value": "0"
                              }
                            ]
                          },
                          "body": {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mstore",
                                "arguments": [
                                  {
                                    "type": "DecimalNumber",
                                    "value": "0"
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x08c379a000000000000000000000000000000000000000000000000000000000"
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mstore",
                                "arguments": [
                                  {
                                    "type": "HexNumber",
                                    "value": "0x4"
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x20"
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mstore",
                                "arguments": [
                                  {
                                    "type": "HexNumber",
                                    "value": "0x24"
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x1e"
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mstore",
                                "arguments": [
                                  {
                                    "type": "HexNumber",
                                    "value": "0x44"
                                  },
                                  {
                                    "type": "StringLiteral",
                                    "value": "Batch inverse product is zero."
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "revert",
                                "arguments": [
                                  {
                                    "type": "DecimalNumber",
                                    "value": "0"
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x62"
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "currentPartialProductPtr"
                            }
                          ],
                          "expression": {
                            "type": "HexNumber",
                            "value": "0xfe0"
                          }
                        },
                        {
                          "type": "AssemblyFor",
                          "pre": {
                            "type": "AssemblyBlock",
                            "operations": []
                          },
                          "condition": {
                            "type": "AssemblyExpression",
                            "functionName": "gt",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "currentPartialProductPtr",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "firstPartialProductPtr",
                                "arguments": []
                              }
                            ]
                          },
                          "post": {
                            "type": "AssemblyBlock",
                            "operations": []
                          },
                          "body": {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "currentPartialProductPtr"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "sub",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "currentPartialProductPtr",
                                      "arguments": []
                                    },
                                    {
                                      "type": "HexNumber",
                                      "value": "0x20"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mstore",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "currentPartialProductPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "currentPartialProductPtr",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "prodInv",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "prodInv"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "prodInv",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "currentPartialProductPtr",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "productsToValuesOffset",
                                              "arguments": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "mstore",
                          "arguments": [
                            {
                              "type": "HexNumber",
                              "value": "0x1040"
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "addmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "point",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "sub",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "HexNumber",
                                          "value": "0xf60"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "PRIME",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "mstore",
                          "arguments": [
                            {
                              "type": "HexNumber",
                              "value": "0x1060"
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "expmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "point",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "degreeAdjustment",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "HexNumber",
                                          "value": "0xca0"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mul",
                                      "arguments": [
                                        {
                                          "type": "DecimalNumber",
                                          "value": "3"
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "sub",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "HexNumber",
                                                  "value": "0x2c0"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "DecimalNumber",
                                              "value": "1"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "DecimalNumber",
                                      "value": "0"
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "HexNumber",
                                          "value": "0x2c0"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "PRIME",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "mstore",
                          "arguments": [
                            {
                              "type": "HexNumber",
                              "value": "0x1080"
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "expmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "point",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "degreeAdjustment",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "HexNumber",
                                          "value": "0xca0"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mul",
                                      "arguments": [
                                        {
                                          "type": "DecimalNumber",
                                          "value": "3"
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "sub",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "HexNumber",
                                                  "value": "0x2c0"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "DecimalNumber",
                                              "value": "1"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "DecimalNumber",
                                      "value": "1"
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "HexNumber",
                                          "value": "0x2c0"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "PRIME",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "mstore",
                          "arguments": [
                            {
                              "type": "HexNumber",
                              "value": "0x10a0"
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "expmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "point",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "degreeAdjustment",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "HexNumber",
                                          "value": "0xca0"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "sub",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mload",
                                          "arguments": [
                                            {
                                              "type": "HexNumber",
                                              "value": "0x2c0"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "DecimalNumber",
                                          "value": "1"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "DecimalNumber",
                                      "value": "0"
                                    },
                                    {
                                      "type": "DecimalNumber",
                                      "value": "1"
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "PRIME",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x280"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0x9e0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x0"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x2a0"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xb40"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x140"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "mstore",
                              "arguments": [
                                {
                                  "type": "HexNumber",
                                  "value": "0xcc0"
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "val",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x2e0"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0x9e0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x0"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x300"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xb40"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x140"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "mstore",
                              "arguments": [
                                {
                                  "type": "HexNumber",
                                  "value": "0xce0"
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "val",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x280"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xa20"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x20"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x2a0"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xb80"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x160"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "mstore",
                              "arguments": [
                                {
                                  "type": "HexNumber",
                                  "value": "0xd00"
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "val",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x2e0"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xa20"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x20"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x300"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xb80"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x160"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "mstore",
                              "arguments": [
                                {
                                  "type": "HexNumber",
                                  "value": "0xd20"
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "val",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x280"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xa40"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x40"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x2a0"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xba0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x180"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "mstore",
                              "arguments": [
                                {
                                  "type": "HexNumber",
                                  "value": "0xd40"
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "val",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x2e0"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xa40"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x40"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x300"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xba0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x180"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "mstore",
                              "arguments": [
                                {
                                  "type": "HexNumber",
                                  "value": "0xd60"
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "val",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x280"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xa60"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x60"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x2a0"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xbc0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x1a0"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "mstore",
                              "arguments": [
                                {
                                  "type": "HexNumber",
                                  "value": "0xd80"
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "val",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x2e0"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xa60"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x60"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x300"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xbc0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x1a0"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "mstore",
                              "arguments": [
                                {
                                  "type": "HexNumber",
                                  "value": "0xda0"
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "val",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x280"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xa80"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x80"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x2a0"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xbe0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x1c0"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "mstore",
                              "arguments": [
                                {
                                  "type": "HexNumber",
                                  "value": "0xdc0"
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "val",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x2e0"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xa80"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x80"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x300"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xbe0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x1c0"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "mstore",
                              "arguments": [
                                {
                                  "type": "HexNumber",
                                  "value": "0xde0"
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "val",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x280"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xaa0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xa0"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x2a0"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xc00"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x1e0"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "mstore",
                              "arguments": [
                                {
                                  "type": "HexNumber",
                                  "value": "0xe00"
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "val",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x2e0"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xaa0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xa0"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x300"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xc00"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x1e0"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "mstore",
                              "arguments": [
                                {
                                  "type": "HexNumber",
                                  "value": "0xe20"
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "val",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x280"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xac0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xc0"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x2a0"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xc20"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x200"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "mstore",
                              "arguments": [
                                {
                                  "type": "HexNumber",
                                  "value": "0xe40"
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "val",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x2e0"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xac0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xc0"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x300"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xc20"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x200"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "mstore",
                              "arguments": [
                                {
                                  "type": "HexNumber",
                                  "value": "0xe60"
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "val",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x280"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xae0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xe0"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x2a0"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xc40"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x220"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "mstore",
                              "arguments": [
                                {
                                  "type": "HexNumber",
                                  "value": "0xe80"
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "val",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x2e0"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xae0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xe0"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x300"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xc40"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x220"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "mstore",
                              "arguments": [
                                {
                                  "type": "HexNumber",
                                  "value": "0xea0"
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "val",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x280"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xb00"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x100"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x2a0"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xc60"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x240"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "mstore",
                              "arguments": [
                                {
                                  "type": "HexNumber",
                                  "value": "0xec0"
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "val",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x2e0"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xb00"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x100"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x300"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xc60"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x240"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "mstore",
                              "arguments": [
                                {
                                  "type": "HexNumber",
                                  "value": "0xee0"
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "val",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x280"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xb20"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x120"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x2a0"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xc80"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x260"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "mstore",
                              "arguments": [
                                {
                                  "type": "HexNumber",
                                  "value": "0xf00"
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "val",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x2e0"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xb20"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x120"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x300"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "addmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xc80"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x260"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "mstore",
                              "arguments": [
                                {
                                  "type": "HexNumber",
                                  "value": "0xf20"
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "val",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xa20"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xcc0"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xcc0"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xcc0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "val",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xf80"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "res"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "res",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "val",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0x3e0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x400"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x1060"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xb80"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xce0"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xce0"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xce0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "val",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xf80"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "res"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "res",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "val",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0x420"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x440"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x1060"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xa40"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xd00"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xd00"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xd00"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "val",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xf80"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "res"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "res",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "val",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0x460"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x480"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x1060"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xba0"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xd20"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xd20"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xd20"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "val",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xf80"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "res"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "res",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "val",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0x4a0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x4c0"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x1060"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xa60"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xd40"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xd40"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xd40"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "val",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xf80"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "res"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "res",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "val",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0x4e0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x500"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x1060"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xbc0"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xd60"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xd60"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xd60"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "val",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xf80"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "res"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "res",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "val",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0x520"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x540"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x1060"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xa80"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xd80"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xd80"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xd80"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "val",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xf80"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "res"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "res",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "val",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0x560"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x580"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x1060"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xbe0"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xda0"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xda0"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xda0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "val",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xf80"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "res"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "res",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "val",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0x5a0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x5c0"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x1060"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xaa0"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xdc0"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xdc0"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xdc0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "val",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xf80"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "res"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "res",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "val",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0x5e0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x600"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x1060"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xc00"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xde0"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xde0"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xde0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "val",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xf80"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "res"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "res",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "val",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0x620"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x640"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x1060"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xac0"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xe00"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xe00"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xe00"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "val",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xf80"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "res"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "res",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "val",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0x660"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x680"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x1060"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xc20"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xe20"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xe20"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xe20"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "val",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xf80"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "res"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "res",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "val",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0x6a0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x6c0"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x1060"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xae0"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xe40"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xe40"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xe40"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "val",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xf80"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "res"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "res",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "val",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0x6e0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x700"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x1060"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xc40"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xe60"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xe60"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xe60"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "val",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xf80"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "res"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "res",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "val",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0x720"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x740"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x1060"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xb00"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xe80"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xe80"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xe80"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "val",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xf80"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "res"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "res",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "val",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0x760"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x780"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x1060"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xc60"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xea0"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xea0"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xea0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "val",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xf80"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "res"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "res",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "val",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0x7a0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x7c0"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x1060"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xb20"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xec0"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xec0"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xec0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "val",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xf80"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "res"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "res",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "val",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0x7e0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x800"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x1060"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xc80"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xee0"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xee0"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xee0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "val",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xf80"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "res"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "res",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "val",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0x820"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x840"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x1060"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xa00"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xf00"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xf00"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xf00"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "val",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0x1040"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "val",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xf80"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "res"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "res",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "val",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0x860"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x880"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x1080"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xb60"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xf20"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0xf20"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0xf20"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "val",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0x1040"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "val",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xf80"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "res"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "res",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "val",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0x8a0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x8c0"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x1080"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0x9e0"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x320"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "val",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xfa0"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "res"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "res",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "val",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0x8e0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x900"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x10a0"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xb20"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x340"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "val",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xfc0"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "res"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "res",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "val",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0x920"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x940"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x10a0"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xb40"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x360"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "val",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xfa0"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "res"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "res",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "val",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0x960"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x980"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x10a0"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xc80"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "HexNumber",
                                            "value": "0x380"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "val",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0xfc0"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "res"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "addmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "res",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "val",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "HexNumber",
                                                "value": "0x9a0"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x9c0"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x10a0"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "mstore",
                          "arguments": [
                            {
                              "type": "DecimalNumber",
                              "value": "0"
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "res",
                              "arguments": []
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "return",
                          "arguments": [
                            {
                              "type": "DecimalNumber",
                              "value": "0"
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x20"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "PeriodicColumnContract",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "compute",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "x",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "result",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "PrimeFieldElement6",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "K_MODULUS",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x30000003000000010000000000000001",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x30000003000000010000000000000001",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "K_MODULUS_MASK",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x3fffffffffffffffffffffffffffffff",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x3fffffffffffffffffffffffffffffff",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "K_MONTGOMERY_R",
              "expression": {
                "type": "NumberLiteral",
                "number": "0xffffff0fffffffafffffffffffffffb",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0xffffff0fffffffafffffffffffffffb",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "K_MONTGOMERY_R_INV",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x9000001200000096000000600000001",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x9000001200000096000000600000001",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "GENERATOR_VAL",
              "expression": {
                "type": "NumberLiteral",
                "number": "3",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "3",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "ONE_VAL",
              "expression": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "GEN1024_VAL",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x2361be682e1cc2d366e86e194024739f",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x2361be682e1cc2d366e86e194024739f",
            "subdenomination": null
          }
        },
        {
          "type": "FunctionDefinition",
          "name": "fromMontgomery",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "val",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "res",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "res"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mulmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "val",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x9000001200000096000000600000001"
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x30000003000000010000000000000001"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "res"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "fromMontgomeryBytes",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "bs",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "res",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "bs"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "fromMontgomery"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "res"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "toMontgomeryInt",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "val",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "res",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "res"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mulmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "val",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0xffffff0fffffffafffffffffffffffb"
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x30000003000000010000000000000001"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "res"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "fmul",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "a",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "b",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "res",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "res"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mulmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "a",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "b",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x30000003000000010000000000000001"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "res"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "fadd",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "a",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "b",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "res",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "res"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "addmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "a",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "b",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x30000003000000010000000000000001"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "res"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "fsub",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "a",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "b",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "res",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "res"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "addmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "a",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "sub",
                            "arguments": [
                              {
                                "type": "HexNumber",
                                "value": "0x30000003000000010000000000000001"
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "b",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x30000003000000010000000000000001"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "res"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "fpow",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "val",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "exp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "expmod"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "val"
                  },
                  {
                    "type": "Identifier",
                    "name": "exp"
                  },
                  {
                    "type": "Identifier",
                    "name": "K_MODULUS"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "expmod",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "base",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "exponent",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "modulus",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "res",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "p"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "HexNumber",
                            "value": "0x40"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "p",
                          "arguments": []
                        },
                        {
                          "type": "HexNumber",
                          "value": "0x20"
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "p",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x20"
                            }
                          ]
                        },
                        {
                          "type": "HexNumber",
                          "value": "0x20"
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "p",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x40"
                            }
                          ]
                        },
                        {
                          "type": "HexNumber",
                          "value": "0x20"
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "p",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x60"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "base",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "p",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x80"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "exponent",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "p",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0xa0"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "modulus",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyIf",
                      "condition": {
                        "type": "AssemblyExpression",
                        "functionName": "iszero",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "call",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "not",
                                "arguments": [
                                  {
                                    "type": "DecimalNumber",
                                    "value": "0"
                                  }
                                ]
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x05"
                              },
                              {
                                "type": "DecimalNumber",
                                "value": "0"
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "p",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0xc0"
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "p",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x20"
                              }
                            ]
                          }
                        ]
                      },
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "revert",
                            "arguments": [
                              {
                                "type": "DecimalNumber",
                                "value": "0"
                              },
                              {
                                "type": "DecimalNumber",
                                "value": "0"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "res"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "p",
                            "arguments": []
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "inverse",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "val",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "expmod"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "val"
                  },
                  {
                    "type": "BinaryOperation",
                    "operator": "-",
                    "left": {
                      "type": "Identifier",
                      "name": "K_MODULUS"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  },
                  {
                    "type": "Identifier",
                    "name": "K_MODULUS"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "Prng",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "PrimeFieldElement6"
          },
          "arguments": null
        }
      ],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "storePrng",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "statePtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "digest",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "counter",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "statePtr",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "digest",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "statePtr",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x20"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "counter",
                          "arguments": []
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "loadPrng",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "statePtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes32"
                    },
                    "name": "digest",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "counter",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "digest"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "statePtr",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "counter"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "statePtr",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x20"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "TupleExpression",
                "components": [
                  {
                    "type": "Identifier",
                    "name": "digest"
                  },
                  {
                    "type": "Identifier",
                    "name": "counter"
                  }
                ],
                "isArray": false
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "initPrng",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "prngPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "publicInputHash",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "storePrng"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "prngPtr"
                    },
                    {
                      "type": "Identifier",
                      "name": "publicInputHash"
                    },
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "getRandomBytesInner",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "digest",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "counter",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes32"
                    },
                    "name": "randomBytes",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "keccak256"
                  },
                  "arguments": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "abi"
                        },
                        "memberName": "encodePacked"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "digest"
                        },
                        {
                          "type": "Identifier",
                          "name": "counter"
                        }
                      ],
                      "names": []
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "TupleExpression",
                "components": [
                  {
                    "type": "Identifier",
                    "name": "digest"
                  },
                  {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "Identifier",
                      "name": "counter"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  {
                    "type": "Identifier",
                    "name": "randomBytes"
                  }
                ],
                "isArray": false
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "getRandomBytes",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "prngPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "randomBytes",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes32"
                    },
                    "name": "digest",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "counter",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "Identifier",
                        "name": "digest"
                      },
                      {
                        "type": "Identifier",
                        "name": "counter"
                      }
                    ],
                    "isArray": false
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "loadPrng"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "prngPtr"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "Identifier",
                        "name": "digest"
                      },
                      {
                        "type": "Identifier",
                        "name": "counter"
                      },
                      {
                        "type": "Identifier",
                        "name": "randomBytes"
                      }
                    ],
                    "isArray": false
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "getRandomBytesInner"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "digest"
                      },
                      {
                        "type": "Identifier",
                        "name": "counter"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "storePrng"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "prngPtr"
                    },
                    {
                      "type": "Identifier",
                      "name": "digest"
                    },
                    {
                      "type": "Identifier",
                      "name": "counter"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "Identifier",
                "name": "randomBytes"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "mixSeedWithBytes",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "prngPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "dataBytes",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes32"
                    },
                    "name": "digest",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "digest"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "prngPtr",
                            "arguments": []
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "initPrng"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "prngPtr"
                    },
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "keccak256"
                      },
                      "arguments": [
                        {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "abi"
                            },
                            "memberName": "encodePacked"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "digest"
                            },
                            {
                              "type": "Identifier",
                              "name": "dataBytes"
                            }
                          ],
                          "names": []
                        }
                      ],
                      "names": []
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "getPrngDigest",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "prngPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "digest",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "digest"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "prngPtr",
                            "arguments": []
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "PublicInputOffsets",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "OFFSET_LOG_TRACE_LENGTH",
              "expression": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "OFFSET_VDF_OUTPUT_X",
              "expression": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "OFFSET_VDF_OUTPUT_Y",
              "expression": {
                "type": "NumberLiteral",
                "number": "2",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "2",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "OFFSET_VDF_INPUT_X",
              "expression": {
                "type": "NumberLiteral",
                "number": "3",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "3",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "OFFSET_VDF_INPUT_Y",
              "expression": {
                "type": "NumberLiteral",
                "number": "4",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "4",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "OFFSET_N_ITER",
              "expression": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
          }
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "StarkParameters",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "PrimeFieldElement6"
          },
          "arguments": null
        }
      ],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "N_COEFFICIENTS",
              "expression": {
                "type": "NumberLiteral",
                "number": "48",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "48",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MASK_SIZE",
              "expression": {
                "type": "NumberLiteral",
                "number": "22",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "22",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "N_ROWS_IN_MASK",
              "expression": {
                "type": "NumberLiteral",
                "number": "2",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "2",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "N_COLUMNS_IN_MASK",
              "expression": {
                "type": "NumberLiteral",
                "number": "20",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "20",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "CONSTRAINTS_DEGREE_BOUND",
              "expression": {
                "type": "NumberLiteral",
                "number": "2",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "2",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "N_OODS_VALUES",
              "expression": {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                  "type": "Identifier",
                  "name": "MASK_SIZE"
                },
                "right": {
                  "type": "Identifier",
                  "name": "CONSTRAINTS_DEGREE_BOUND"
                }
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "BinaryOperation",
            "operator": "+",
            "left": {
              "type": "Identifier",
              "name": "MASK_SIZE"
            },
            "right": {
              "type": "Identifier",
              "name": "CONSTRAINTS_DEGREE_BOUND"
            }
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "N_OODS_COEFFICIENTS",
              "expression": {
                "type": "Identifier",
                "name": "N_OODS_VALUES"
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "Identifier",
            "name": "N_OODS_VALUES"
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MAX_FRI_STEP",
              "expression": {
                "type": "NumberLiteral",
                "number": "3",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "3",
            "subdenomination": null
          }
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "VerifierChannel",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "Prng"
          },
          "arguments": null
        }
      ],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "CHANNEL_STATE_SIZE",
              "expression": {
                "type": "NumberLiteral",
                "number": "3",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "3",
            "subdenomination": null
          }
        },
        {
          "type": "EventDefinition",
          "name": "LogValue",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "val",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "SendRandomnessEvent",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "val",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "ReadFieldElementEvent",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "val",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "ReadHashEvent",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "val",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "FunctionDefinition",
          "name": "getPrngPtr",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "channelPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                  "type": "Identifier",
                  "name": "channelPtr"
                },
                "right": {
                  "type": "NumberLiteral",
                  "number": "0x20",
                  "subdenomination": null
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "initChannel",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "channelPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "proofPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "publicInputHash",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "channelPtr",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "proofPtr",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x20"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "initPrng"
                  },
                  "arguments": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "getPrngPtr"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "channelPtr"
                        }
                      ],
                      "names": []
                    },
                    {
                      "type": "Identifier",
                      "name": "publicInputHash"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "sendFieldElements",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "channelPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "nElements",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "targetPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "nElements"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "0x1000000",
                        "subdenomination": null
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Overflow protection failed."
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "PRIME"
                        }
                      ],
                      "expression": {
                        "type": "HexNumber",
                        "value": "0x30000003000000010000000000000001"
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "PRIME_MON_R_INV"
                        }
                      ],
                      "expression": {
                        "type": "HexNumber",
                        "value": "0x9000001200000096000000600000001"
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "PRIME_MASK"
                        }
                      ],
                      "expression": {
                        "type": "HexNumber",
                        "value": "0x3fffffffffffffffffffffffffffffff"
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "digestPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "channelPtr",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x20"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "counterPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "channelPtr",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x40"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "endPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "targetPtr",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mul",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "nElements",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x20"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyFor",
                      "pre": {
                        "type": "AssemblyBlock",
                        "operations": []
                      },
                      "condition": {
                        "type": "AssemblyExpression",
                        "functionName": "lt",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "targetPtr",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "endPtr",
                            "arguments": []
                          }
                        ]
                      },
                      "post": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "targetPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "targetPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "fieldElement"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "PRIME",
                              "arguments": []
                            }
                          },
                          {
                            "type": "AssemblyFor",
                            "pre": {
                              "type": "AssemblyBlock",
                              "operations": []
                            },
                            "condition": {
                              "type": "AssemblyExpression",
                              "functionName": "iszero",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "lt",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "fieldElement",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    }
                                  ]
                                }
                              ]
                            },
                            "post": {
                              "type": "AssemblyBlock",
                              "operations": []
                            },
                            "body": {
                              "type": "AssemblyBlock",
                              "operations": [
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "fieldElement"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "and",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "keccak256",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "digestPtr",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0x40"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME_MASK",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mstore",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "counterPtr",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "add",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mload",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "counterPtr",
                                              "arguments": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "DecimalNumber",
                                          "value": "1"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "targetPtr",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "fieldElement",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME_MON_R_INV",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "sendRandomQueries",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "channelPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "count",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "mask",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "queriesOutPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "stride",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "val",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "shift",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "endPtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "Identifier",
                  "name": "queriesOutPtr"
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "count"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": "==",
                        "left": {
                          "type": "Identifier",
                          "name": "shift"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      },
                      "TrueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "val"
                              },
                              "right": {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "ElementaryTypeName",
                                  "name": "uint256"
                                },
                                "arguments": [
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "Identifier",
                                      "name": "getRandomBytes"
                                    },
                                    "arguments": [
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "getPrngPtr"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "channelPtr"
                                          }
                                        ],
                                        "names": []
                                      }
                                    ],
                                    "names": []
                                  }
                                ],
                                "names": []
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "shift"
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "0x100",
                                "subdenomination": null
                              }
                            }
                          }
                        ]
                      },
                      "FalseBody": null
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "-=",
                        "left": {
                          "type": "Identifier",
                          "name": "shift"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0x40",
                          "subdenomination": null
                        }
                      }
                    },
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint256"
                          },
                          "name": "queryIdx",
                          "storageLocation": null
                        }
                      ],
                      "initialValue": {
                        "type": "BinaryOperation",
                        "operator": "&",
                        "left": {
                          "type": "TupleExpression",
                          "components": [
                            {
                              "type": "BinaryOperation",
                              "operator": ">>",
                              "left": {
                                "type": "Identifier",
                                "name": "val"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "shift"
                              }
                            }
                          ],
                          "isArray": false
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "mask"
                        }
                      }
                    },
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint256"
                          },
                          "name": "ptr",
                          "storageLocation": null
                        }
                      ],
                      "initialValue": {
                        "type": "Identifier",
                        "name": "endPtr"
                      }
                    },
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint256"
                          },
                          "name": "curr",
                          "storageLocation": null
                        }
                      ],
                      "initialValue": null
                    },
                    {
                      "type": "WhileStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": ">",
                        "left": {
                          "type": "Identifier",
                          "name": "ptr"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "queriesOutPtr"
                        }
                      },
                      "body": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "InLineAssemblyStatement",
                            "language": null,
                            "body": {
                              "type": "AssemblyBlock",
                              "operations": [
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "curr"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "sub",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "ptr",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "stride",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "type": "IfStatement",
                            "condition": {
                              "type": "BinaryOperation",
                              "operator": ">=",
                              "left": {
                                "type": "Identifier",
                                "name": "queryIdx"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "curr"
                              }
                            },
                            "TrueBody": {
                              "type": "Block",
                              "statements": [
                                ";"
                              ]
                            },
                            "FalseBody": null
                          },
                          {
                            "type": "InLineAssemblyStatement",
                            "language": null,
                            "body": {
                              "type": "AssemblyBlock",
                              "operations": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mstore",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "ptr",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "curr",
                                      "arguments": []
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "-=",
                              "left": {
                                "type": "Identifier",
                                "name": "ptr"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "stride"
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": "!=",
                        "left": {
                          "type": "Identifier",
                          "name": "queryIdx"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "curr"
                        }
                      },
                      "TrueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "InLineAssemblyStatement",
                            "language": null,
                            "body": {
                              "type": "AssemblyBlock",
                              "operations": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mstore",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "ptr",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "queryIdx",
                                      "arguments": []
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "+=",
                              "left": {
                                "type": "Identifier",
                                "name": "endPtr"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "stride"
                              }
                            }
                          }
                        ]
                      },
                      "FalseBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "WhileStatement",
                            "condition": {
                              "type": "BinaryOperation",
                              "operator": "<",
                              "left": {
                                "type": "Identifier",
                                "name": "ptr"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "endPtr"
                              }
                            },
                            "body": {
                              "type": "Block",
                              "statements": [
                                {
                                  "type": "InLineAssemblyStatement",
                                  "language": null,
                                  "body": {
                                    "type": "AssemblyBlock",
                                    "operations": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mstore",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "ptr",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "add",
                                                "arguments": [
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "ptr",
                                                    "arguments": []
                                                  },
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "stride",
                                                    "arguments": []
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyAssignment",
                                        "names": [
                                          {
                                            "type": "Identifier",
                                            "name": "ptr"
                                          }
                                        ],
                                        "expression": {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "ptr",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "stride",
                                              "arguments": []
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "BinaryOperation",
                "operator": "/",
                "left": {
                  "type": "TupleExpression",
                  "components": [
                    {
                      "type": "BinaryOperation",
                      "operator": "-",
                      "left": {
                        "type": "Identifier",
                        "name": "endPtr"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "queriesOutPtr"
                      }
                    }
                  ],
                  "isArray": false
                },
                "right": {
                  "type": "Identifier",
                  "name": "stride"
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "readBytes",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "channelPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": "mix",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "proofPtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes32"
                    },
                    "name": "val",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "proofPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "channelPtr",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "val"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "proofPtr",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "channelPtr",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "proofPtr",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x20"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "Identifier",
                  "name": "mix"
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "InLineAssemblyStatement",
                      "language": null,
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "digestPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "channelPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "counterPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "digestPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "counterPtr",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "val",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "digestPtr",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "keccak256",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "digestPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x40"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "counterPtr",
                                "arguments": []
                              },
                              {
                                "type": "DecimalNumber",
                                "value": "0"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "Identifier",
                "name": "val"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "readHash",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "channelPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": "mix",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes32"
                    },
                    "name": "val",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "readBytes"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "channelPtr"
                    },
                    {
                      "type": "Identifier",
                      "name": "mix"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "Identifier",
                "name": "val"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "readFieldElement",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "channelPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": "mix",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "val",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "fromMontgomery"
                  },
                  "arguments": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "arguments": [
                        {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "readBytes"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "channelPtr"
                            },
                            {
                              "type": "Identifier",
                              "name": "mix"
                            }
                          ],
                          "names": []
                        }
                      ],
                      "names": []
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "Identifier",
                "name": "val"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "verifyProofOfWork",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "channelPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "proofOfWorkBits",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                    "type": "Identifier",
                    "name": "proofOfWorkBits"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    null
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "proofOfWorkDigest",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "DecimalNumber",
                          "value": "0"
                        },
                        {
                          "type": "HexNumber",
                          "value": "0x0123456789abcded000000000000000000000000000000000000000000000000"
                        }
                      ]
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "digest"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "channelPtr",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x20"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "HexNumber",
                          "value": "0x8"
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "digest",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore8",
                      "arguments": [
                        {
                          "type": "HexNumber",
                          "value": "0x28"
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "proofOfWorkBits",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "DecimalNumber",
                          "value": "0"
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "keccak256",
                          "arguments": [
                            {
                              "type": "DecimalNumber",
                              "value": "0"
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x29"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "proofPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "channelPtr",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "HexNumber",
                          "value": "0x20"
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "mload",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "proofPtr",
                              "arguments": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "proofOfWorkDigest"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "keccak256",
                        "arguments": [
                          {
                            "type": "DecimalNumber",
                            "value": "0"
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x28"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "DecimalNumber",
                          "value": "0"
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "digest",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "channelPtr",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x20"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "keccak256",
                          "arguments": [
                            {
                              "type": "DecimalNumber",
                              "value": "0"
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x28"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "channelPtr",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x40"
                            }
                          ]
                        },
                        {
                          "type": "DecimalNumber",
                          "value": "0"
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "channelPtr",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "proofPtr",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x8"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "proofOfWorkThreshold",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "<<",
                  "left": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "arguments": [
                      {
                        "type": "NumberLiteral",
                        "number": "1",
                        "subdenomination": null
                      }
                    ],
                    "names": []
                  },
                  "right": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "BinaryOperation",
                        "operator": "-",
                        "left": {
                          "type": "NumberLiteral",
                          "number": "256",
                          "subdenomination": null
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "proofOfWorkBits"
                        }
                      }
                    ],
                    "isArray": false
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "proofOfWorkDigest"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "proofOfWorkThreshold"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Proof of work check failed."
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "FactRegistry",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "IQueryableFactRegistry"
          },
          "arguments": null
        }
      ],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "Mapping",
                "keyType": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "valueType": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                }
              },
              "name": "verifiedFact",
              "expression": null,
              "visibility": "private",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "bool"
              },
              "name": "anyFactRegistered",
              "expression": null,
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "FunctionDefinition",
          "name": "isValid",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "fact",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "IndexAccess",
                "base": {
                  "type": "Identifier",
                  "name": "verifiedFact"
                },
                "index": {
                  "type": "Identifier",
                  "name": "fact"
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "registerFact",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "factHash",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "verifiedFact"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "factHash"
                    }
                  },
                  "right": {
                    "type": "BooleanLiteral",
                    "value": true
                  }
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "UnaryOperation",
                  "operator": "!",
                  "subExpression": {
                    "type": "Identifier",
                    "name": "anyFactRegistered"
                  },
                  "isPrefix": true
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "anyFactRegistered"
                        },
                        "right": {
                          "type": "BooleanLiteral",
                          "value": true
                        }
                      }
                    }
                  ]
                },
                "FalseBody": null
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "hasRegisteredFact",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "Identifier",
                "name": "anyFactRegistered"
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "FriLayer",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "MerkleVerifier"
          },
          "arguments": null
        },
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "PrimeFieldElement6"
          },
          "arguments": null
        }
      ],
      "subNodes": [
        {
          "type": "EventDefinition",
          "name": "LogGas",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "name",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "val",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "FRI_MAX_FRI_STEP",
              "expression": {
                "type": "NumberLiteral",
                "number": "4",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "4",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MAX_COSET_SIZE",
              "expression": {
                "type": "BinaryOperation",
                "operator": "**",
                "left": {
                  "type": "NumberLiteral",
                  "number": "2",
                  "subdenomination": null
                },
                "right": {
                  "type": "Identifier",
                  "name": "FRI_MAX_FRI_STEP"
                }
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "BinaryOperation",
            "operator": "**",
            "left": {
              "type": "NumberLiteral",
              "number": "2",
              "subdenomination": null
            },
            "right": {
              "type": "Identifier",
              "name": "FRI_MAX_FRI_STEP"
            }
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "FRI_GROUP_GEN",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x1388a7fd3b4b9599dc4b0691d6a5fcba",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x1388a7fd3b4b9599dc4b0691d6a5fcba",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "FRI_GROUP_SIZE",
              "expression": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                  "type": "NumberLiteral",
                  "number": "0x20",
                  "subdenomination": null
                },
                "right": {
                  "type": "Identifier",
                  "name": "MAX_COSET_SIZE"
                }
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "BinaryOperation",
            "operator": "*",
            "left": {
              "type": "NumberLiteral",
              "number": "0x20",
              "subdenomination": null
            },
            "right": {
              "type": "Identifier",
              "name": "MAX_COSET_SIZE"
            }
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "FRI_CTX_TO_COSET_EVALUATIONS_OFFSET",
              "expression": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "FRI_CTX_TO_FRI_GROUP_OFFSET",
              "expression": {
                "type": "Identifier",
                "name": "FRI_GROUP_SIZE"
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "Identifier",
            "name": "FRI_GROUP_SIZE"
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "FRI_CTX_TO_FRI_HALF_INV_GROUP_OFFSET",
              "expression": {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                  "type": "Identifier",
                  "name": "FRI_CTX_TO_FRI_GROUP_OFFSET"
                },
                "right": {
                  "type": "Identifier",
                  "name": "FRI_GROUP_SIZE"
                }
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "BinaryOperation",
            "operator": "+",
            "left": {
              "type": "Identifier",
              "name": "FRI_CTX_TO_FRI_GROUP_OFFSET"
            },
            "right": {
              "type": "Identifier",
              "name": "FRI_GROUP_SIZE"
            }
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "FRI_CTX_SIZE",
              "expression": {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                  "type": "Identifier",
                  "name": "FRI_CTX_TO_FRI_HALF_INV_GROUP_OFFSET"
                },
                "right": {
                  "type": "TupleExpression",
                  "components": [
                    {
                      "type": "BinaryOperation",
                      "operator": "/",
                      "left": {
                        "type": "Identifier",
                        "name": "FRI_GROUP_SIZE"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "2",
                        "subdenomination": null
                      }
                    }
                  ],
                  "isArray": false
                }
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "BinaryOperation",
            "operator": "+",
            "left": {
              "type": "Identifier",
              "name": "FRI_CTX_TO_FRI_HALF_INV_GROUP_OFFSET"
            },
            "right": {
              "type": "TupleExpression",
              "components": [
                {
                  "type": "BinaryOperation",
                  "operator": "/",
                  "left": {
                    "type": "Identifier",
                    "name": "FRI_GROUP_SIZE"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "2",
                    "subdenomination": null
                  }
                }
              ],
              "isArray": false
            }
          }
        },
        {
          "type": "FunctionDefinition",
          "name": "nextLayerElementFromTwoPreviousLayerElements",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "fX",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "fMinusX",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "evalPoint",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "xInv",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "res",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "PRIME"
                        }
                      ],
                      "expression": {
                        "type": "HexNumber",
                        "value": "0x30000003000000010000000000000001"
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "res"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "addmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "fX",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "fMinusX",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mulmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "evalPoint",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "xInv",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "fX",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "fMinusX",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "PRIME",
                            "arguments": []
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "do2FriSteps",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friHalfInvGroupPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "evaluationsOnCosetPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "cosetOffset_",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friEvalPoint",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "nextLayerValue",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "nextXInv",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "PRIME"
                        }
                      ],
                      "expression": {
                        "type": "HexNumber",
                        "value": "0x30000003000000010000000000000001"
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "friEvalPointDivByX"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mulmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "friEvalPoint",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "cosetOffset_",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "PRIME",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "f0"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "evaluationsOnCosetPtr",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f1"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mload",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "evaluationsOnCosetPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x20"
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyAssignment",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f0"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f0",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f1",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friEvalPointDivByX",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f0",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "sub",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f1",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "f2"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "evaluationsOnCosetPtr",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x40"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f3"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mload",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "evaluationsOnCosetPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x60"
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyAssignment",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f2"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "addmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f2",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f3",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f2",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "sub",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f3",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "add",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "friHalfInvGroupPtr",
                                                "arguments": []
                                              },
                                              {
                                                "type": "HexNumber",
                                                "value": "0x20"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "friEvalPointDivByX",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "newXInv"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mulmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "cosetOffset_",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "cosetOffset_",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyAssignment",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "nextXInv"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mulmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "newXInv",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "newXInv",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "nextLayerValue"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "addmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "f0",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "f2",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mulmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friEvalPointDivByX",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friEvalPointDivByX",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f0",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f2",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "PRIME",
                            "arguments": []
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "do3FriSteps",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friHalfInvGroupPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "evaluationsOnCosetPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "cosetOffset_",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friEvalPoint",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "nextLayerValue",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "nextXInv",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "PRIME"
                        }
                      ],
                      "expression": {
                        "type": "HexNumber",
                        "value": "0x30000003000000010000000000000001"
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "MPRIME"
                        }
                      ],
                      "expression": {
                        "type": "HexNumber",
                        "value": "0x300000030000000100000000000000010"
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "f0"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "evaluationsOnCosetPtr",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "friEvalPointDivByX"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mulmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "friEvalPoint",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "cosetOffset_",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "PRIME",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "friEvalPointDivByXSquared"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mulmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "friEvalPointDivByX",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "friEvalPointDivByX",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "PRIME",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "imaginaryUnit"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "friHalfInvGroupPtr",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x20"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f1"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mload",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "evaluationsOnCosetPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x20"
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyAssignment",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f0"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f0",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f1",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friEvalPointDivByX",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f0",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "sub",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f1",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f2"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mload",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "evaluationsOnCosetPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x40"
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "f3"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mload",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "evaluationsOnCosetPtr",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x60"
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "f2"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f2",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f3",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f2",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f3",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friEvalPointDivByX",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "imaginaryUnit",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyAssignment",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f0"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f0",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f2",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friEvalPointDivByXSquared",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f0",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "sub",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "MPRIME",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f2",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f4"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mload",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "evaluationsOnCosetPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x80"
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "friEvalPointDivByX2"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friEvalPointDivByX",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friHalfInvGroupPtr",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0x40"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyBlock",
                              "operations": [
                                {
                                  "type": "AssemblyLocalDefinition",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "f5"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "evaluationsOnCosetPtr",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0xa0"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "f4"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f4",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f5",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friEvalPointDivByX2",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "add",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f4",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "sub",
                                                "arguments": [
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "PRIME",
                                                    "arguments": []
                                                  },
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "f5",
                                                    "arguments": []
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "f6"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mload",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "evaluationsOnCosetPtr",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0xc0"
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyBlock",
                              "operations": [
                                {
                                  "type": "AssemblyLocalDefinition",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "f7"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "evaluationsOnCosetPtr",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0xe0"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "f6"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f6",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f7",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "add",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f6",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "sub",
                                                "arguments": [
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "PRIME",
                                                    "arguments": []
                                                  },
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "f7",
                                                    "arguments": []
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "friEvalPointDivByX2",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "imaginaryUnit",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "f4"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f4",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f6",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friEvalPointDivByX2",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friEvalPointDivByX2",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f4",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "MPRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f6",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyAssignment",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "nextLayerValue"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "addmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f0",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f4",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "friEvalPointDivByXSquared",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "friEvalPointDivByXSquared",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f0",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "sub",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "MPRIME",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f4",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "xInv2"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mulmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "cosetOffset_",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "cosetOffset_",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "xInv4"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mulmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "xInv2",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "xInv2",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyAssignment",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "nextXInv"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mulmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "xInv4",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "xInv4",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "do4FriSteps",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friHalfInvGroupPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "evaluationsOnCosetPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "cosetOffset_",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friEvalPoint",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "nextLayerValue",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "nextXInv",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "friEvalPointDivByXTessed"
                        }
                      ],
                      "expression": null
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "PRIME"
                        }
                      ],
                      "expression": {
                        "type": "HexNumber",
                        "value": "0x30000003000000010000000000000001"
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "MPRIME"
                        }
                      ],
                      "expression": {
                        "type": "HexNumber",
                        "value": "0x300000030000000100000000000000010"
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "f0"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "evaluationsOnCosetPtr",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "friEvalPointDivByX"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mulmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "friEvalPoint",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "cosetOffset_",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "PRIME",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "imaginaryUnit"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "friHalfInvGroupPtr",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x20"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f1"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mload",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "evaluationsOnCosetPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x20"
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyAssignment",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f0"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f0",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f1",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friEvalPointDivByX",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f0",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "sub",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f1",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f2"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mload",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "evaluationsOnCosetPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x40"
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "f3"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mload",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "evaluationsOnCosetPtr",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x60"
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "f2"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f2",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f3",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f2",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f3",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friEvalPointDivByX",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "imaginaryUnit",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "friEvalPointDivByXSquared"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friEvalPointDivByX",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friEvalPointDivByX",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "friEvalPointDivByXTessed"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friEvalPointDivByXSquared",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friEvalPointDivByXSquared",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "f0"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f0",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f2",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "friEvalPointDivByXSquared",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f0",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "MPRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f2",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f4"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mload",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "evaluationsOnCosetPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x80"
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "friEvalPointDivByX2"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friEvalPointDivByX",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friHalfInvGroupPtr",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0x40"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyBlock",
                              "operations": [
                                {
                                  "type": "AssemblyLocalDefinition",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "f5"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "evaluationsOnCosetPtr",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0xa0"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "f4"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f4",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f5",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friEvalPointDivByX2",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "add",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f4",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "sub",
                                                "arguments": [
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "PRIME",
                                                    "arguments": []
                                                  },
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "f5",
                                                    "arguments": []
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "f6"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mload",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "evaluationsOnCosetPtr",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0xc0"
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyBlock",
                              "operations": [
                                {
                                  "type": "AssemblyLocalDefinition",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "f7"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "evaluationsOnCosetPtr",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0xe0"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "f6"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f6",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f7",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "add",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f6",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "sub",
                                                "arguments": [
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "PRIME",
                                                    "arguments": []
                                                  },
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "f7",
                                                    "arguments": []
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "friEvalPointDivByX2",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "imaginaryUnit",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "f4"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f4",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f6",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friEvalPointDivByX2",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friEvalPointDivByX2",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f4",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "MPRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f6",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyAssignment",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f0"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f0",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f4",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friEvalPointDivByXTessed",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f0",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "sub",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "MPRIME",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f4",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f8"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mload",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "evaluationsOnCosetPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x100"
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "friEvalPointDivByX4"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friEvalPointDivByX",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friHalfInvGroupPtr",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0x80"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyBlock",
                              "operations": [
                                {
                                  "type": "AssemblyLocalDefinition",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "f9"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "evaluationsOnCosetPtr",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0x120"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "f8"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f8",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f9",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friEvalPointDivByX4",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "add",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f8",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "sub",
                                                "arguments": [
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "PRIME",
                                                    "arguments": []
                                                  },
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "f9",
                                                    "arguments": []
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "f10"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mload",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "evaluationsOnCosetPtr",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x140"
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyBlock",
                              "operations": [
                                {
                                  "type": "AssemblyLocalDefinition",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "f11"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "evaluationsOnCosetPtr",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0x160"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "f10"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f10",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f11",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "add",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f10",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "sub",
                                                "arguments": [
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "PRIME",
                                                    "arguments": []
                                                  },
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "f11",
                                                    "arguments": []
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "friEvalPointDivByX4",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "imaginaryUnit",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "f8"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f8",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f10",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friEvalPointDivByX4",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friEvalPointDivByX4",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f8",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "MPRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f10",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "f12"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mload",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "evaluationsOnCosetPtr",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x180"
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyBlock",
                              "operations": [
                                {
                                  "type": "AssemblyLocalDefinition",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "friEvalPointDivByX6"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "friEvalPointDivByX",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "add",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "friHalfInvGroupPtr",
                                                "arguments": []
                                              },
                                              {
                                                "type": "HexNumber",
                                                "value": "0xc0"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "AssemblyBlock",
                                  "operations": [
                                    {
                                      "type": "AssemblyLocalDefinition",
                                      "names": [
                                        {
                                          "type": "Identifier",
                                          "name": "f13"
                                        }
                                      ],
                                      "expression": {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "add",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "evaluationsOnCosetPtr",
                                                "arguments": []
                                              },
                                              {
                                                "type": "HexNumber",
                                                "value": "0x1a0"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "AssemblyAssignment",
                                      "names": [
                                        {
                                          "type": "Identifier",
                                          "name": "f12"
                                        }
                                      ],
                                      "expression": {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "add",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f12",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f13",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "friEvalPointDivByX6",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "add",
                                                "arguments": [
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "f12",
                                                    "arguments": []
                                                  },
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "sub",
                                                    "arguments": [
                                                      {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "PRIME",
                                                        "arguments": []
                                                      },
                                                      {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "f13",
                                                        "arguments": []
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyLocalDefinition",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "f14"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "evaluationsOnCosetPtr",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0x1c0"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "AssemblyBlock",
                                  "operations": [
                                    {
                                      "type": "AssemblyLocalDefinition",
                                      "names": [
                                        {
                                          "type": "Identifier",
                                          "name": "f15"
                                        }
                                      ],
                                      "expression": {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "add",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "evaluationsOnCosetPtr",
                                                "arguments": []
                                              },
                                              {
                                                "type": "HexNumber",
                                                "value": "0x1e0"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "AssemblyAssignment",
                                      "names": [
                                        {
                                          "type": "Identifier",
                                          "name": "f14"
                                        }
                                      ],
                                      "expression": {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "add",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f14",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f15",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "add",
                                                "arguments": [
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "f14",
                                                    "arguments": []
                                                  },
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "sub",
                                                    "arguments": [
                                                      {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "PRIME",
                                                        "arguments": []
                                                      },
                                                      {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "f15",
                                                        "arguments": []
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mulmod",
                                                "arguments": [
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "friEvalPointDivByX6",
                                                    "arguments": []
                                                  },
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "imaginaryUnit",
                                                    "arguments": []
                                                  },
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "PRIME",
                                                    "arguments": []
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "f12"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f12",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f14",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "friEvalPointDivByX6",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "friEvalPointDivByX6",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "add",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f12",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "sub",
                                                "arguments": [
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "MPRIME",
                                                    "arguments": []
                                                  },
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "f14",
                                                    "arguments": []
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "f8"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f8",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f12",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friEvalPointDivByXTessed",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "imaginaryUnit",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f8",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "MPRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f12",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyAssignment",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "nextLayerValue"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "addmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f0",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f8",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "friEvalPointDivByXTessed",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "friEvalPointDivByXTessed",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f0",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "sub",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "MPRIME",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f8",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "xInv2"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mulmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "cosetOffset_",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "cosetOffset_",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "xInv4"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mulmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "xInv2",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "xInv2",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "xInv8"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mulmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "xInv4",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "xInv4",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyAssignment",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "nextXInv"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mulmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "xInv8",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "xInv8",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "gatherCosetInputs",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "channelPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friCtx",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friQueueHead_",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "cosetSize",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friQueueHead",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "cosetIdx",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "cosetOffset_",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "evaluationsOnCosetPtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "Identifier",
                    "name": "friCtx"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "FRI_CTX_TO_COSET_EVALUATIONS_OFFSET"
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friGroupPtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "Identifier",
                    "name": "friCtx"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "FRI_CTX_TO_FRI_GROUP_OFFSET"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "friQueueHead"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "friQueueHead_"
                  }
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "queueItemIdx"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "friQueueHead",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "cosetIdx"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "and",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "queueItemIdx",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "not",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "sub",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "cosetSize",
                                    "arguments": []
                                  },
                                  {
                                    "type": "DecimalNumber",
                                    "value": "1"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "nextCosetIdx"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "cosetIdx",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "cosetSize",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "PRIME"
                        }
                      ],
                      "expression": {
                        "type": "HexNumber",
                        "value": "0x30000003000000010000000000000001"
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "cosetOffset_"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mulmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mload",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friQueueHead",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x40"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mload",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friGroupPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mul",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "sub",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "queueItemIdx",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "cosetIdx",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x20"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "PRIME",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "proofPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "channelPtr",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyFor",
                      "pre": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "index"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "cosetIdx",
                              "arguments": []
                            }
                          }
                        ]
                      },
                      "condition": {
                        "type": "AssemblyExpression",
                        "functionName": "lt",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "index",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "nextCosetIdx",
                            "arguments": []
                          }
                        ]
                      },
                      "post": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "index"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "index",
                                  "arguments": []
                                },
                                {
                                  "type": "DecimalNumber",
                                  "value": "1"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "fieldElementPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "proofPtr",
                              "arguments": []
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "proofPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "proofPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyIf",
                            "condition": {
                              "type": "AssemblyExpression",
                              "functionName": "eq",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "index",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "queueItemIdx",
                                  "arguments": []
                                }
                              ]
                            },
                            "body": {
                              "type": "AssemblyBlock",
                              "operations": [
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "fieldElementPtr"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "friQueueHead",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x20"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "proofPtr"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "proofPtr",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x20"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "friQueueHead"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "friQueueHead",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x60"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "queueItemIdx"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "friQueueHead",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "evaluationsOnCosetPtr",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "fieldElementPtr",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "evaluationsOnCosetPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "evaluationsOnCosetPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "channelPtr",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "proofPtr",
                          "arguments": []
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "bitReverse",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "num",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "numberOfBits",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "numReversed",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "assert"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "||",
                      "left": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "==",
                            "left": {
                              "type": "Identifier",
                              "name": "numberOfBits"
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "256",
                              "subdenomination": null
                            }
                          }
                        ],
                        "isArray": false
                      },
                      "right": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "<",
                            "left": {
                              "type": "Identifier",
                              "name": "num"
                            },
                            "right": {
                              "type": "BinaryOperation",
                              "operator": "**",
                              "left": {
                                "type": "NumberLiteral",
                                "number": "2",
                                "subdenomination": null
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "numberOfBits"
                              }
                            }
                          }
                        ],
                        "isArray": false
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "n",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "Identifier",
                  "name": "num"
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "r",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "name": "k",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "k"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "numberOfBits"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "k"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "r"
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": "|",
                          "left": {
                            "type": "TupleExpression",
                            "components": [
                              {
                                "type": "BinaryOperation",
                                "operator": "*",
                                "left": {
                                  "type": "Identifier",
                                  "name": "r"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "2",
                                  "subdenomination": null
                                }
                              }
                            ],
                            "isArray": false
                          },
                          "right": {
                            "type": "TupleExpression",
                            "components": [
                              {
                                "type": "BinaryOperation",
                                "operator": "%",
                                "left": {
                                  "type": "Identifier",
                                  "name": "n"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "2",
                                  "subdenomination": null
                                }
                              }
                            ],
                            "isArray": false
                          }
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "n"
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": "/",
                          "left": {
                            "type": "Identifier",
                            "name": "n"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "2",
                            "subdenomination": null
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "r"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "initFriGroups",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friCtx",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friGroupPtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "Identifier",
                    "name": "friCtx"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "FRI_CTX_TO_FRI_GROUP_OFFSET"
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friHalfInvGroupPtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "Identifier",
                    "name": "friCtx"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "FRI_CTX_TO_FRI_HALF_INV_GROUP_OFFSET"
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "genFriGroup",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "Identifier",
                  "name": "FRI_GROUP_GEN"
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "genFriGroupInv",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "fpow"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "genFriGroup"
                    },
                    {
                      "type": "TupleExpression",
                      "components": [
                        {
                          "type": "BinaryOperation",
                          "operator": "-",
                          "left": {
                            "type": "Identifier",
                            "name": "MAX_COSET_SIZE"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "1",
                            "subdenomination": null
                          }
                        }
                      ],
                      "isArray": false
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "lastVal",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "Identifier",
                  "name": "ONE_VAL"
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "lastValInv",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "Identifier",
                  "name": "ONE_VAL"
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "prime",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "Identifier",
                    "name": "PrimeFieldElement6"
                  },
                  "memberName": "K_MODULUS"
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "friHalfInvGroupPtr",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "lastValInv",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "friGroupPtr",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "lastVal",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "friGroupPtr",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x20"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "sub",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "prime",
                              "arguments": []
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "lastVal",
                              "arguments": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "halfCosetSize",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "/",
                  "left": {
                    "type": "Identifier",
                    "name": "MAX_COSET_SIZE"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "2",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "halfCosetSize"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "lastVal"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "fmul"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "lastVal"
                            },
                            {
                              "type": "Identifier",
                              "name": "genFriGroup"
                            }
                          ],
                          "names": []
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "lastValInv"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "fmul"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "lastValInv"
                            },
                            {
                              "type": "Identifier",
                              "name": "genFriGroupInv"
                            }
                          ],
                          "names": []
                        }
                      }
                    },
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint256"
                          },
                          "name": "idx",
                          "storageLocation": null
                        }
                      ],
                      "initialValue": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "bitReverse"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "i"
                          },
                          {
                            "type": "BinaryOperation",
                            "operator": "-",
                            "left": {
                              "type": "Identifier",
                              "name": "FRI_MAX_FRI_STEP"
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "1",
                              "subdenomination": null
                            }
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "InLineAssemblyStatement",
                      "language": null,
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friHalfInvGroupPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mul",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "idx",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x20"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "lastValInv",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friGroupPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mul",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "idx",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x40"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "lastVal",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friGroupPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mul",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "idx",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0x40"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x20"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "sub",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "prime",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "lastVal",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "doFriSteps",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friCtx",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friQueueTail",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "cosetOffset_",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friEvalPoint",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friCosetSize",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "index",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "merkleQueuePtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friValue",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "evaluationsOnCosetPtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "Identifier",
                    "name": "friCtx"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "FRI_CTX_TO_COSET_EVALUATIONS_OFFSET"
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friHalfInvGroupPtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "Identifier",
                    "name": "friCtx"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "FRI_CTX_TO_FRI_HALF_INV_GROUP_OFFSET"
                  }
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                    "type": "Identifier",
                    "name": "friCosetSize"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "8",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "TupleExpression",
                          "components": [
                            {
                              "type": "Identifier",
                              "name": "friValue"
                            },
                            {
                              "type": "Identifier",
                              "name": "cosetOffset_"
                            }
                          ],
                          "isArray": false
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "do3FriSteps"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "friHalfInvGroupPtr"
                            },
                            {
                              "type": "Identifier",
                              "name": "evaluationsOnCosetPtr"
                            },
                            {
                              "type": "Identifier",
                              "name": "cosetOffset_"
                            },
                            {
                              "type": "Identifier",
                              "name": "friEvalPoint"
                            }
                          ],
                          "names": []
                        }
                      }
                    }
                  ]
                },
                "FalseBody": {
                  "type": "IfStatement",
                  "condition": {
                    "type": "BinaryOperation",
                    "operator": "==",
                    "left": {
                      "type": "Identifier",
                      "name": "friCosetSize"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "4",
                      "subdenomination": null
                    }
                  },
                  "TrueBody": {
                    "type": "Block",
                    "statements": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "BinaryOperation",
                          "operator": "=",
                          "left": {
                            "type": "TupleExpression",
                            "components": [
                              {
                                "type": "Identifier",
                                "name": "friValue"
                              },
                              {
                                "type": "Identifier",
                                "name": "cosetOffset_"
                              }
                            ],
                            "isArray": false
                          },
                          "right": {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "Identifier",
                              "name": "do2FriSteps"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "friHalfInvGroupPtr"
                              },
                              {
                                "type": "Identifier",
                                "name": "evaluationsOnCosetPtr"
                              },
                              {
                                "type": "Identifier",
                                "name": "cosetOffset_"
                              },
                              {
                                "type": "Identifier",
                                "name": "friEvalPoint"
                              }
                            ],
                            "names": []
                          }
                        }
                      }
                    ]
                  },
                  "FalseBody": {
                    "type": "IfStatement",
                    "condition": {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "Identifier",
                        "name": "friCosetSize"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "16",
                        "subdenomination": null
                      }
                    },
                    "TrueBody": {
                      "type": "Block",
                      "statements": [
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "BinaryOperation",
                            "operator": "=",
                            "left": {
                              "type": "TupleExpression",
                              "components": [
                                {
                                  "type": "Identifier",
                                  "name": "friValue"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "cosetOffset_"
                                }
                              ],
                              "isArray": false
                            },
                            "right": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "Identifier",
                                "name": "do4FriSteps"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "friHalfInvGroupPtr"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "evaluationsOnCosetPtr"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "cosetOffset_"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "friEvalPoint"
                                }
                              ],
                              "names": []
                            }
                          }
                        }
                      ]
                    },
                    "FalseBody": {
                      "type": "Block",
                      "statements": [
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "Identifier",
                              "name": "require"
                            },
                            "arguments": [
                              {
                                "type": "BooleanLiteral",
                                "value": false
                              },
                              {
                                "type": "stringLiteral",
                                "value": "Only step sizes of 2, 3 or 4 are supported."
                              }
                            ],
                            "names": []
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "lhashMask",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "getHashMask"
                  },
                  "arguments": [],
                  "names": []
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "indexInNextStep"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "div",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "index",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "friCosetSize",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "merkleQueuePtr",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "indexInNextStep",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "merkleQueuePtr",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x20"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "and",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "lhashMask",
                              "arguments": []
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "keccak256",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "evaluationsOnCosetPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mul",
                                  "arguments": [
                                    {
                                      "type": "HexNumber",
                                      "value": "0x20"
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "friCosetSize",
                                      "arguments": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "friQueueTail",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "indexInNextStep",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "friQueueTail",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x20"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "friValue",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "friQueueTail",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x40"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "cosetOffset_",
                          "arguments": []
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "computeNextLayer",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "channelPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friQueuePtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "merkleQueuePtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "nQueries",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friEvalPoint",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friCosetSize",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friCtx",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "nLiveQueries",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "merkleQueueTail",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "Identifier",
                  "name": "merkleQueuePtr"
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friQueueHead",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "Identifier",
                  "name": "friQueuePtr"
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friQueueTail",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "Identifier",
                  "name": "friQueuePtr"
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friQueueEnd",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "Identifier",
                    "name": "friQueueHead"
                  },
                  "right": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                          "type": "NumberLiteral",
                          "number": "0x60",
                          "subdenomination": null
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "nQueries"
                        }
                      }
                    ],
                    "isArray": false
                  }
                }
              },
              {
                "type": "DoWhileStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "friQueueHead"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "friQueueEnd"
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint256"
                          },
                          "name": "cosetOffset",
                          "storageLocation": null
                        }
                      ],
                      "initialValue": null
                    },
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint256"
                          },
                          "name": "index",
                          "storageLocation": null
                        }
                      ],
                      "initialValue": null
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "TupleExpression",
                          "components": [
                            {
                              "type": "Identifier",
                              "name": "friQueueHead"
                            },
                            {
                              "type": "Identifier",
                              "name": "index"
                            },
                            {
                              "type": "Identifier",
                              "name": "cosetOffset"
                            }
                          ],
                          "isArray": false
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "gatherCosetInputs"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "channelPtr"
                            },
                            {
                              "type": "Identifier",
                              "name": "friCtx"
                            },
                            {
                              "type": "Identifier",
                              "name": "friQueueHead"
                            },
                            {
                              "type": "Identifier",
                              "name": "friCosetSize"
                            }
                          ],
                          "names": []
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "doFriSteps"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "friCtx"
                          },
                          {
                            "type": "Identifier",
                            "name": "friQueueTail"
                          },
                          {
                            "type": "Identifier",
                            "name": "cosetOffset"
                          },
                          {
                            "type": "Identifier",
                            "name": "friEvalPoint"
                          },
                          {
                            "type": "Identifier",
                            "name": "friCosetSize"
                          },
                          {
                            "type": "Identifier",
                            "name": "index"
                          },
                          {
                            "type": "Identifier",
                            "name": "merkleQueueTail"
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "+=",
                        "left": {
                          "type": "Identifier",
                          "name": "merkleQueueTail"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0x40",
                          "subdenomination": null
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "+=",
                        "left": {
                          "type": "Identifier",
                          "name": "friQueueTail"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0x60",
                          "subdenomination": null
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "BinaryOperation",
                "operator": "/",
                "left": {
                  "type": "TupleExpression",
                  "components": [
                    {
                      "type": "BinaryOperation",
                      "operator": "-",
                      "left": {
                        "type": "Identifier",
                        "name": "friQueueTail"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "friQueuePtr"
                      }
                    }
                  ],
                  "isArray": false
                },
                "right": {
                  "type": "NumberLiteral",
                  "number": "0x60",
                  "subdenomination": null
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "HornerEvaluator",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "PrimeFieldElement6"
          },
          "arguments": null
        }
      ],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "hornerEval",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "coefsStart",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "point",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "nCoefs",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "result",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "prime",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "Identifier",
                    "name": "PrimeFieldElement6"
                  },
                  "memberName": "K_MODULUS"
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "%",
                        "left": {
                          "type": "Identifier",
                          "name": "nCoefs"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "8",
                          "subdenomination": null
                        }
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Number of polynomial coefficients must be divisible by 8"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "nCoefs"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "4096",
                        "subdenomination": null
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "No more than 4096 coefficients are supported"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "coefsPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "coefsStart",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mul",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "nCoefs",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x20"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyFor",
                      "pre": {
                        "type": "AssemblyBlock",
                        "operations": []
                      },
                      "condition": {
                        "type": "AssemblyExpression",
                        "functionName": "gt",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "coefsPtr",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "coefsStart",
                            "arguments": []
                          }
                        ]
                      },
                      "post": {
                        "type": "AssemblyBlock",
                        "operations": []
                      },
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "coefsPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "sub",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "coefsPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x100"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "result"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mload",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "add",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "coefsPtr",
                                          "arguments": []
                                        },
                                        {
                                          "type": "HexNumber",
                                          "value": "0x80"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "add",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mload",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "add",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "coefsPtr",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "HexNumber",
                                                  "value": "0xa0"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mulmod",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "add",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "coefsPtr",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0xc0"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mulmod",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "mload",
                                                          "arguments": [
                                                            {
                                                              "type": "AssemblyExpression",
                                                              "functionName": "add",
                                                              "arguments": [
                                                                {
                                                                  "type": "AssemblyExpression",
                                                                  "functionName": "coefsPtr",
                                                                  "arguments": []
                                                                },
                                                                {
                                                                  "type": "HexNumber",
                                                                  "value": "0xe0"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "mulmod",
                                                          "arguments": [
                                                            {
                                                              "type": "AssemblyExpression",
                                                              "functionName": "result",
                                                              "arguments": []
                                                            },
                                                            {
                                                              "type": "AssemblyExpression",
                                                              "functionName": "point",
                                                              "arguments": []
                                                            },
                                                            {
                                                              "type": "AssemblyExpression",
                                                              "functionName": "prime",
                                                              "arguments": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "point",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "prime",
                                                      "arguments": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "point",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "prime",
                                              "arguments": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "point",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "prime",
                                      "arguments": []
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "result"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mload",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "coefsPtr",
                                      "arguments": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "add",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mload",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "add",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "coefsPtr",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "HexNumber",
                                                  "value": "0x20"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mulmod",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "add",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "coefsPtr",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x40"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mulmod",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "mload",
                                                          "arguments": [
                                                            {
                                                              "type": "AssemblyExpression",
                                                              "functionName": "add",
                                                              "arguments": [
                                                                {
                                                                  "type": "AssemblyExpression",
                                                                  "functionName": "coefsPtr",
                                                                  "arguments": []
                                                                },
                                                                {
                                                                  "type": "HexNumber",
                                                                  "value": "0x60"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "mulmod",
                                                          "arguments": [
                                                            {
                                                              "type": "AssemblyExpression",
                                                              "functionName": "result",
                                                              "arguments": []
                                                            },
                                                            {
                                                              "type": "AssemblyExpression",
                                                              "functionName": "point",
                                                              "arguments": []
                                                            },
                                                            {
                                                              "type": "AssemblyExpression",
                                                              "functionName": "prime",
                                                              "arguments": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "point",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "prime",
                                                      "arguments": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "point",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "prime",
                                              "arguments": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "point",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "prime",
                                      "arguments": []
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "BinaryOperation",
                "operator": "%",
                "left": {
                  "type": "Identifier",
                  "name": "result"
                },
                "right": {
                  "type": "Identifier",
                  "name": "prime"
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "MemoryAccessUtils",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "MemoryMap"
          },
          "arguments": null
        }
      ],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "getPtr",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "ctx",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "offset",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "ctxPtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "offset"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "MM_CONTEXT_SIZE"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Overflow protection failed"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "ctxPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "ctx",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x20"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                  "type": "Identifier",
                  "name": "ctxPtr"
                },
                "right": {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                    "type": "Identifier",
                    "name": "offset"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0x20",
                    "subdenomination": null
                  }
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "getProofPtr",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "proof",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "proofPtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "proofPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "proof",
                        "arguments": []
                      }
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "proofPtr"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "getChannelPtr",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "ctx",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "ctxPtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "ctxPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "ctx",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x20"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                  "type": "Identifier",
                  "name": "ctxPtr"
                },
                "right": {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                    "type": "Identifier",
                    "name": "MM_CHANNEL"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0x20",
                    "subdenomination": null
                  }
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "getQueries",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "ctx",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": null,
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "length": null
                    },
                    "name": "queries",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "offset",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "NumberLiteral",
                    "number": "0x20",
                    "subdenomination": null
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "0x20",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "MM_N_UNIQUE_QUERIES"
                    }
                  }
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "queries"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "ctx",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "offset",
                            "arguments": []
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "queries"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "getMerkleQueuePtr",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "ctx",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "getPtr"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "ctx"
                  },
                  {
                    "type": "Identifier",
                    "name": "MM_MERKLE_QUEUE"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "getFriSteps",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "ctx",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "friSteps",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friStepsPtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "getPtr"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    {
                      "type": "Identifier",
                      "name": "MM_FRI_STEPS_PTR"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "friSteps"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "friStepsPtr",
                            "arguments": []
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "MimcOods",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "MemoryMap"
          },
          "arguments": null
        },
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "StarkParameters"
          },
          "arguments": null
        }
      ],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "BATCH_INVERSE_CHUNK",
              "expression": {
                "type": "TupleExpression",
                "components": [
                  {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "N_ROWS_IN_MASK"
                    }
                  }
                ],
                "isArray": false
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "TupleExpression",
            "components": [
              {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                  "type": "NumberLiteral",
                  "number": "2",
                  "subdenomination": null
                },
                "right": {
                  "type": "Identifier",
                  "name": "N_ROWS_IN_MASK"
                }
              }
            ],
            "isArray": false
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "BATCH_INVERSE_SIZE",
              "expression": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                  "type": "Identifier",
                  "name": "MAX_N_QUERIES"
                },
                "right": {
                  "type": "Identifier",
                  "name": "BATCH_INVERSE_CHUNK"
                }
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "BinaryOperation",
            "operator": "*",
            "left": {
              "type": "Identifier",
              "name": "MAX_N_QUERIES"
            },
            "right": {
              "type": "Identifier",
              "name": "BATCH_INVERSE_CHUNK"
            }
          }
        },
        {
          "type": "FunctionDefinition",
          "name": "function()external{uint256[]memoryctx;assembly{letctxSize:=mul(add(calldataload(0),1),0x20)ctx:=mload(0x40)mstore(0x40,add(ctx,ctxSize))calldatacopy(ctx,0,ctxSize)}uint256[]memorybatchInverseArray=newuint256[](2*BATCH_INVERSE_SIZE);oodsPrepareInverses(ctx,batchInverseArray);uint256kMontgomeryRInv_=PrimeFieldElement6.K_MONTGOMERY_R_INV;assembly{letPRIME:=0x30000003000000010000000000000001letkMontgomeryRInv:=kMontgomeryRInv_letcontext:=ctxletfriQueue:=add(context,0xda0)letfriQueueEnd:=add(friQueue,mul(mload(add(context,0x120)),0x60))lettraceQueryResponses:=add(context,0x3d80)letcompositionQueryResponses:=add(context,0xb580)letdenominatorsPtr:=add(batchInverseArray,0x20)for{}lt(friQueue,friQueueEnd){friQueue:=add(friQueue,0x60)}{letres:=0{letcolumnValue:=mulmod(mload(traceQueryResponses),kMontgomeryRInv,PRIME)res:=add(res,mulmod(mulmod(mload(denominatorsPtr),mload(add(context,0x3a80)),PRIME),add(columnValue,sub(PRIME,mload(add(context,0x3180)))),PRIME))res:=add(res,mulmod(mulmod(mload(add(denominatorsPtr,0x20)),mload(add(context,0x3aa0)),PRIME),add(columnValue,sub(PRIME,mload(add(context,0x31a0)))),PRIME))}{letcolumnValue:=mulmod(mload(add(traceQueryResponses,0x20)),kMontgomeryRInv,PRIME)res:=add(res,mulmod(mulmod(mload(denominatorsPtr),mload(add(context,0x3ac0)),PRIME),add(columnValue,sub(PRIME,mload(add(context,0x31c0)))),PRIME))}{letcolumnValue:=mulmod(mload(add(traceQueryResponses,0x40)),kMontgomeryRInv,PRIME)res:=add(res,mulmod(mulmod(mload(denominatorsPtr),mload(add(context,0x3ae0)),PRIME),add(columnValue,sub(PRIME,mload(add(context,0x31e0)))),PRIME))}{letcolumnValue:=mulmod(mload(add(traceQueryResponses,0x60)),kMontgomeryRInv,PRIME)res:=add(res,mulmod(mulmod(mload(denominatorsPtr),mload(add(context,0x3b00)),PRIME),add(columnValue,sub(PRIME,mload(add(context,0x3200)))),PRIME))}{letcolumnValue:=mulmod(mload(add(traceQueryResponses,0x80)),kMontgomeryRInv,PRIME)res:=add(res,mulmod(mulmod(mload(denominatorsPtr),mload(add(context,0x3b20)),PRIME),add(columnValue,sub(PRIME,mload(add(context,0x3220)))),PRIME))}{letcolumnValue:=mulmod(mload(add(traceQueryResponses,0xa0)),kMontgomeryRInv,PRIME)res:=add(res,mulmod(mulmod(mload(denominatorsPtr),mload(add(context,0x3b40)),PRIME),add(columnValue,sub(PRIME,mload(add(context,0x3240)))),PRIME))}{letcolumnValue:=mulmod(mload(add(traceQueryResponses,0xc0)),kMontgomeryRInv,PRIME)res:=add(res,mulmod(mulmod(mload(denominatorsPtr),mload(add(context,0x3b60)),PRIME),add(columnValue,sub(PRIME,mload(add(context,0x3260)))),PRIME))}{letcolumnValue:=mulmod(mload(add(traceQueryResponses,0xe0)),kMontgomeryRInv,PRIME)res:=add(res,mulmod(mulmod(mload(denominatorsPtr),mload(add(context,0x3b80)),PRIME),add(columnValue,sub(PRIME,mload(add(context,0x3280)))),PRIME))}{letcolumnValue:=mulmod(mload(add(traceQueryResponses,0x100)),kMontgomeryRInv,PRIME)res:=add(res,mulmod(mulmod(mload(denominatorsPtr),mload(add(context,0x3ba0)),PRIME),add(columnValue,sub(PRIME,mload(add(context,0x32a0)))),PRIME))}{letcolumnValue:=mulmod(mload(add(traceQueryResponses,0x120)),kMontgomeryRInv,PRIME)res:=add(res,mulmod(mulmod(mload(denominatorsPtr),mload(add(context,0x3bc0)),PRIME),add(columnValue,sub(PRIME,mload(add(context,0x32c0)))),PRIME))}{letcolumnValue:=mulmod(mload(add(traceQueryResponses,0x140)),kMontgomeryRInv,PRIME)res:=add(res,mulmod(mulmod(mload(denominatorsPtr),mload(add(context,0x3be0)),PRIME),add(columnValue,sub(PRIME,mload(add(context,0x32e0)))),PRIME))res:=add(res,mulmod(mulmod(mload(add(denominatorsPtr,0x20)),mload(add(context,0x3c00)),PRIME),add(columnValue,sub(PRIME,mload(add(context,0x3300)))),PRIME))}{letcolumnValue:=mulmod(mload(add(traceQueryResponses,0x160)),kMontgomeryRInv,PRIME)res:=add(res,mulmod(mulmod(mload(denominatorsPtr),mload(add(context,0x3c20)),PRIME),add(columnValue,sub(PRIME,mload(add(context,0x3320)))),PRIME))}{letcolumnValue:=mulmod(mload(add(traceQueryResponses,0x180)),kMontgomeryRInv,PRIME)res:=add(res,mulmod(mulmod(mload(denominatorsPtr),mload(add(context,0x3c40)),PRIME),add(columnValue,sub(PRIME,mload(add(context,0x3340)))),PRIME))}{letcolumnValue:=mulmod(mload(add(traceQueryResponses,0x1a0)),kMontgomeryRInv,PRIME)res:=add(res,mulmod(mulmod(mload(denominatorsPtr),mload(add(context,0x3c60)),PRIME),add(columnValue,sub(PRIME,mload(add(context,0x3360)))),PRIME))}{letcolumnValue:=mulmod(mload(add(traceQueryResponses,0x1c0)),kMontgomeryRInv,PRIME)res:=add(res,mulmod(mulmod(mload(denominatorsPtr),mload(add(context,0x3c80)),PRIME),add(columnValue,sub(PRIME,mload(add(context,0x3380)))),PRIME))}{letcolumnValue:=mulmod(mload(add(traceQueryResponses,0x1e0)),kMontgomeryRInv,PRIME)res:=add(res,mulmod(mulmod(mload(denominatorsPtr),mload(add(context,0x3ca0)),PRIME),add(columnValue,sub(PRIME,mload(add(context,0x33a0)))),PRIME))}{letcolumnValue:=mulmod(mload(add(traceQueryResponses,0x200)),kMontgomeryRInv,PRIME)res:=add(res,mulmod(mulmod(mload(denominatorsPtr),mload(add(context,0x3cc0)),PRIME),add(columnValue,sub(PRIME,mload(add(context,0x33c0)))),PRIME))}{letcolumnValue:=mulmod(mload(add(traceQueryResponses,0x220)),kMontgomeryRInv,PRIME)res:=add(res,mulmod(mulmod(mload(denominatorsPtr),mload(add(context,0x3ce0)),PRIME),add(columnValue,sub(PRIME,mload(add(context,0x33e0)))),PRIME))}{letcolumnValue:=mulmod(mload(add(traceQueryResponses,0x240)),kMontgomeryRInv,PRIME)res:=add(res,mulmod(mulmod(mload(denominatorsPtr),mload(add(context,0x3d00)),PRIME),add(columnValue,sub(PRIME,mload(add(context,0x3400)))),PRIME))}{letcolumnValue:=mulmod(mload(add(traceQueryResponses,0x260)),kMontgomeryRInv,PRIME)res:=add(res,mulmod(mulmod(mload(denominatorsPtr),mload(add(context,0x3d20)),PRIME),add(columnValue,sub(PRIME,mload(add(context,0x3420)))),PRIME))}traceQueryResponses:=add(traceQueryResponses,0x280){letcolumnValue:=mulmod(mload(compositionQueryResponses),kMontgomeryRInv,PRIME)res:=add(res,mulmod(mulmod(mload(add(denominatorsPtr,0x40)),mload(add(context,0x3d40)),PRIME),add(columnValue,sub(PRIME,mload(add(context,0x3440)))),PRIME))}{letcolumnValue:=mulmod(mload(add(compositionQueryResponses,0x20)),kMontgomeryRInv,PRIME)res:=add(res,mulmod(mulmod(mload(add(denominatorsPtr,0x40)),mload(add(context,0x3d60)),PRIME),add(columnValue,sub(PRIME,mload(add(context,0x3460)))),PRIME))}compositionQueryResponses:=add(compositionQueryResponses,0x40)mstore(add(friQueue,0x20),mod(res,PRIME))mstore(add(friQueue,0x40),mload(add(denominatorsPtr,0x60)))denominatorsPtr:=add(denominatorsPtr,0x80)}return(add(context,0xda0),0x1200)}}",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "length": null
                    },
                    "name": "ctx",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": null
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "ctxSize"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mul",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "calldataload",
                                "arguments": [
                                  {
                                    "type": "DecimalNumber",
                                    "value": "0"
                                  }
                                ]
                              },
                              {
                                "type": "DecimalNumber",
                                "value": "1"
                              }
                            ]
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x20"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "ctx"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "HexNumber",
                            "value": "0x40"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "HexNumber",
                          "value": "0x40"
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "ctx",
                              "arguments": []
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "ctxSize",
                              "arguments": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "calldatacopy",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "ctx",
                          "arguments": []
                        },
                        {
                          "type": "DecimalNumber",
                          "value": "0"
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "ctxSize",
                          "arguments": []
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "length": null
                    },
                    "name": "batchInverseArray",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "*",
                      "left": {
                        "type": "NumberLiteral",
                        "number": "2",
                        "subdenomination": null
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "BATCH_INVERSE_SIZE"
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "oodsPrepareInverses"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    {
                      "type": "Identifier",
                      "name": "batchInverseArray"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "kMontgomeryRInv_",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "Identifier",
                    "name": "PrimeFieldElement6"
                  },
                  "memberName": "K_MONTGOMERY_R_INV"
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "PRIME"
                        }
                      ],
                      "expression": {
                        "type": "HexNumber",
                        "value": "0x30000003000000010000000000000001"
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "kMontgomeryRInv"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "kMontgomeryRInv_",
                        "arguments": []
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "context"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "ctx",
                        "arguments": []
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "friQueue"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "context",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0xda0"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "friQueueEnd"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "friQueue",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mul",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mload",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "context",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x120"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x60"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "traceQueryResponses"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "context",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x3d80"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "compositionQueryResponses"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "context",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0xb580"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "denominatorsPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "batchInverseArray",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x20"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyFor",
                      "pre": {
                        "type": "AssemblyBlock",
                        "operations": []
                      },
                      "condition": {
                        "type": "AssemblyExpression",
                        "functionName": "lt",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "friQueue",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "friQueueEnd",
                            "arguments": []
                          }
                        ]
                      },
                      "post": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "friQueue"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "friQueue",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x60"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "res"
                              }
                            ],
                            "expression": {
                              "type": "DecimalNumber",
                              "value": "0"
                            }
                          },
                          {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "columnValue"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "traceQueryResponses",
                                          "arguments": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "kMontgomeryRInv",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "res"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mulmod",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mulmod",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "denominatorsPtr",
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "context",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x3a80"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "PRIME",
                                              "arguments": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "columnValue",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "PRIME",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "context",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x3180"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "PRIME",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "res"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mulmod",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mulmod",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "denominatorsPtr",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x20"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "context",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x3aa0"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "PRIME",
                                              "arguments": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "columnValue",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "PRIME",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "context",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x31a0"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "PRIME",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "columnValue"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "traceQueryResponses",
                                              "arguments": []
                                            },
                                            {
                                              "type": "HexNumber",
                                              "value": "0x20"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "kMontgomeryRInv",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "res"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mulmod",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mulmod",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "denominatorsPtr",
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "context",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x3ac0"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "PRIME",
                                              "arguments": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "columnValue",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "PRIME",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "context",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x31c0"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "PRIME",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "columnValue"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "traceQueryResponses",
                                              "arguments": []
                                            },
                                            {
                                              "type": "HexNumber",
                                              "value": "0x40"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "kMontgomeryRInv",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "res"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mulmod",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mulmod",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "denominatorsPtr",
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "context",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x3ae0"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "PRIME",
                                              "arguments": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "columnValue",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "PRIME",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "context",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x31e0"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "PRIME",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "columnValue"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "traceQueryResponses",
                                              "arguments": []
                                            },
                                            {
                                              "type": "HexNumber",
                                              "value": "0x60"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "kMontgomeryRInv",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "res"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mulmod",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mulmod",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "denominatorsPtr",
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "context",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x3b00"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "PRIME",
                                              "arguments": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "columnValue",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "PRIME",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "context",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x3200"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "PRIME",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "columnValue"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "traceQueryResponses",
                                              "arguments": []
                                            },
                                            {
                                              "type": "HexNumber",
                                              "value": "0x80"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "kMontgomeryRInv",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "res"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mulmod",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mulmod",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "denominatorsPtr",
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "context",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x3b20"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "PRIME",
                                              "arguments": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "columnValue",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "PRIME",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "context",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x3220"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "PRIME",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "columnValue"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "traceQueryResponses",
                                              "arguments": []
                                            },
                                            {
                                              "type": "HexNumber",
                                              "value": "0xa0"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "kMontgomeryRInv",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "res"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mulmod",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mulmod",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "denominatorsPtr",
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "context",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x3b40"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "PRIME",
                                              "arguments": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "columnValue",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "PRIME",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "context",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x3240"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "PRIME",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "columnValue"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "traceQueryResponses",
                                              "arguments": []
                                            },
                                            {
                                              "type": "HexNumber",
                                              "value": "0xc0"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "kMontgomeryRInv",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "res"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mulmod",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mulmod",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "denominatorsPtr",
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "context",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x3b60"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "PRIME",
                                              "arguments": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "columnValue",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "PRIME",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "context",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x3260"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "PRIME",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "columnValue"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "traceQueryResponses",
                                              "arguments": []
                                            },
                                            {
                                              "type": "HexNumber",
                                              "value": "0xe0"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "kMontgomeryRInv",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "res"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mulmod",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mulmod",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "denominatorsPtr",
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "context",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x3b80"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "PRIME",
                                              "arguments": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "columnValue",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "PRIME",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "context",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x3280"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "PRIME",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "columnValue"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "traceQueryResponses",
                                              "arguments": []
                                            },
                                            {
                                              "type": "HexNumber",
                                              "value": "0x100"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "kMontgomeryRInv",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "res"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mulmod",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mulmod",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "denominatorsPtr",
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "context",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x3ba0"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "PRIME",
                                              "arguments": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "columnValue",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "PRIME",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "context",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x32a0"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "PRIME",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "columnValue"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "traceQueryResponses",
                                              "arguments": []
                                            },
                                            {
                                              "type": "HexNumber",
                                              "value": "0x120"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "kMontgomeryRInv",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "res"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mulmod",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mulmod",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "denominatorsPtr",
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "context",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x3bc0"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "PRIME",
                                              "arguments": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "columnValue",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "PRIME",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "context",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x32c0"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "PRIME",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "columnValue"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "traceQueryResponses",
                                              "arguments": []
                                            },
                                            {
                                              "type": "HexNumber",
                                              "value": "0x140"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "kMontgomeryRInv",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "res"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mulmod",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mulmod",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "denominatorsPtr",
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "context",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x3be0"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "PRIME",
                                              "arguments": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "columnValue",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "PRIME",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "context",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x32e0"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "PRIME",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "res"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mulmod",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mulmod",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "denominatorsPtr",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x20"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "context",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x3c00"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "PRIME",
                                              "arguments": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "columnValue",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "PRIME",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "context",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x3300"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "PRIME",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "columnValue"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "traceQueryResponses",
                                              "arguments": []
                                            },
                                            {
                                              "type": "HexNumber",
                                              "value": "0x160"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "kMontgomeryRInv",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "res"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mulmod",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mulmod",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "denominatorsPtr",
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "context",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x3c20"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "PRIME",
                                              "arguments": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "columnValue",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "PRIME",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "context",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x3320"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "PRIME",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "columnValue"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "traceQueryResponses",
                                              "arguments": []
                                            },
                                            {
                                              "type": "HexNumber",
                                              "value": "0x180"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "kMontgomeryRInv",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "res"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mulmod",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mulmod",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "denominatorsPtr",
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "context",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x3c40"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "PRIME",
                                              "arguments": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "columnValue",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "PRIME",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "context",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x3340"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "PRIME",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "columnValue"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "traceQueryResponses",
                                              "arguments": []
                                            },
                                            {
                                              "type": "HexNumber",
                                              "value": "0x1a0"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "kMontgomeryRInv",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "res"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mulmod",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mulmod",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "denominatorsPtr",
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "context",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x3c60"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "PRIME",
                                              "arguments": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "columnValue",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "PRIME",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "context",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x3360"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "PRIME",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "columnValue"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "traceQueryResponses",
                                              "arguments": []
                                            },
                                            {
                                              "type": "HexNumber",
                                              "value": "0x1c0"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "kMontgomeryRInv",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "res"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mulmod",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mulmod",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "denominatorsPtr",
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "context",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x3c80"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "PRIME",
                                              "arguments": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "columnValue",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "PRIME",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "context",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x3380"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "PRIME",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "columnValue"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "traceQueryResponses",
                                              "arguments": []
                                            },
                                            {
                                              "type": "HexNumber",
                                              "value": "0x1e0"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "kMontgomeryRInv",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "res"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mulmod",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mulmod",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "denominatorsPtr",
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "context",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x3ca0"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "PRIME",
                                              "arguments": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "columnValue",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "PRIME",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "context",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x33a0"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "PRIME",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "columnValue"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "traceQueryResponses",
                                              "arguments": []
                                            },
                                            {
                                              "type": "HexNumber",
                                              "value": "0x200"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "kMontgomeryRInv",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "res"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mulmod",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mulmod",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "denominatorsPtr",
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "context",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x3cc0"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "PRIME",
                                              "arguments": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "columnValue",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "PRIME",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "context",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x33c0"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "PRIME",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "columnValue"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "traceQueryResponses",
                                              "arguments": []
                                            },
                                            {
                                              "type": "HexNumber",
                                              "value": "0x220"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "kMontgomeryRInv",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "res"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mulmod",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mulmod",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "denominatorsPtr",
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "context",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x3ce0"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "PRIME",
                                              "arguments": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "columnValue",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "PRIME",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "context",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x33e0"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "PRIME",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "columnValue"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "traceQueryResponses",
                                              "arguments": []
                                            },
                                            {
                                              "type": "HexNumber",
                                              "value": "0x240"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "kMontgomeryRInv",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "res"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mulmod",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mulmod",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "denominatorsPtr",
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "context",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x3d00"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "PRIME",
                                              "arguments": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "columnValue",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "PRIME",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "context",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x3400"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "PRIME",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "columnValue"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "traceQueryResponses",
                                              "arguments": []
                                            },
                                            {
                                              "type": "HexNumber",
                                              "value": "0x260"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "kMontgomeryRInv",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "res"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mulmod",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mulmod",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "denominatorsPtr",
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "context",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x3d20"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "PRIME",
                                              "arguments": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "columnValue",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "PRIME",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "context",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x3420"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "PRIME",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "traceQueryResponses"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "traceQueryResponses",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x280"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "columnValue"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "compositionQueryResponses",
                                          "arguments": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "kMontgomeryRInv",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "res"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mulmod",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mulmod",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "denominatorsPtr",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x40"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "context",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x3d40"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "PRIME",
                                              "arguments": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "columnValue",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "PRIME",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "context",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x3440"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "PRIME",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "columnValue"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "compositionQueryResponses",
                                              "arguments": []
                                            },
                                            {
                                              "type": "HexNumber",
                                              "value": "0x20"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "kMontgomeryRInv",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "res"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mulmod",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mulmod",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "denominatorsPtr",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x40"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "context",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x3d60"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "PRIME",
                                              "arguments": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "columnValue",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "PRIME",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "context",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x3460"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "PRIME",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "compositionQueryResponses"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "compositionQueryResponses",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x40"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friQueue",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x20"
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "res",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friQueue",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x40"
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mload",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "denominatorsPtr",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x60"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "denominatorsPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "denominatorsPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x80"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "return",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "context",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0xda0"
                            }
                          ]
                        },
                        {
                          "type": "HexNumber",
                          "value": "0x1200"
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "oodsPrepareInverses",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "context",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "batchInverseArray",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "evalCosetOffset_",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "Identifier",
                    "name": "PrimeFieldElement6"
                  },
                  "memberName": "GENERATOR_VAL"
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "length": {
                        "type": "NumberLiteral",
                        "number": "2",
                        "subdenomination": null
                      }
                    },
                    "name": "expmodsAndPoints",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": null
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyFunctionDefinition",
                      "name": "expmod",
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "base"
                        },
                        {
                          "type": "Identifier",
                          "name": "exponent"
                        },
                        {
                          "type": "Identifier",
                          "name": "modulus"
                        }
                      ],
                      "returnArguments": [
                        {
                          "type": "Identifier",
                          "name": "res"
                        }
                      ],
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "p"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mload",
                              "arguments": [
                                {
                                  "type": "HexNumber",
                                  "value": "0x40"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "p",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x20"
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "p",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x20"
                                  }
                                ]
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x20"
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "p",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x40"
                                  }
                                ]
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x20"
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "p",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x60"
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "base",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "p",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x80"
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "exponent",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "p",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0xa0"
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "modulus",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyIf",
                            "condition": {
                              "type": "AssemblyExpression",
                              "functionName": "iszero",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "staticcall",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "not",
                                      "arguments": [
                                        {
                                          "type": "DecimalNumber",
                                          "value": "0"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "HexNumber",
                                      "value": "0x05"
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "p",
                                      "arguments": []
                                    },
                                    {
                                      "type": "HexNumber",
                                      "value": "0xc0"
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "p",
                                      "arguments": []
                                    },
                                    {
                                      "type": "HexNumber",
                                      "value": "0x20"
                                    }
                                  ]
                                }
                              ]
                            },
                            "body": {
                              "type": "AssemblyBlock",
                              "operations": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "revert",
                                  "arguments": [
                                    {
                                      "type": "DecimalNumber",
                                      "value": "0"
                                    },
                                    {
                                      "type": "DecimalNumber",
                                      "value": "0"
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "res"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mload",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "p",
                                  "arguments": []
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "traceGenerator"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "context",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x2b40"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "PRIME"
                        }
                      ],
                      "expression": {
                        "type": "HexNumber",
                        "value": "0x30000003000000010000000000000001"
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "oodsPoint"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "context",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x2b60"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "point"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "sub",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "oodsPoint",
                                "arguments": []
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "mstore",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "expmodsAndPoints",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x0"
                                }
                              ]
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "point",
                              "arguments": []
                            }
                          ]
                        },
                        {
                          "type": "AssemblyAssignment",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "point"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mulmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "point",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "traceGenerator",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "mstore",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "expmodsAndPoints",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "point",
                              "arguments": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "evalPointsPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "context",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x3480"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "evalPointsEndPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "evalPointsPtr",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mul",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mload",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "context",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x120"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x20"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "productsPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "batchInverseArray",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x20"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "valuesPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "batchInverseArray",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x20"
                              }
                            ]
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x1800"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "partialProduct"
                        }
                      ],
                      "expression": {
                        "type": "DecimalNumber",
                        "value": "1"
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "minusPointPow"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "sub",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "PRIME",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mulmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "oodsPoint",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "oodsPoint",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyFor",
                      "pre": {
                        "type": "AssemblyBlock",
                        "operations": []
                      },
                      "condition": {
                        "type": "AssemblyExpression",
                        "functionName": "lt",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "evalPointsPtr",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "evalPointsEndPtr",
                            "arguments": []
                          }
                        ]
                      },
                      "post": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "evalPointsPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "evalPointsPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "evalPoint"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mload",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "evalPointsPtr",
                                  "arguments": []
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "shiftedEvalPoint"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mulmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "evalPoint",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "evalCosetOffset_",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "PRIME",
                                  "arguments": []
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "denominator"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "shiftedEvalPoint",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "expmodsAndPoints",
                                              "arguments": []
                                            },
                                            {
                                              "type": "HexNumber",
                                              "value": "0x0"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mstore",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "productsPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "partialProduct",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mstore",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "valuesPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "denominator",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "partialProduct"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "partialProduct",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "denominator",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "denominator"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "shiftedEvalPoint",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "expmodsAndPoints",
                                              "arguments": []
                                            },
                                            {
                                              "type": "HexNumber",
                                              "value": "0x20"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mstore",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "productsPtr",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x20"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "partialProduct",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mstore",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "valuesPtr",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x20"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "denominator",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "partialProduct"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "partialProduct",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "denominator",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "denominator"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "shiftedEvalPoint",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "minusPointPow",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mstore",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "productsPtr",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x40"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "partialProduct",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mstore",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "valuesPtr",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x40"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "denominator",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "partialProduct"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "partialProduct",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "denominator",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "PRIME",
                                      "arguments": []
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "productsPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x60"
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "partialProduct",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "valuesPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x60"
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "evalPoint",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "partialProduct"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mulmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "partialProduct",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "evalPoint",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "PRIME",
                                  "arguments": []
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "productsPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "productsPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x80"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "valuesPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "valuesPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x80"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "productsToValuesOffset"
                        }
                      ],
                      "expression": {
                        "type": "HexNumber",
                        "value": "0x1800"
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "firstPartialProductPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "batchInverseArray",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x20"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "prodInv"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "expmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "partialProduct",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "sub",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              },
                              {
                                "type": "DecimalNumber",
                                "value": "2"
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "PRIME",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyIf",
                      "condition": {
                        "type": "AssemblyExpression",
                        "functionName": "eq",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "prodInv",
                            "arguments": []
                          },
                          {
                            "type": "DecimalNumber",
                            "value": "0"
                          }
                        ]
                      },
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "DecimalNumber",
                                "value": "0"
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x08c379a000000000000000000000000000000000000000000000000000000000"
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "HexNumber",
                                "value": "0x4"
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x20"
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "HexNumber",
                                "value": "0x24"
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x1e"
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "HexNumber",
                                "value": "0x44"
                              },
                              {
                                "type": "StringLiteral",
                                "value": "Batch inverse product is zero."
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "revert",
                            "arguments": [
                              {
                                "type": "DecimalNumber",
                                "value": "0"
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x62"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "currentPartialProductPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "productsPtr",
                        "arguments": []
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "midPartialProductPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "firstPartialProductPtr",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0xe0"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyFor",
                      "pre": {
                        "type": "AssemblyBlock",
                        "operations": []
                      },
                      "condition": {
                        "type": "AssemblyExpression",
                        "functionName": "gt",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "currentPartialProductPtr",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "midPartialProductPtr",
                            "arguments": []
                          }
                        ]
                      },
                      "post": {
                        "type": "AssemblyBlock",
                        "operations": []
                      },
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "currentPartialProductPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "sub",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "currentPartialProductPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "currentPartialProductPtr",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "currentPartialProductPtr",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "prodInv",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "prodInv"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mulmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "prodInv",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mload",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "add",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "currentPartialProductPtr",
                                          "arguments": []
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "productsToValuesOffset",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "PRIME",
                                  "arguments": []
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "currentPartialProductPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "sub",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "currentPartialProductPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "currentPartialProductPtr",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "currentPartialProductPtr",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "prodInv",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "prodInv"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mulmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "prodInv",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mload",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "add",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "currentPartialProductPtr",
                                          "arguments": []
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "productsToValuesOffset",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "PRIME",
                                  "arguments": []
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "currentPartialProductPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "sub",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "currentPartialProductPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "currentPartialProductPtr",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "currentPartialProductPtr",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "prodInv",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "prodInv"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mulmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "prodInv",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mload",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "add",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "currentPartialProductPtr",
                                          "arguments": []
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "productsToValuesOffset",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "PRIME",
                                  "arguments": []
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "currentPartialProductPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "sub",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "currentPartialProductPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "currentPartialProductPtr",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "currentPartialProductPtr",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "prodInv",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "prodInv"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mulmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "prodInv",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mload",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "add",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "currentPartialProductPtr",
                                          "arguments": []
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "productsToValuesOffset",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "PRIME",
                                  "arguments": []
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "currentPartialProductPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "sub",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "currentPartialProductPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "currentPartialProductPtr",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "currentPartialProductPtr",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "prodInv",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "prodInv"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mulmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "prodInv",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mload",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "add",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "currentPartialProductPtr",
                                          "arguments": []
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "productsToValuesOffset",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "PRIME",
                                  "arguments": []
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "currentPartialProductPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "sub",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "currentPartialProductPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "currentPartialProductPtr",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "currentPartialProductPtr",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "prodInv",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "prodInv"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mulmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "prodInv",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mload",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "add",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "currentPartialProductPtr",
                                          "arguments": []
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "productsToValuesOffset",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "PRIME",
                                  "arguments": []
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "currentPartialProductPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "sub",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "currentPartialProductPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "currentPartialProductPtr",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "currentPartialProductPtr",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "prodInv",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "prodInv"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mulmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "prodInv",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mload",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "add",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "currentPartialProductPtr",
                                          "arguments": []
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "productsToValuesOffset",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "PRIME",
                                  "arguments": []
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "currentPartialProductPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "sub",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "currentPartialProductPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "currentPartialProductPtr",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "currentPartialProductPtr",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "prodInv",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "prodInv"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mulmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "prodInv",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mload",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "add",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "currentPartialProductPtr",
                                          "arguments": []
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "productsToValuesOffset",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "PRIME",
                                  "arguments": []
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyFor",
                      "pre": {
                        "type": "AssemblyBlock",
                        "operations": []
                      },
                      "condition": {
                        "type": "AssemblyExpression",
                        "functionName": "gt",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "currentPartialProductPtr",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "firstPartialProductPtr",
                            "arguments": []
                          }
                        ]
                      },
                      "post": {
                        "type": "AssemblyBlock",
                        "operations": []
                      },
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "currentPartialProductPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "sub",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "currentPartialProductPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "currentPartialProductPtr",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "currentPartialProductPtr",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "prodInv",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "prodInv"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mulmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "prodInv",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mload",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "add",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "currentPartialProductPtr",
                                          "arguments": []
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "productsToValuesOffset",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "PRIME",
                                  "arguments": []
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "Fri",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "MemoryMap"
          },
          "arguments": null
        },
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "MemoryAccessUtils"
          },
          "arguments": null
        },
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "HornerEvaluator"
          },
          "arguments": null
        },
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "FriLayer"
          },
          "arguments": null
        }
      ],
      "subNodes": [
        {
          "type": "EventDefinition",
          "name": "LogGas",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "name",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "val",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "FunctionDefinition",
          "name": "verifyLastLayer",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "ctx",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "nPoints",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friLastLayerDegBound",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "ctx"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "MM_FRI_LAST_LAYER_DEG_BOUND"
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "groupOrderMinusOne",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "-",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "Identifier",
                      "name": "friLastLayerDegBound"
                    },
                    "right": {
                      "type": "IndexAccess",
                      "base": {
                        "type": "Identifier",
                        "name": "ctx"
                      },
                      "index": {
                        "type": "Identifier",
                        "name": "MM_BLOW_UP_FACTOR"
                      }
                    }
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "coefsStart",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "ctx"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "MM_FRI_LAST_LAYER_PTR"
                  }
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "nPoints"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint256"
                          },
                          "name": "point",
                          "storageLocation": null
                        }
                      ],
                      "initialValue": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "ctx"
                        },
                        "index": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "BinaryOperation",
                            "operator": "+",
                            "left": {
                              "type": "Identifier",
                              "name": "MM_FRI_QUEUE"
                            },
                            "right": {
                              "type": "BinaryOperation",
                              "operator": "*",
                              "left": {
                                "type": "NumberLiteral",
                                "number": "3",
                                "subdenomination": null
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "i"
                              }
                            }
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "2",
                            "subdenomination": null
                          }
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "point"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "fpow"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "point"
                            },
                            {
                              "type": "Identifier",
                              "name": "groupOrderMinusOne"
                            }
                          ],
                          "names": []
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "BinaryOperation",
                            "operator": "==",
                            "left": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "Identifier",
                                "name": "hornerEval"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "coefsStart"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "point"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "friLastLayerDegBound"
                                }
                              ],
                              "names": []
                            },
                            "right": {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "ctx"
                              },
                              "index": {
                                "type": "BinaryOperation",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryOperation",
                                  "operator": "+",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "MM_FRI_QUEUE"
                                  },
                                  "right": {
                                    "type": "BinaryOperation",
                                    "operator": "*",
                                    "left": {
                                      "type": "NumberLiteral",
                                      "number": "3",
                                      "subdenomination": null
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "i"
                                    }
                                  }
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "1",
                                  "subdenomination": null
                                }
                              }
                            }
                          },
                          {
                            "type": "stringLiteral",
                            "value": "Bad Last layer value."
                          }
                        ],
                        "names": []
                      }
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "friVerifyLayers",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "ctx",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friCtx",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "getPtr"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    {
                      "type": "Identifier",
                      "name": "MM_FRI_CTX"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "Identifier",
                        "name": "MAX_SUPPORTED_MAX_FRI_STEP"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "FRI_MAX_FRI_STEP"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Incosistent MAX_FRI_STEP between MemoryMap.sol and FriLayer.sol"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "initFriGroups"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "friCtx"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "channelPtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "getChannelPtr"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "ctx"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "merkleQueuePtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "getMerkleQueuePtr"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "ctx"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friStep",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "nLiveQueries",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "ctx"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "MM_N_UNIQUE_QUERIES"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_FRI_QUERIES_DELIMITER"
                    }
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "nLiveQueries"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "ctx"
                          },
                          "index": {
                            "type": "BinaryOperation",
                            "operator": "+",
                            "left": {
                              "type": "BinaryOperation",
                              "operator": "+",
                              "left": {
                                "type": "Identifier",
                                "name": "MM_FRI_QUEUE"
                              },
                              "right": {
                                "type": "BinaryOperation",
                                "operator": "*",
                                "left": {
                                  "type": "NumberLiteral",
                                  "number": "3",
                                  "subdenomination": null
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "i"
                                }
                              }
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "1",
                              "subdenomination": null
                            }
                          }
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "fmul"
                          },
                          "arguments": [
                            {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "ctx"
                              },
                              "index": {
                                "type": "BinaryOperation",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryOperation",
                                  "operator": "+",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "MM_FRI_QUEUE"
                                  },
                                  "right": {
                                    "type": "BinaryOperation",
                                    "operator": "*",
                                    "left": {
                                      "type": "NumberLiteral",
                                      "number": "3",
                                      "subdenomination": null
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "i"
                                    }
                                  }
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "1",
                                  "subdenomination": null
                                }
                              }
                            },
                            {
                              "type": "Identifier",
                              "name": "K_MONTGOMERY_R"
                            }
                          ],
                          "names": []
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friQueue",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "getPtr"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    {
                      "type": "Identifier",
                      "name": "MM_FRI_QUEUE"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "length": null
                    },
                    "name": "friSteps",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "getFriSteps"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "ctx"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "nFriSteps",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "Identifier",
                    "name": "friSteps"
                  },
                  "memberName": "length"
                }
              },
              {
                "type": "WhileStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "friStep"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "nFriSteps"
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint256"
                          },
                          "name": "friCosetSize",
                          "storageLocation": null
                        }
                      ],
                      "initialValue": {
                        "type": "BinaryOperation",
                        "operator": "**",
                        "left": {
                          "type": "NumberLiteral",
                          "number": "2",
                          "subdenomination": null
                        },
                        "right": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "friSteps"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "friStep"
                          }
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "nLiveQueries"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "computeNextLayer"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "channelPtr"
                            },
                            {
                              "type": "Identifier",
                              "name": "friQueue"
                            },
                            {
                              "type": "Identifier",
                              "name": "merkleQueuePtr"
                            },
                            {
                              "type": "Identifier",
                              "name": "nLiveQueries"
                            },
                            {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "ctx"
                              },
                              "index": {
                                "type": "BinaryOperation",
                                "operator": "+",
                                "left": {
                                  "type": "Identifier",
                                  "name": "MM_FRI_EVAL_POINTS"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "friStep"
                                }
                              }
                            },
                            {
                              "type": "Identifier",
                              "name": "friCosetSize"
                            },
                            {
                              "type": "Identifier",
                              "name": "friCtx"
                            }
                          ],
                          "names": []
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "verify"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "channelPtr"
                          },
                          {
                            "type": "Identifier",
                            "name": "merkleQueuePtr"
                          },
                          {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "ElementaryTypeName",
                              "name": "bytes32"
                            },
                            "arguments": [
                              {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "Identifier",
                                  "name": "ctx"
                                },
                                "index": {
                                  "type": "BinaryOperation",
                                  "operator": "-",
                                  "left": {
                                    "type": "BinaryOperation",
                                    "operator": "+",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "MM_FRI_COMMITMENTS"
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "friStep"
                                    }
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "1",
                                    "subdenomination": null
                                  }
                                }
                              }
                            ],
                            "names": []
                          },
                          {
                            "type": "Identifier",
                            "name": "nLiveQueries"
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "UnaryOperation",
                        "operator": "++",
                        "subExpression": {
                          "type": "Identifier",
                          "name": "friStep"
                        },
                        "isPrefix": false
                      }
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "verifyLastLayer"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    {
                      "type": "Identifier",
                      "name": "nLiveQueries"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "StarkVerifier",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "MemoryMap"
          },
          "arguments": null
        },
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "MemoryAccessUtils"
          },
          "arguments": null
        },
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "VerifierChannel"
          },
          "arguments": null
        },
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "IStarkVerifier"
          },
          "arguments": null
        },
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "Fri"
          },
          "arguments": null
        }
      ],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "numSecurityBits",
              "expression": null,
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "minProofOfWorkBits",
              "expression": null,
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "FunctionDefinition",
          "name": "constructor",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "numSecurityBits_",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "minProofOfWorkBits_",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "numSecurityBits"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "numSecurityBits_"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "minProofOfWorkBits"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "minProofOfWorkBits_"
                  }
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [],
          "isConstructor": true,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "EventDefinition",
          "name": "LogBool",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": "val",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "LogDebug",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "val",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address"
              },
              "name": "oodsContractAddress",
              "expression": null,
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "FunctionDefinition",
          "name": "airSpecificInit",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "publicInput",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "ctx",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "logTraceLength",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "PROOF_PARAMS_N_QUERIES_OFFSET",
              "expression": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "PROOF_PARAMS_LOG_BLOWUP_FACTOR_OFFSET",
              "expression": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "PROOF_PARAMS_PROOF_OF_WORK_BITS_OFFSET",
              "expression": {
                "type": "NumberLiteral",
                "number": "2",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "2",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "PROOF_PARAMS_FRI_LAST_LAYER_DEG_BOUND_OFFSET",
              "expression": {
                "type": "NumberLiteral",
                "number": "3",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "3",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "PROOF_PARAMS_N_FRI_STEPS_OFFSET",
              "expression": {
                "type": "NumberLiteral",
                "number": "4",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "4",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "PROOF_PARAMS_FRI_STEPS_OFFSET",
              "expression": {
                "type": "NumberLiteral",
                "number": "5",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "5",
            "subdenomination": null
          }
        },
        {
          "type": "FunctionDefinition",
          "name": "validateFriParams",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "friSteps",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "logTraceLength",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "logFriLastLayerDegBound",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "friSteps"
                        },
                        "index": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Only eta0 == 0 is currently supported"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "expectedLogDegBound",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "Identifier",
                  "name": "logFriLastLayerDegBound"
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "nFriSteps",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "Identifier",
                    "name": "friSteps"
                  },
                  "memberName": "length"
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "nFriSteps"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint256"
                          },
                          "name": "friStep",
                          "storageLocation": null
                        }
                      ],
                      "initialValue": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "friSteps"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "i"
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "BinaryOperation",
                            "operator": ">",
                            "left": {
                              "type": "Identifier",
                              "name": "friStep"
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "0",
                              "subdenomination": null
                            }
                          },
                          {
                            "type": "stringLiteral",
                            "value": "Only the first fri step can be 0"
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "BinaryOperation",
                            "operator": "<=",
                            "left": {
                              "type": "Identifier",
                              "name": "friStep"
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "4",
                              "subdenomination": null
                            }
                          },
                          {
                            "type": "stringLiteral",
                            "value": "Max supported fri step is 4."
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "+=",
                        "left": {
                          "type": "Identifier",
                          "name": "expectedLogDegBound"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "friStep"
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "Identifier",
                        "name": "expectedLogDegBound"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "logTraceLength"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Fri params do not match trace length"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "initVerifierParams",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "publicInput",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "proofParams",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "ctx",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": ">",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "proofParams"
                        },
                        "memberName": "length"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "PROOF_PARAMS_FRI_STEPS_OFFSET"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Invalid proofParams."
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "proofParams"
                        },
                        "memberName": "length"
                      },
                      "right": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "+",
                            "left": {
                              "type": "Identifier",
                              "name": "PROOF_PARAMS_FRI_STEPS_OFFSET"
                            },
                            "right": {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "proofParams"
                              },
                              "index": {
                                "type": "Identifier",
                                "name": "PROOF_PARAMS_N_FRI_STEPS_OFFSET"
                              }
                            }
                          }
                        ],
                        "isArray": false
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Invalid proofParams."
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "logBlowupFactor",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "proofParams"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "PROOF_PARAMS_LOG_BLOWUP_FACTOR_OFFSET"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<=",
                      "left": {
                        "type": "Identifier",
                        "name": "logBlowupFactor"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "16",
                        "subdenomination": null
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "logBlowupFactor must be at most 16"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": ">=",
                      "left": {
                        "type": "Identifier",
                        "name": "logBlowupFactor"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "1",
                        "subdenomination": null
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "logBlowupFactor must be at least 1"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "proofOfWorkBits",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "proofParams"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "PROOF_PARAMS_PROOF_OF_WORK_BITS_OFFSET"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<=",
                      "left": {
                        "type": "Identifier",
                        "name": "proofOfWorkBits"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "50",
                        "subdenomination": null
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "proofOfWorkBits must be at most 50"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": ">=",
                      "left": {
                        "type": "Identifier",
                        "name": "proofOfWorkBits"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "minProofOfWorkBits"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "minimum proofOfWorkBits not satisfied"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "proofOfWorkBits"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "numSecurityBits"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Proofs may not be purely based on PoW."
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "logFriLastLayerDegBound",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "TupleExpression",
                  "components": [
                    {
                      "type": "IndexAccess",
                      "base": {
                        "type": "Identifier",
                        "name": "proofParams"
                      },
                      "index": {
                        "type": "Identifier",
                        "name": "PROOF_PARAMS_FRI_LAST_LAYER_DEG_BOUND_OFFSET"
                      }
                    }
                  ],
                  "isArray": false
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<=",
                      "left": {
                        "type": "Identifier",
                        "name": "logFriLastLayerDegBound"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "10",
                        "subdenomination": null
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "logFriLastLayerDegBound must be at most 10."
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "nFriSteps",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "proofParams"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "PROOF_PARAMS_N_FRI_STEPS_OFFSET"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<=",
                      "left": {
                        "type": "Identifier",
                        "name": "nFriSteps"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "10",
                        "subdenomination": null
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Too many fri steps."
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": ">",
                      "left": {
                        "type": "Identifier",
                        "name": "nFriSteps"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "1",
                        "subdenomination": null
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Not enough fri steps."
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "length": null
                    },
                    "name": "friSteps",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "nFriSteps"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "nFriSteps"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "friSteps"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "i"
                          }
                        },
                        "right": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "proofParams"
                          },
                          "index": {
                            "type": "BinaryOperation",
                            "operator": "+",
                            "left": {
                              "type": "Identifier",
                              "name": "PROOF_PARAMS_FRI_STEPS_OFFSET"
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "logTraceLength",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "Identifier",
                        "name": "ctx"
                      },
                      {
                        "type": "Identifier",
                        "name": "logTraceLength"
                      }
                    ],
                    "isArray": false
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "airSpecificInit"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "publicInput"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "validateFriParams"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "friSteps"
                    },
                    {
                      "type": "Identifier",
                      "name": "logTraceLength"
                    },
                    {
                      "type": "Identifier",
                      "name": "logFriLastLayerDegBound"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friStepsPtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "getPtr"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    {
                      "type": "Identifier",
                      "name": "MM_FRI_STEPS_PTR"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "friStepsPtr",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "friSteps",
                          "arguments": []
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_FRI_LAST_LAYER_DEG_BOUND"
                    }
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "**",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "logFriLastLayerDegBound"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_TRACE_LENGTH"
                    }
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "**",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "logTraceLength"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_BLOW_UP_FACTOR"
                    }
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "**",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "logBlowupFactor"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_PROOF_OF_WORK_BITS"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "proofOfWorkBits"
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "nQueries",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "proofParams"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "PROOF_PARAMS_N_QUERIES_OFFSET"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": ">",
                      "left": {
                        "type": "Identifier",
                        "name": "nQueries"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Number of queries must be at least one"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<=",
                      "left": {
                        "type": "Identifier",
                        "name": "nQueries"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "MAX_N_QUERIES"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Too many queries."
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": ">=",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                          "type": "BinaryOperation",
                          "operator": "*",
                          "left": {
                            "type": "Identifier",
                            "name": "nQueries"
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "logBlowupFactor"
                          }
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "proofOfWorkBits"
                        }
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "numSecurityBits"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Proof params do not satisfy security requirements."
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_N_UNIQUE_QUERIES"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "nQueries"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_LOG_EVAL_DOMAIN_SIZE"
                    }
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "Identifier",
                      "name": "logTraceLength"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "logBlowupFactor"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_EVAL_DOMAIN_SIZE"
                    }
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "**",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "IndexAccess",
                      "base": {
                        "type": "Identifier",
                        "name": "ctx"
                      },
                      "index": {
                        "type": "Identifier",
                        "name": "MM_LOG_EVAL_DOMAIN_SIZE"
                      }
                    }
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "gen_evalDomain",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "fpow"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "GENERATOR_VAL"
                    },
                    {
                      "type": "BinaryOperation",
                      "operator": "/",
                      "left": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "-",
                            "left": {
                              "type": "Identifier",
                              "name": "K_MODULUS"
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "1",
                              "subdenomination": null
                            }
                          }
                        ],
                        "isArray": false
                      },
                      "right": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "ctx"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "MM_EVAL_DOMAIN_SIZE"
                        }
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_EVAL_DOMAIN_GENERATOR"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "gen_evalDomain"
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "genTraceDomain",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "fpow"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "gen_evalDomain"
                    },
                    {
                      "type": "IndexAccess",
                      "base": {
                        "type": "Identifier",
                        "name": "ctx"
                      },
                      "index": {
                        "type": "Identifier",
                        "name": "MM_BLOW_UP_FACTOR"
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_TRACE_GENERATOR"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "genTraceDomain"
                  }
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "getPublicInputHash",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "publicInput",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "oodsConsistencyCheck",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "ctx",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": [],
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "getNColumnsInTrace",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "getNColumnsInComposition",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "getMmCoefficients",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "getMmOodsValues",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "getMmOodsCoefficients",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "getNCoefficients",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "getNOodsValues",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "getNOodsCoefficients",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "hashRow",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "ctx",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "offset",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "length",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "res",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "res"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "keccak256",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "ctx",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x20"
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "offset",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "length",
                            "arguments": []
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "&=",
                  "left": {
                    "type": "Identifier",
                    "name": "res"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "getHashMask"
                    },
                    "arguments": [],
                    "names": []
                  }
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "adjustQueryIndicesAndPrepareEvalPoints",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "ctx",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "nUniqueQueries",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "ctx"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "MM_N_UNIQUE_QUERIES"
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friQueue",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "getPtr"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    {
                      "type": "Identifier",
                      "name": "MM_FRI_QUEUE"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friQueueEnd",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "Identifier",
                    "name": "friQueue"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "Identifier",
                      "name": "nUniqueQueries"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "0x60",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "evalPointsPtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "getPtr"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    {
                      "type": "Identifier",
                      "name": "MM_OODS_EVAL_POINTS"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "log_evalDomainSize",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "ctx"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "MM_LOG_EVAL_DOMAIN_SIZE"
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "evalDomainSize",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "ctx"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "MM_EVAL_DOMAIN_SIZE"
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "evalDomainGenerator",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "ctx"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "MM_EVAL_DOMAIN_GENERATOR"
                  }
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyFunctionDefinition",
                      "name": "bitReverse",
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "value"
                        },
                        {
                          "type": "Identifier",
                          "name": "numberOfBits"
                        }
                      ],
                      "returnArguments": [
                        {
                          "type": "Identifier",
                          "name": "res"
                        }
                      ],
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "res"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "value",
                              "arguments": []
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "res"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "or",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mul",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "and",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "res",
                                          "arguments": []
                                        },
                                        {
                                          "type": "HexNumber",
                                          "value": "0x5555555555555555"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "HexNumber",
                                      "value": "0x4"
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "and",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "HexNumber",
                                      "value": "0xaaaaaaaaaaaaaaaa"
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "res"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "or",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mul",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "and",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "res",
                                          "arguments": []
                                        },
                                        {
                                          "type": "HexNumber",
                                          "value": "0x6666666666666666"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "HexNumber",
                                      "value": "0x10"
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "and",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "HexNumber",
                                      "value": "0x19999999999999998"
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "res"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "or",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mul",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "and",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "res",
                                          "arguments": []
                                        },
                                        {
                                          "type": "HexNumber",
                                          "value": "0x7878787878787878"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "HexNumber",
                                      "value": "0x100"
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "and",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "HexNumber",
                                      "value": "0x78787878787878780"
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "res"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "or",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mul",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "and",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "res",
                                          "arguments": []
                                        },
                                        {
                                          "type": "HexNumber",
                                          "value": "0x7f807f807f807f80"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "HexNumber",
                                      "value": "0x10000"
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "and",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "HexNumber",
                                      "value": "0x7f807f807f807f8000"
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "res"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "or",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mul",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "and",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "res",
                                          "arguments": []
                                        },
                                        {
                                          "type": "HexNumber",
                                          "value": "0x7fff80007fff8000"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "HexNumber",
                                      "value": "0x100000000"
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "and",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "HexNumber",
                                      "value": "0x7fff80007fff80000000"
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "res"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "or",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mul",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "and",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "res",
                                          "arguments": []
                                        },
                                        {
                                          "type": "HexNumber",
                                          "value": "0x7fffffff80000000"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "HexNumber",
                                      "value": "0x10000000000000000"
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "and",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "res",
                                      "arguments": []
                                    },
                                    {
                                      "type": "HexNumber",
                                      "value": "0x7fffffff8000000000000000"
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "res"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "div",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "res",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "exp",
                                  "arguments": [
                                    {
                                      "type": "DecimalNumber",
                                      "value": "2"
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "sub",
                                      "arguments": [
                                        {
                                          "type": "DecimalNumber",
                                          "value": "127"
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "numberOfBits",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyFunctionDefinition",
                      "name": "expmod",
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "base"
                        },
                        {
                          "type": "Identifier",
                          "name": "exponent"
                        },
                        {
                          "type": "Identifier",
                          "name": "modulus"
                        }
                      ],
                      "returnArguments": [
                        {
                          "type": "Identifier",
                          "name": "res"
                        }
                      ],
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "p"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mload",
                              "arguments": [
                                {
                                  "type": "HexNumber",
                                  "value": "0x40"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "p",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x20"
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "p",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x20"
                                  }
                                ]
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x20"
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "p",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x40"
                                  }
                                ]
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x20"
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "p",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x60"
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "base",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "p",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x80"
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "exponent",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "p",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0xa0"
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "modulus",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyIf",
                            "condition": {
                              "type": "AssemblyExpression",
                              "functionName": "iszero",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "call",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "not",
                                      "arguments": [
                                        {
                                          "type": "DecimalNumber",
                                          "value": "0"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "HexNumber",
                                      "value": "0x05"
                                    },
                                    {
                                      "type": "DecimalNumber",
                                      "value": "0"
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "p",
                                      "arguments": []
                                    },
                                    {
                                      "type": "HexNumber",
                                      "value": "0xc0"
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "p",
                                      "arguments": []
                                    },
                                    {
                                      "type": "HexNumber",
                                      "value": "0x20"
                                    }
                                  ]
                                }
                              ]
                            },
                            "body": {
                              "type": "AssemblyBlock",
                              "operations": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "revert",
                                  "arguments": [
                                    {
                                      "type": "DecimalNumber",
                                      "value": "0"
                                    },
                                    {
                                      "type": "DecimalNumber",
                                      "value": "0"
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "res"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mload",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "p",
                                  "arguments": []
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "PRIME"
                        }
                      ],
                      "expression": {
                        "type": "HexNumber",
                        "value": "0x30000003000000010000000000000001"
                      }
                    },
                    {
                      "type": "AssemblyFor",
                      "pre": {
                        "type": "AssemblyBlock",
                        "operations": []
                      },
                      "condition": {
                        "type": "AssemblyExpression",
                        "functionName": "lt",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "friQueue",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "friQueueEnd",
                            "arguments": []
                          }
                        ]
                      },
                      "post": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "friQueue"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "friQueue",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x60"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "queryIdx"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mload",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "friQueue",
                                  "arguments": []
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "adjustedQueryIdx"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "queryIdx",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "evalDomainSize",
                                  "arguments": []
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "friQueue",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "adjustedQueryIdx",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "evalPointsPtr",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "expmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "evalDomainGenerator",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "bitReverse",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "queryIdx",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "log_evalDomainSize",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "evalPointsPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "evalPointsPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "readQueryResponsesAndDecommit",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "ctx",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "nColumns",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "proofDataPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "merkleRoot",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<=",
                      "left": {
                        "type": "Identifier",
                        "name": "nColumns"
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "getNColumnsInTrace"
                          },
                          "arguments": [],
                          "names": []
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "getNColumnsInComposition"
                          },
                          "arguments": [],
                          "names": []
                        }
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Too many columns."
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "nUniqueQueries",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "ctx"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "MM_N_UNIQUE_QUERIES"
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "channelPtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "getPtr"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    {
                      "type": "Identifier",
                      "name": "MM_CHANNEL"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friQueue",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "getPtr"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    {
                      "type": "Identifier",
                      "name": "MM_FRI_QUEUE"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friQueueEnd",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "Identifier",
                    "name": "friQueue"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "Identifier",
                      "name": "nUniqueQueries"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "0x60",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "merkleQueuePtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "getPtr"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    {
                      "type": "Identifier",
                      "name": "MM_MERKLE_QUEUE"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "rowSize",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                    "type": "NumberLiteral",
                    "number": "0x20",
                    "subdenomination": null
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "nColumns"
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "lhashMask",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "getHashMask"
                  },
                  "arguments": [],
                  "names": []
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "proofPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "channelPtr",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "merklePtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "merkleQueuePtr",
                        "arguments": []
                      }
                    },
                    {
                      "type": "AssemblyFor",
                      "pre": {
                        "type": "AssemblyBlock",
                        "operations": []
                      },
                      "condition": {
                        "type": "AssemblyExpression",
                        "functionName": "lt",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "friQueue",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "friQueueEnd",
                            "arguments": []
                          }
                        ]
                      },
                      "post": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "friQueue"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "friQueue",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x60"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "merkleLeaf"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "and",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "keccak256",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "proofPtr",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "rowSize",
                                      "arguments": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "lhashMask",
                                  "arguments": []
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyIf",
                            "condition": {
                              "type": "AssemblyExpression",
                              "functionName": "eq",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "rowSize",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            },
                            "body": {
                              "type": "AssemblyBlock",
                              "operations": [
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "merkleLeaf"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "proofPtr",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "merklePtr",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mload",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friQueue",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "merklePtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x20"
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "merkleLeaf",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "merklePtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "merklePtr",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x40"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyFor",
                            "pre": {
                              "type": "AssemblyBlock",
                              "operations": [
                                {
                                  "type": "AssemblyLocalDefinition",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "proofDataChunk_end"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "proofPtr",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "rowSize",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "type": "AssemblyExpression",
                              "functionName": "lt",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "proofPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "proofDataChunk_end",
                                  "arguments": []
                                }
                              ]
                            },
                            "post": {
                              "type": "AssemblyBlock",
                              "operations": [
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "proofPtr"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "proofPtr",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x20"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "body": {
                              "type": "AssemblyBlock",
                              "operations": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mstore",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "proofDataPtr",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "proofPtr",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "proofDataPtr"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "proofDataPtr",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x20"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "channelPtr",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "proofPtr",
                          "arguments": []
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "verify"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "channelPtr"
                    },
                    {
                      "type": "Identifier",
                      "name": "merkleQueuePtr"
                    },
                    {
                      "type": "Identifier",
                      "name": "merkleRoot"
                    },
                    {
                      "type": "Identifier",
                      "name": "nUniqueQueries"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "computeFirstFriLayer",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "ctx",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "adjustQueryIndicesAndPrepareEvalPoints"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "ctx"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "readQueryResponsesAndDecommit"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "getNColumnsInTrace"
                      },
                      "arguments": [],
                      "names": []
                    },
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "getPtr"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "ctx"
                        },
                        {
                          "type": "Identifier",
                          "name": "MM_TRACE_QUERY_RESPONSES"
                        }
                      ],
                      "names": []
                    },
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "ElementaryTypeName",
                        "name": "bytes32"
                      },
                      "arguments": [
                        {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "ctx"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "MM_TRACE_COMMITMENT"
                          }
                        }
                      ],
                      "names": []
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "readQueryResponsesAndDecommit"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "getNColumnsInComposition"
                      },
                      "arguments": [],
                      "names": []
                    },
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "getPtr"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "ctx"
                        },
                        {
                          "type": "Identifier",
                          "name": "MM_COMPOSITION_QUERY_RESPONSES"
                        }
                      ],
                      "names": []
                    },
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "ElementaryTypeName",
                        "name": "bytes32"
                      },
                      "arguments": [
                        {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "ctx"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "MM_OODS_COMMITMENT"
                          }
                        }
                      ],
                      "names": []
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "address"
                    },
                    "name": "oodsAddress",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "Identifier",
                  "name": "oodsContractAddress"
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friQueue",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "getPtr"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    {
                      "type": "Identifier",
                      "name": "MM_FRI_QUEUE"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "returnDataSize",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                    "type": "Identifier",
                    "name": "MAX_N_QUERIES"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0x60",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyIf",
                      "condition": {
                        "type": "AssemblyExpression",
                        "functionName": "iszero",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "staticcall",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "not",
                                "arguments": [
                                  {
                                    "type": "DecimalNumber",
                                    "value": "0"
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "oodsAddress",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "ctx",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mul",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "ctx",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "DecimalNumber",
                                        "value": "1"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x20"
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "friQueue",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "returnDataSize",
                                "arguments": []
                              }
                            ]
                          }
                        ]
                      },
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "returndatacopy",
                            "arguments": [
                              {
                                "type": "DecimalNumber",
                                "value": "0"
                              },
                              {
                                "type": "DecimalNumber",
                                "value": "0"
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "returndatasize",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "revert",
                            "arguments": [
                              {
                                "type": "DecimalNumber",
                                "value": "0"
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "returndatasize",
                                "arguments": []
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "readLastFriLayer",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "ctx",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "lmmChannel",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "Identifier",
                  "name": "MM_CHANNEL"
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friLastLayerDegBound",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "ctx"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "MM_FRI_LAST_LAYER_DEG_BOUND"
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "lastLayerPtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "badInput",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "primeMinusOne"
                        }
                      ],
                      "expression": {
                        "type": "HexNumber",
                        "value": "0x30000003000000010000000000000000"
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "channelPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "ctx",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x20"
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mul",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "lmmChannel",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x20"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "lastLayerPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "channelPtr",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "length"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mul",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "friLastLayerDegBound",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x20"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "lastLayerEnd"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "lastLayerPtr",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "length",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyFor",
                      "pre": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "coefsPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "lastLayerPtr",
                              "arguments": []
                            }
                          }
                        ]
                      },
                      "condition": {
                        "type": "AssemblyExpression",
                        "functionName": "lt",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "coefsPtr",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "lastLayerEnd",
                            "arguments": []
                          }
                        ]
                      },
                      "post": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "coefsPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "coefsPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "badInput"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "or",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "badInput",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "gt",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "coefsPtr",
                                          "arguments": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "primeMinusOne",
                                      "arguments": []
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "newDigestPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "sub",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "lastLayerPtr",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x20"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "digestPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "channelPtr",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x20"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "newDigestPtr",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "mload",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "digestPtr",
                              "arguments": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "digestPtr",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "keccak256",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "newDigestPtr",
                              "arguments": []
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "length",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "channelPtr",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x40"
                            }
                          ]
                        },
                        {
                          "type": "DecimalNumber",
                          "value": "0"
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "channelPtr",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "lastLayerEnd",
                          "arguments": []
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "Identifier",
                        "name": "badInput"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Invalid field element."
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_FRI_LAST_LAYER_PTR"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "lastLayerPtr"
                  }
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "verifyProof",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "proofParams",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "proof",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "publicInput",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "length": null
                    },
                    "name": "ctx",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "initVerifierParams"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "publicInput"
                    },
                    {
                      "type": "Identifier",
                      "name": "proofParams"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "channelPtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "getChannelPtr"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "ctx"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "initChannel"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "channelPtr"
                    },
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "getProofPtr"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "proof"
                        }
                      ],
                      "names": []
                    },
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "getPublicInputHash"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "publicInput"
                        }
                      ],
                      "names": []
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_TRACE_COMMITMENT"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "arguments": [
                      {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "readHash"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "channelPtr"
                          },
                          {
                            "type": "BooleanLiteral",
                            "value": true
                          }
                        ],
                        "names": []
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "VerifierChannel"
                    },
                    "memberName": "sendFieldElements"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "channelPtr"
                    },
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "getNCoefficients"
                      },
                      "arguments": [],
                      "names": []
                    },
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "getPtr"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "ctx"
                        },
                        {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "getMmCoefficients"
                          },
                          "arguments": [],
                          "names": []
                        }
                      ],
                      "names": []
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_OODS_COMMITMENT"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "arguments": [
                      {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "readHash"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "channelPtr"
                          },
                          {
                            "type": "BooleanLiteral",
                            "value": true
                          }
                        ],
                        "names": []
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "VerifierChannel"
                    },
                    "memberName": "sendFieldElements"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "channelPtr"
                    },
                    {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    },
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "getPtr"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "ctx"
                        },
                        {
                          "type": "Identifier",
                          "name": "MM_OODS_POINT"
                        }
                      ],
                      "names": []
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "lmmOodsValues",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "getMmOodsValues"
                  },
                  "arguments": [],
                  "names": []
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "Identifier",
                    "name": "lmmOodsValues"
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "Identifier",
                      "name": "lmmOodsValues"
                    },
                    "right": {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "getNOodsValues"
                      },
                      "arguments": [],
                      "names": []
                    }
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "ctx"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "i"
                          }
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "VerifierChannel"
                            },
                            "memberName": "readFieldElement"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "channelPtr"
                            },
                            {
                              "type": "BooleanLiteral",
                              "value": true
                            }
                          ],
                          "names": []
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "oodsConsistencyCheck"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "ctx"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "VerifierChannel"
                    },
                    "memberName": "sendFieldElements"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "channelPtr"
                    },
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "getNOodsCoefficients"
                      },
                      "arguments": [],
                      "names": []
                    },
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "getPtr"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "ctx"
                        },
                        {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "getMmOodsCoefficients"
                          },
                          "arguments": [],
                          "names": []
                        }
                      ],
                      "names": []
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_FRI_COMMITMENTS"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "arguments": [
                      {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "VerifierChannel"
                          },
                          "memberName": "readHash"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "channelPtr"
                          },
                          {
                            "type": "BooleanLiteral",
                            "value": true
                          }
                        ],
                        "names": []
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "nFriSteps",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "getFriSteps"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "ctx"
                      }
                    ],
                    "names": []
                  },
                  "memberName": "length"
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "fri_evalPointPtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "getPtr"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    {
                      "type": "Identifier",
                      "name": "MM_FRI_EVAL_POINTS"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "-",
                    "left": {
                      "type": "Identifier",
                      "name": "nFriSteps"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "VerifierChannel"
                          },
                          "memberName": "sendFieldElements"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "channelPtr"
                          },
                          {
                            "type": "NumberLiteral",
                            "number": "1",
                            "subdenomination": null
                          },
                          {
                            "type": "BinaryOperation",
                            "operator": "+",
                            "left": {
                              "type": "Identifier",
                              "name": "fri_evalPointPtr"
                            },
                            "right": {
                              "type": "BinaryOperation",
                              "operator": "*",
                              "left": {
                                "type": "Identifier",
                                "name": "i"
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "0x20",
                                "subdenomination": null
                              }
                            }
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "ctx"
                          },
                          "index": {
                            "type": "BinaryOperation",
                            "operator": "+",
                            "left": {
                              "type": "Identifier",
                              "name": "MM_FRI_COMMITMENTS"
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          }
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "ElementaryTypeName",
                            "name": "uint256"
                          },
                          "arguments": [
                            {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "VerifierChannel"
                                },
                                "memberName": "readHash"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "channelPtr"
                                },
                                {
                                  "type": "BooleanLiteral",
                                  "value": true
                                }
                              ],
                              "names": []
                            }
                          ],
                          "names": []
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "VerifierChannel"
                    },
                    "memberName": "sendFieldElements"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "channelPtr"
                    },
                    {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    },
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "getPtr"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "ctx"
                        },
                        {
                          "type": "BinaryOperation",
                          "operator": "-",
                          "left": {
                            "type": "BinaryOperation",
                            "operator": "+",
                            "left": {
                              "type": "Identifier",
                              "name": "MM_FRI_EVAL_POINTS"
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "nFriSteps"
                            }
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "1",
                            "subdenomination": null
                          }
                        }
                      ],
                      "names": []
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "readLastFriLayer"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "ctx"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "VerifierChannel"
                    },
                    "memberName": "verifyProofOfWork"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "channelPtr"
                    },
                    {
                      "type": "IndexAccess",
                      "base": {
                        "type": "Identifier",
                        "name": "ctx"
                      },
                      "index": {
                        "type": "Identifier",
                        "name": "MM_PROOF_OF_WORK_BITS"
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_N_UNIQUE_QUERIES"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "VerifierChannel"
                      },
                      "memberName": "sendRandomQueries"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "channelPtr"
                      },
                      {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "ctx"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "MM_N_UNIQUE_QUERIES"
                        }
                      },
                      {
                        "type": "BinaryOperation",
                        "operator": "-",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "ctx"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "MM_EVAL_DOMAIN_SIZE"
                          }
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "1",
                          "subdenomination": null
                        }
                      },
                      {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "getPtr"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "ctx"
                          },
                          {
                            "type": "Identifier",
                            "name": "MM_FRI_QUEUE"
                          }
                        ],
                        "names": []
                      },
                      {
                        "type": "NumberLiteral",
                        "number": "0x60",
                        "subdenomination": null
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "computeFirstFriLayer"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "ctx"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "friVerifyLayers"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "ctx"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "MimcVerifier",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "StarkParameters"
          },
          "arguments": null
        },
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "StarkVerifier"
          },
          "arguments": null
        },
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "FactRegistry"
          },
          "arguments": null
        },
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "PublicInputOffsets"
          },
          "arguments": null
        }
      ],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "MimcConstraintPoly"
              },
              "name": "constraintPoly",
              "expression": null,
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "PeriodicColumnContract"
                },
                "length": {
                  "type": "NumberLiteral",
                  "number": "20",
                  "subdenomination": null
                }
              },
              "name": "constantsCols",
              "expression": null,
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "PUBLIC_INPUT_SIZE",
              "expression": {
                "type": "NumberLiteral",
                "number": "5",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "5",
            "subdenomination": null
          }
        },
        {
          "type": "FunctionDefinition",
          "name": "constructor",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "address"
                  },
                  "length": null
                },
                "name": "auxPolynomials",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "MimcOods"
                },
                "name": "oodsContract",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "numSecurityBits_",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "minProofOfWorkBits_",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "constraintPoly"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "MimcConstraintPoly"
                    },
                    "arguments": [
                      {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "auxPolynomials"
                        },
                        "index": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "20",
                    "subdenomination": null
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "constantsCols"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "i"
                          }
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "PeriodicColumnContract"
                          },
                          "arguments": [
                            {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "auxPolynomials"
                              },
                              "index": {
                                "type": "BinaryOperation",
                                "operator": "+",
                                "left": {
                                  "type": "Identifier",
                                  "name": "i"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "1",
                                  "subdenomination": null
                                }
                              }
                            }
                          ],
                          "names": []
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "oodsContractAddress"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "address"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "oodsContract"
                      }
                    ],
                    "names": []
                  }
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "StarkVerifier",
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "numSecurityBits_"
                },
                {
                  "type": "Identifier",
                  "name": "minProofOfWorkBits_"
                }
              ]
            }
          ],
          "isConstructor": true,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "verifyProofAndRegister",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "proofParams",
                "storageLocation": "calldata",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "proof",
                "storageLocation": "calldata",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "publicInput",
                "storageLocation": "calldata",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "verifyProof"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "proofParams"
                    },
                    {
                      "type": "Identifier",
                      "name": "proof"
                    },
                    {
                      "type": "Identifier",
                      "name": "publicInput"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "registerFact"
                  },
                  "arguments": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "keccak256"
                      },
                      "arguments": [
                        {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "abi"
                            },
                            "memberName": "encodePacked"
                          },
                          "arguments": [
                            {
                              "type": "BinaryOperation",
                              "operator": "-",
                              "left": {
                                "type": "BinaryOperation",
                                "operator": "*",
                                "left": {
                                  "type": "NumberLiteral",
                                  "number": "10",
                                  "subdenomination": null
                                },
                                "right": {
                                  "type": "BinaryOperation",
                                  "operator": "**",
                                  "left": {
                                    "type": "NumberLiteral",
                                    "number": "2",
                                    "subdenomination": null
                                  },
                                  "right": {
                                    "type": "IndexAccess",
                                    "base": {
                                      "type": "Identifier",
                                      "name": "publicInput"
                                    },
                                    "index": {
                                      "type": "Identifier",
                                      "name": "OFFSET_LOG_TRACE_LENGTH"
                                    }
                                  }
                                }
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "1",
                                "subdenomination": null
                              }
                            },
                            {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "publicInput"
                              },
                              "index": {
                                "type": "Identifier",
                                "name": "OFFSET_VDF_OUTPUT_X"
                              }
                            },
                            {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "publicInput"
                              },
                              "index": {
                                "type": "Identifier",
                                "name": "OFFSET_VDF_OUTPUT_Y"
                              }
                            },
                            {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "publicInput"
                              },
                              "index": {
                                "type": "Identifier",
                                "name": "OFFSET_VDF_INPUT_X"
                              }
                            },
                            {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "publicInput"
                              },
                              "index": {
                                "type": "Identifier",
                                "name": "OFFSET_VDF_INPUT_Y"
                              }
                            }
                          ],
                          "names": []
                        }
                      ],
                      "names": []
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "getNColumnsInTrace",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "Identifier",
                "name": "N_COLUMNS_IN_MASK"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "getNColumnsInComposition",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "Identifier",
                "name": "CONSTRAINTS_DEGREE_BOUND"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "getMmCoefficients",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "Identifier",
                "name": "MM_COEFFICIENTS"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "getMmOodsValues",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "Identifier",
                "name": "MM_OODS_VALUES"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "getMmOodsCoefficients",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "Identifier",
                "name": "MM_OODS_COEFFICIENTS"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "getNCoefficients",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "Identifier",
                "name": "N_COEFFICIENTS"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "getNOodsValues",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "Identifier",
                "name": "N_OODS_VALUES"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "getNOodsCoefficients",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "Identifier",
                "name": "N_OODS_COEFFICIENTS"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "airSpecificInit",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "publicInput",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "ctx",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "logTraceLength",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "publicInput"
                        },
                        "memberName": "length"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "PUBLIC_INPUT_SIZE"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "INVALID_PUBLIC_INPUT_LENGTH"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "ctx"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "NewExpression",
                      "typeName": {
                        "type": "ArrayTypeName",
                        "baseTypeName": {
                          "type": "ElementaryTypeName",
                          "name": "uint256"
                        },
                        "length": null
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "MM_CONTEXT_SIZE"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_INPUT_VALUE_A"
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "publicInput"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "OFFSET_VDF_OUTPUT_X"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_INPUT_VALUE_B"
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "publicInput"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "OFFSET_VDF_OUTPUT_Y"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_OUTPUT_VALUE_A"
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "publicInput"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "OFFSET_VDF_INPUT_X"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_OUTPUT_VALUE_B"
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "publicInput"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "OFFSET_VDF_INPUT_Y"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_MAT00"
                    }
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0x109bbc181e07a285856e0d8bde02619",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_MAT01"
                    }
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0x1eb8859b1b789cd8a80927a32fdf41f7",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_MAT10"
                    }
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0xdc8eaac802c8f9cb9dff6ed0728012d",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_MAT11"
                    }
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0x2c18506f35eab63b58143a34181c89e",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "logTraceLength"
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "publicInput"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "OFFSET_LOG_TRACE_LENGTH"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<=",
                      "left": {
                        "type": "Identifier",
                        "name": "logTraceLength"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "50",
                        "subdenomination": null
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "logTraceLength must not exceed 50."
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "getPublicInputHash",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "publicInput",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "keccak256"
                },
                "arguments": [
                  {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "abi"
                      },
                      "memberName": "encodePacked"
                    },
                    "arguments": [
                      {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "ElementaryTypeName",
                          "name": "uint64"
                        },
                        "arguments": [
                          {
                            "type": "BinaryOperation",
                            "operator": "**",
                            "left": {
                              "type": "NumberLiteral",
                              "number": "2",
                              "subdenomination": null
                            },
                            "right": {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "publicInput"
                              },
                              "index": {
                                "type": "Identifier",
                                "name": "OFFSET_LOG_TRACE_LENGTH"
                              }
                            }
                          }
                        ],
                        "names": []
                      },
                      {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "publicInput"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "OFFSET_VDF_OUTPUT_X"
                        }
                      },
                      {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "publicInput"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "OFFSET_VDF_OUTPUT_Y"
                        }
                      },
                      {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "publicInput"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "OFFSET_VDF_INPUT_X"
                        }
                      },
                      {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "publicInput"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "OFFSET_VDF_INPUT_Y"
                        }
                      }
                    ],
                    "names": []
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "oodsConsistencyCheck",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "ctx",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "oodsPoint",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "ctx"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "MM_OODS_POINT"
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "nRows",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "256",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "zPointPow",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "fpow"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "oodsPoint"
                    },
                    {
                      "type": "BinaryOperation",
                      "operator": "/",
                      "left": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "ctx"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "MM_TRACE_LENGTH"
                        }
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "nRows"
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_PERIODIC_COLUMN__CONSTS0_A"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "constantsCols"
                        },
                        "index": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      },
                      "memberName": "compute"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "zPointPow"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_PERIODIC_COLUMN__CONSTS1_A"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "constantsCols"
                        },
                        "index": {
                          "type": "NumberLiteral",
                          "number": "1",
                          "subdenomination": null
                        }
                      },
                      "memberName": "compute"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "zPointPow"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_PERIODIC_COLUMN__CONSTS2_A"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "constantsCols"
                        },
                        "index": {
                          "type": "NumberLiteral",
                          "number": "2",
                          "subdenomination": null
                        }
                      },
                      "memberName": "compute"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "zPointPow"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_PERIODIC_COLUMN__CONSTS3_A"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "constantsCols"
                        },
                        "index": {
                          "type": "NumberLiteral",
                          "number": "3",
                          "subdenomination": null
                        }
                      },
                      "memberName": "compute"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "zPointPow"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_PERIODIC_COLUMN__CONSTS4_A"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "constantsCols"
                        },
                        "index": {
                          "type": "NumberLiteral",
                          "number": "4",
                          "subdenomination": null
                        }
                      },
                      "memberName": "compute"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "zPointPow"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_PERIODIC_COLUMN__CONSTS5_A"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "constantsCols"
                        },
                        "index": {
                          "type": "NumberLiteral",
                          "number": "5",
                          "subdenomination": null
                        }
                      },
                      "memberName": "compute"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "zPointPow"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_PERIODIC_COLUMN__CONSTS6_A"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "constantsCols"
                        },
                        "index": {
                          "type": "NumberLiteral",
                          "number": "6",
                          "subdenomination": null
                        }
                      },
                      "memberName": "compute"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "zPointPow"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_PERIODIC_COLUMN__CONSTS7_A"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "constantsCols"
                        },
                        "index": {
                          "type": "NumberLiteral",
                          "number": "7",
                          "subdenomination": null
                        }
                      },
                      "memberName": "compute"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "zPointPow"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_PERIODIC_COLUMN__CONSTS8_A"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "constantsCols"
                        },
                        "index": {
                          "type": "NumberLiteral",
                          "number": "8",
                          "subdenomination": null
                        }
                      },
                      "memberName": "compute"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "zPointPow"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_PERIODIC_COLUMN__CONSTS9_A"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "constantsCols"
                        },
                        "index": {
                          "type": "NumberLiteral",
                          "number": "9",
                          "subdenomination": null
                        }
                      },
                      "memberName": "compute"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "zPointPow"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_PERIODIC_COLUMN__CONSTS0_B"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "constantsCols"
                        },
                        "index": {
                          "type": "NumberLiteral",
                          "number": "10",
                          "subdenomination": null
                        }
                      },
                      "memberName": "compute"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "zPointPow"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_PERIODIC_COLUMN__CONSTS1_B"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "constantsCols"
                        },
                        "index": {
                          "type": "NumberLiteral",
                          "number": "11",
                          "subdenomination": null
                        }
                      },
                      "memberName": "compute"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "zPointPow"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_PERIODIC_COLUMN__CONSTS2_B"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "constantsCols"
                        },
                        "index": {
                          "type": "NumberLiteral",
                          "number": "12",
                          "subdenomination": null
                        }
                      },
                      "memberName": "compute"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "zPointPow"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_PERIODIC_COLUMN__CONSTS3_B"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "constantsCols"
                        },
                        "index": {
                          "type": "NumberLiteral",
                          "number": "13",
                          "subdenomination": null
                        }
                      },
                      "memberName": "compute"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "zPointPow"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_PERIODIC_COLUMN__CONSTS4_B"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "constantsCols"
                        },
                        "index": {
                          "type": "NumberLiteral",
                          "number": "14",
                          "subdenomination": null
                        }
                      },
                      "memberName": "compute"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "zPointPow"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_PERIODIC_COLUMN__CONSTS5_B"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "constantsCols"
                        },
                        "index": {
                          "type": "NumberLiteral",
                          "number": "15",
                          "subdenomination": null
                        }
                      },
                      "memberName": "compute"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "zPointPow"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_PERIODIC_COLUMN__CONSTS6_B"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "constantsCols"
                        },
                        "index": {
                          "type": "NumberLiteral",
                          "number": "16",
                          "subdenomination": null
                        }
                      },
                      "memberName": "compute"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "zPointPow"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_PERIODIC_COLUMN__CONSTS7_B"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "constantsCols"
                        },
                        "index": {
                          "type": "NumberLiteral",
                          "number": "17",
                          "subdenomination": null
                        }
                      },
                      "memberName": "compute"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "zPointPow"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_PERIODIC_COLUMN__CONSTS8_B"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "constantsCols"
                        },
                        "index": {
                          "type": "NumberLiteral",
                          "number": "18",
                          "subdenomination": null
                        }
                      },
                      "memberName": "compute"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "zPointPow"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ctx"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "MM_PERIODIC_COLUMN__CONSTS9_B"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "constantsCols"
                        },
                        "index": {
                          "type": "NumberLiteral",
                          "number": "19",
                          "subdenomination": null
                        }
                      },
                      "memberName": "compute"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "zPointPow"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "compositionFromTraceValue",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "address"
                    },
                    "name": "lconstraintPoly",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "address"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "constraintPoly"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "offset",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                    "type": "NumberLiteral",
                    "number": "0x20",
                    "subdenomination": null
                  },
                  "right": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                          "type": "NumberLiteral",
                          "number": "1",
                          "subdenomination": null
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "MM_CONSTRAINT_POLY_ARGS_START"
                        }
                      }
                    ],
                    "isArray": false
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "size",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                    "type": "NumberLiteral",
                    "number": "0x20",
                    "subdenomination": null
                  },
                  "right": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "BinaryOperation",
                        "operator": "-",
                        "left": {
                          "type": "Identifier",
                          "name": "MM_CONSTRAINT_POLY_ARGS_END"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "MM_CONSTRAINT_POLY_ARGS_START"
                        }
                      }
                    ],
                    "isArray": false
                  }
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "p"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "HexNumber",
                            "value": "0x40"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyIf",
                      "condition": {
                        "type": "AssemblyExpression",
                        "functionName": "iszero",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "staticcall",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "not",
                                "arguments": [
                                  {
                                    "type": "DecimalNumber",
                                    "value": "0"
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "lconstraintPoly",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "ctx",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "offset",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "size",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "p",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x20"
                              }
                            ]
                          }
                        ]
                      },
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "returndatacopy",
                            "arguments": [
                              {
                                "type": "DecimalNumber",
                                "value": "0"
                              },
                              {
                                "type": "DecimalNumber",
                                "value": "0"
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "returndatasize",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "revert",
                            "arguments": [
                              {
                                "type": "DecimalNumber",
                                "value": "0"
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "returndatasize",
                                "arguments": []
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "compositionFromTraceValue"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "p",
                            "arguments": []
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "claimedComposition",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "fadd"
                  },
                  "arguments": [
                    {
                      "type": "IndexAccess",
                      "base": {
                        "type": "Identifier",
                        "name": "ctx"
                      },
                      "index": {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                          "type": "Identifier",
                          "name": "MM_OODS_VALUES"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "MASK_SIZE"
                        }
                      }
                    },
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "fmul"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "oodsPoint"
                        },
                        {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "ctx"
                          },
                          "index": {
                            "type": "BinaryOperation",
                            "operator": "+",
                            "left": {
                              "type": "BinaryOperation",
                              "operator": "+",
                              "left": {
                                "type": "Identifier",
                                "name": "MM_OODS_VALUES"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "MASK_SIZE"
                              }
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "1",
                              "subdenomination": null
                            }
                          }
                        }
                      ],
                      "names": []
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "Identifier",
                        "name": "compositionFromTraceValue"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "claimedComposition"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "claimedComposition does not match trace"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        }
      ],
      "kind": "contract"
    }
  ]
}