{
  "type": "SourceUnit",
  "children": [
    {
      "type": "PragmaDirective",
      "name": "solidity",
      "value": "0.5.15"
    },
    {
      "type": "ContractDefinition",
      "name": "CairoBootloaderProgramSize",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "PROGRAM_SIZE",
              "expression": {
                "type": "NumberLiteral",
                "number": "220",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "220",
            "subdenomination": null
          }
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "CairoBootloaderProgram",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "CairoBootloaderProgramSize"
          },
          "arguments": null
        }
      ],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "getCompiledProgram",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": {
                    "type": "Identifier",
                    "name": "PROGRAM_SIZE"
                  }
                },
                "name": null,
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "TupleExpression",
                "components": [
                  {
                    "type": "NumberLiteral",
                    "number": "1226245742482522112",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "177",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "74168662805676031",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "146226256843603965",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5191102238658887680",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "2345108766317314046",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "290341444919459839",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "3",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4632937381316558848",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4612671182992932865",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4612671182992998402",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "146226256843603968",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "74168662805676031",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4612671182993063937",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4612671182993129474",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5198983563776196608",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5198983563776262144",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5200109459388203008",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5200109459388268544",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5198983563776458752",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "3618502788666131213697322783095070105623107215331596699973092056135872020480",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "1226245742482522112",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "3618502788666131213697322783095070105623107215331596699973092056135872020458",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "2345108766317314046",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "2345108766317314046",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "1226245742482522112",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5198420613823102976",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "3618502788666131213697322783095070105623107215331596699973092056135872020479",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "2345108766317314046",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "2345108766317314046",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "1226245742482522112",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "3618502788666131213697322783095070105623107215331596699973092056135872020474",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5191102234363920384",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5191102238658887680",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5191102242953854976",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5198420613822906368",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "50",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5189976364521848832",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "1226245742482522112",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "3618502788666131213697322783095070105623107215331596699973092056135872020439",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4623648689905041407",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "291467327646433279",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "2345108766317314046",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "146226256843603965",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5191102230068953088",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "2345108766317314046",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "2345108766317314046",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5188850460319711232",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5188850460319776768",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5201798300658860031",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5188850460319842304",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5210805504208568318",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4612389708016222207",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5198983563776196608",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5198983563776262144",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5198983563776327680",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5198983563776393216",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5198983563776458752",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "3618502788666131213697322783095070105623107215331596699973092056135872020480",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "1226245742482522112",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "3618502788666131213697322783095070105623107215331596699973092056135872020460",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "2345108766317314046",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5188850460319907840",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5202361254907052032",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5191102242953854976",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5188287510366552064",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5188287506071519232",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5188287510366486527",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4611826762357964797",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5198420613822906368",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "3618502788666131213697322783095070105623107215331596699973092056135872020480",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5198420613822906368",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "3",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5188287518956224512",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4623085744246521853",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "145944781866893308",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "3618502788666131213697322783095070105623107215331596699973092056135872020472",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "2345108766317314046",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "146226256843603965",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "6",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5191102225773985792",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5191102238658887680",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5191102242953854976",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "2345108766317314046",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "290341444919459839",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "16",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "1226245742482522112",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "3618502788666131213697322783095070105623107215331596699973092056135872020412",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4617174774030761984",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4612671182992867338",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5189976364521848832",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4612389712311713791",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5188850464614547456",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5191102264428691456",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "1226245742482522112",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "3618502788666131213697322783095070105623107215331596699973092056135872020448",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4612389712312303615",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4622804286450008075",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4612671195878359052",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5200109510928859136",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5188850468910104576",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4625619027626983437",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4622804286450597890",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "2",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4617174765440827395",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4612671191582801924",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4612671195877769221",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "1226245742482522112",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "3618502788666131213697322783095070105623107215331596699973092056135872020389",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4612389712311386110",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5198420613823168512",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "17",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4612389708016418815",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5191102230068953088",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5198983563776655360",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "2",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5191102307378364416",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5191102311673331712",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "1226245742482522112",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "3618502788666131213697322783095070105623107215331596699973092056135872020385",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "1191342896910008320",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "290341444919459839",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "1226245742482522112",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "3618502788666131213697322783095070105623107215331596699973092056135872020374",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4617174778325729294",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "722405534170316800",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5191102230068953088",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5198983563776655360",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "6",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5191102307378364416",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5199828035951427598",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5189976364521848832",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "1226245742482522112",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "3618502788666131213697322783095070105623107215331596699973092056135872020335",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4623648754330533887",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5191102238658887680",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5198983563776655360",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "2",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5198983563776655360",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "6",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5191102234363920384",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5189976364521848832",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "1226245742482522112",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "3618502788666131213697322783095070105623107215331596699973092056135872020371",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4623930225012473862",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4612671182994046991",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5198983563776655360",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "6",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5191102230068953088",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5191102234363920384",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5193354042767540224",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5198983563776393216",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "2",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5198983563776458752",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "3618502788666131213697322783095070105623107215331596699973092056135872020480",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "1226245742482522112",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "3618502788666131213697322783095070105623107215331596699973092056135872020398",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "2345108766317314046",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "290341444919459839",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5199265038752907265",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5191383709340631042",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5191383735110434819",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5191383717930565636",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5190257839498559493",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "122550255383924",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5190257839498559494",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "8098989891770344814",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5190257839498559495",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "138277649577220228665140075",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5190257839498559496",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "435459224417",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5190257839498559497",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5190257839498559498",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "3",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5190257839498559499",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5190257839498559500",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "2",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "1226245742482522112",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "3618502788666131213697322783095070105623107215331596699973092056135872020311",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5198420613823102976",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5198420613823037440",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5198420613822971904",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "9",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5191102238658887680",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5191102247248822272",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5188850460319645696",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "1226245742482522112",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "3618502788666131213697322783095070105623107215331596699973092056135872020361",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "4614641507830300670",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5188287510366486528",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5188287514661388288",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5188287518956290048",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5188287523251191808",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "5193354038472572928",
                    "subdenomination": null
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "2345108766317314046",
                    "subdenomination": null
                  }
                ],
                "isArray": true
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "CairoVerifierContract",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "verifyProofExternal",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "proofParams",
                "storageLocation": "calldata",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "proof",
                "storageLocation": "calldata",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "publicInput",
                "storageLocation": "calldata",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "CpuPublicInputOffsets",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "OFFSET_LOG_N_STEPS",
              "expression": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "OFFSET_RC_MIN",
              "expression": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "OFFSET_RC_MAX",
              "expression": {
                "type": "NumberLiteral",
                "number": "2",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "2",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "OFFSET_LAYOUT_CODE",
              "expression": {
                "type": "NumberLiteral",
                "number": "3",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "3",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "OFFSET_PROGRAM_BEGIN_ADDR",
              "expression": {
                "type": "NumberLiteral",
                "number": "4",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "4",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "OFFSET_PROGRAM_STOP_PTR",
              "expression": {
                "type": "NumberLiteral",
                "number": "5",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "5",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "OFFSET_EXECUTION_BEGIN_ADDR",
              "expression": {
                "type": "NumberLiteral",
                "number": "6",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "6",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "OFFSET_EXECUTION_STOP_PTR",
              "expression": {
                "type": "NumberLiteral",
                "number": "7",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "7",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "OFFSET_OUTPUT_BEGIN_ADDR",
              "expression": {
                "type": "NumberLiteral",
                "number": "8",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "8",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "OFFSET_OUTPUT_STOP_PTR",
              "expression": {
                "type": "NumberLiteral",
                "number": "9",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "9",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "OFFSET_PEDERSEN_BEGIN_ADDR",
              "expression": {
                "type": "NumberLiteral",
                "number": "10",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "10",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "OFFSET_PEDERSEN_STOP_PTR",
              "expression": {
                "type": "NumberLiteral",
                "number": "11",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "11",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "OFFSET_RANGE_CHECK_BEGIN_ADDR",
              "expression": {
                "type": "NumberLiteral",
                "number": "12",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "12",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "OFFSET_RANGE_CHECK_STOP_PTR",
              "expression": {
                "type": "NumberLiteral",
                "number": "13",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "13",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "OFFSET_ECDSA_BEGIN_ADDR",
              "expression": {
                "type": "NumberLiteral",
                "number": "14",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "14",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "OFFSET_ECDSA_STOP_PTR",
              "expression": {
                "type": "NumberLiteral",
                "number": "15",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "15",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "OFFSET_CHECKPOINTS_BEGIN_PTR",
              "expression": {
                "type": "NumberLiteral",
                "number": "16",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "16",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "OFFSET_CHECKPOINTS_STOP_PTR",
              "expression": {
                "type": "NumberLiteral",
                "number": "17",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "17",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "OFFSET_N_PUBLIC_MEMORY_PAGES",
              "expression": {
                "type": "NumberLiteral",
                "number": "18",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "18",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "OFFSET_PUBLIC_MEMORY",
              "expression": {
                "type": "NumberLiteral",
                "number": "19",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "19",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "N_WORDS_PER_PUBLIC_MEMORY_ENTRY",
              "expression": {
                "type": "NumberLiteral",
                "number": "2",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "2",
            "subdenomination": null
          }
        },
        {
          "type": "FunctionDefinition",
          "name": "getOffsetPageSize",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "pageId",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                  "type": "Identifier",
                  "name": "OFFSET_PUBLIC_MEMORY"
                },
                "right": {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                    "type": "NumberLiteral",
                    "number": "3",
                    "subdenomination": null
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "pageId"
                  }
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "getOffsetPageHash",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "pageId",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "Identifier",
                    "name": "OFFSET_PUBLIC_MEMORY"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "pageId"
                    }
                  }
                },
                "right": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "getOffsetPageAddr",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "pageId",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": ">=",
                      "left": {
                        "type": "Identifier",
                        "name": "pageId"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "1",
                        "subdenomination": null
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Address of page 0 is not part of the public input."
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "BinaryOperation",
                "operator": "-",
                "left": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "Identifier",
                    "name": "OFFSET_PUBLIC_MEMORY"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "pageId"
                    }
                  }
                },
                "right": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "getOffsetPaddingCell",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "nPages",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "BinaryOperation",
                "operator": "-",
                "left": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "Identifier",
                    "name": "OFFSET_PUBLIC_MEMORY"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "nPages"
                    }
                  }
                },
                "right": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "getOffsetPageProd",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "pageId",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "nPages",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "Identifier",
                      "name": "OFFSET_PUBLIC_MEMORY"
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "*",
                      "left": {
                        "type": "NumberLiteral",
                        "number": "3",
                        "subdenomination": null
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "nPages"
                      }
                    }
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  }
                },
                "right": {
                  "type": "Identifier",
                  "name": "pageId"
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "getPublicInputLength",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "nPages",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "Identifier",
                    "name": "OFFSET_PUBLIC_MEMORY"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "4",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "nPages"
                    }
                  }
                },
                "right": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "GpsOutputParser",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "CpuPublicInputOffsets"
          },
          "arguments": null
        }
      ],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "METADATA_TASKS_OFFSET",
              "expression": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "METADATA_OFFSET_TASK_OUTPUT_SIZE",
              "expression": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "METADATA_OFFSET_TASK_PROGRAM_HASH",
              "expression": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "METADATA_OFFSET_TASK_N_TREE_PAIRS",
              "expression": {
                "type": "NumberLiteral",
                "number": "2",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "2",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "METADATA_TASK_HEADER_SIZE",
              "expression": {
                "type": "NumberLiteral",
                "number": "3",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "3",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "METADATA_OFFSET_TREE_PAIR_N_PAGES",
              "expression": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "METADATA_OFFSET_TREE_PAIR_N_NODES",
              "expression": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "NODE_STACK_OFFSET_HASH",
              "expression": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "NODE_STACK_OFFSET_END",
              "expression": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "NODE_STACK_ITEM_SIZE",
              "expression": {
                "type": "NumberLiteral",
                "number": "2",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "2",
            "subdenomination": null
          }
        },
        {
          "type": "FunctionDefinition",
          "name": "registerFact",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "factHash",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": [],
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "registerGpsFacts",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "taskMetadata",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "cairoAuxInput",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "nTasks",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "taskMetadata"
                  },
                  "index": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "curAddr",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "cairoAuxInput"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "OFFSET_OUTPUT_BEGIN_ADDR"
                    }
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "3",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "taskMetadataOffset",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "Identifier",
                  "name": "METADATA_TASKS_OFFSET"
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "length": null
                    },
                    "name": "nodeStack",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "*",
                      "left": {
                        "type": "Identifier",
                        "name": "NODE_STACK_ITEM_SIZE"
                      },
                      "right": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "cairoAuxInput"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "OFFSET_N_PUBLIC_MEMORY_PAGES"
                        }
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "curPage",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "name": "task",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "task"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "nTasks"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "task"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint256"
                          },
                          "name": "curOffset",
                          "storageLocation": null
                        }
                      ],
                      "initialValue": {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      }
                    },
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint256"
                          },
                          "name": "nTreePairs",
                          "storageLocation": null
                        }
                      ],
                      "initialValue": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "taskMetadata"
                        },
                        "index": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "taskMetadataOffset"
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "METADATA_OFFSET_TASK_N_TREE_PAIRS"
                          }
                        }
                      }
                    },
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint256"
                          },
                          "name": "nodeStackLen",
                          "storageLocation": null
                        }
                      ],
                      "initialValue": {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      }
                    },
                    {
                      "type": "ForStatement",
                      "initExpression": {
                        "type": "VariableDeclarationStatement",
                        "variables": [
                          {
                            "type": "VariableDeclaration",
                            "typeName": {
                              "type": "ElementaryTypeName",
                              "name": "uint256"
                            },
                            "name": "treePair",
                            "storageLocation": null
                          }
                        ],
                        "initialValue": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      },
                      "conditionExpression": {
                        "type": "BinaryOperation",
                        "operator": "<",
                        "left": {
                          "type": "Identifier",
                          "name": "treePair"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "nTreePairs"
                        }
                      },
                      "loopExpression": {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "UnaryOperation",
                          "operator": "++",
                          "subExpression": {
                            "type": "Identifier",
                            "name": "treePair"
                          },
                          "isPrefix": false
                        }
                      },
                      "body": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "VariableDeclarationStatement",
                            "variables": [
                              {
                                "type": "VariableDeclaration",
                                "typeName": {
                                  "type": "ElementaryTypeName",
                                  "name": "uint256"
                                },
                                "name": "nPages",
                                "storageLocation": null
                              }
                            ],
                            "initialValue": {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "taskMetadata"
                              },
                              "index": {
                                "type": "BinaryOperation",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryOperation",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryOperation",
                                    "operator": "+",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "taskMetadataOffset"
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "METADATA_TASK_HEADER_SIZE"
                                    }
                                  },
                                  "right": {
                                    "type": "BinaryOperation",
                                    "operator": "*",
                                    "left": {
                                      "type": "NumberLiteral",
                                      "number": "2",
                                      "subdenomination": null
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "treePair"
                                    }
                                  }
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "METADATA_OFFSET_TREE_PAIR_N_PAGES"
                                }
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "Identifier",
                                "name": "require"
                              },
                              "arguments": [
                                {
                                  "type": "BinaryOperation",
                                  "operator": "<",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "nPages"
                                  },
                                  "right": {
                                    "type": "BinaryOperation",
                                    "operator": "**",
                                    "left": {
                                      "type": "NumberLiteral",
                                      "number": "2",
                                      "subdenomination": null
                                    },
                                    "right": {
                                      "type": "NumberLiteral",
                                      "number": "20",
                                      "subdenomination": null
                                    }
                                  }
                                },
                                {
                                  "type": "stringLiteral",
                                  "value": "Invalid value of n_pages in tree structure."
                                }
                              ],
                              "names": []
                            }
                          },
                          {
                            "type": "ForStatement",
                            "initExpression": {
                              "type": "VariableDeclarationStatement",
                              "variables": [
                                {
                                  "type": "VariableDeclaration",
                                  "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                  },
                                  "name": "i",
                                  "storageLocation": null
                                }
                              ],
                              "initialValue": {
                                "type": "NumberLiteral",
                                "number": "0",
                                "subdenomination": null
                              }
                            },
                            "conditionExpression": {
                              "type": "BinaryOperation",
                              "operator": "<",
                              "left": {
                                "type": "Identifier",
                                "name": "i"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "nPages"
                              }
                            },
                            "loopExpression": {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "UnaryOperation",
                                "operator": "++",
                                "subExpression": {
                                  "type": "Identifier",
                                  "name": "i"
                                },
                                "isPrefix": false
                              }
                            },
                            "body": {
                              "type": "Block",
                              "statements": [
                                {
                                  "type": "VariableDeclarationStatement",
                                  "variables": [
                                    {
                                      "type": "VariableDeclaration",
                                      "typeName": {
                                        "type": "ArrayTypeName",
                                        "baseTypeName": {
                                          "type": "ElementaryTypeName",
                                          "name": "uint256"
                                        },
                                        "length": null
                                      },
                                      "name": "cairoAuxInputCopy",
                                      "storageLocation": "memory"
                                    }
                                  ],
                                  "initialValue": {
                                    "type": "Identifier",
                                    "name": "cairoAuxInput"
                                  }
                                },
                                {
                                  "type": "VariableDeclarationStatement",
                                  "variables": [
                                    {
                                      "type": "VariableDeclaration",
                                      "typeName": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                      },
                                      "name": "pageSize",
                                      "storageLocation": null
                                    }
                                  ],
                                  "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "Identifier",
                                      "name": "pushPageToStack"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "curPage"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "curAddr"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "curOffset"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "nodeStack"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "nodeStackLen"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "cairoAuxInputCopy"
                                      }
                                    ],
                                    "names": []
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "curPage"
                                    },
                                    "right": {
                                      "type": "NumberLiteral",
                                      "number": "1",
                                      "subdenomination": null
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "nodeStackLen"
                                    },
                                    "right": {
                                      "type": "NumberLiteral",
                                      "number": "1",
                                      "subdenomination": null
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "curAddr"
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "pageSize"
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "curOffset"
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "pageSize"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "type": "VariableDeclarationStatement",
                            "variables": [
                              {
                                "type": "VariableDeclaration",
                                "typeName": {
                                  "type": "ElementaryTypeName",
                                  "name": "uint256"
                                },
                                "name": "nNodes",
                                "storageLocation": null
                              }
                            ],
                            "initialValue": {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "taskMetadata"
                              },
                              "index": {
                                "type": "BinaryOperation",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryOperation",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryOperation",
                                    "operator": "+",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "taskMetadataOffset"
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "METADATA_TASK_HEADER_SIZE"
                                    }
                                  },
                                  "right": {
                                    "type": "BinaryOperation",
                                    "operator": "*",
                                    "left": {
                                      "type": "NumberLiteral",
                                      "number": "2",
                                      "subdenomination": null
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "treePair"
                                    }
                                  }
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "METADATA_OFFSET_TREE_PAIR_N_NODES"
                                }
                              }
                            }
                          },
                          {
                            "type": "IfStatement",
                            "condition": {
                              "type": "BinaryOperation",
                              "operator": "!=",
                              "left": {
                                "type": "Identifier",
                                "name": "nNodes"
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "0",
                                "subdenomination": null
                              }
                            },
                            "TrueBody": {
                              "type": "Block",
                              "statements": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "nodeStackLen"
                                    },
                                    "right": {
                                      "type": "FunctionCall",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "constructNode"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "nodeStack"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "nodeStackLen"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "nNodes"
                                        }
                                      ],
                                      "names": []
                                    }
                                  }
                                }
                              ]
                            },
                            "FalseBody": null
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "BinaryOperation",
                            "operator": "==",
                            "left": {
                              "type": "Identifier",
                              "name": "nodeStackLen"
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "1",
                              "subdenomination": null
                            }
                          },
                          {
                            "type": "stringLiteral",
                            "value": "Node stack must contain exactly one item."
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint256"
                          },
                          "name": "programHash",
                          "storageLocation": null
                        }
                      ],
                      "initialValue": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "taskMetadata"
                        },
                        "index": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "taskMetadataOffset"
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "METADATA_OFFSET_TASK_PROGRAM_HASH"
                          }
                        }
                      }
                    },
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint256"
                          },
                          "name": "outputSize",
                          "storageLocation": null
                        }
                      ],
                      "initialValue": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "taskMetadata"
                        },
                        "index": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "taskMetadataOffset"
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "METADATA_OFFSET_TASK_OUTPUT_SIZE"
                          }
                        }
                      }
                    },
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "bytes32"
                          },
                          "name": "fact",
                          "storageLocation": null
                        }
                      ],
                      "initialValue": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "keccak256"
                        },
                        "arguments": [
                          {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "abi"
                              },
                              "memberName": "encode"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "programHash"
                              },
                              {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "Identifier",
                                  "name": "nodeStack"
                                },
                                "index": {
                                  "type": "Identifier",
                                  "name": "NODE_STACK_OFFSET_HASH"
                                }
                              }
                            ],
                            "names": []
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "+=",
                        "left": {
                          "type": "Identifier",
                          "name": "taskMetadataOffset"
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "METADATA_TASK_HEADER_SIZE"
                          },
                          "right": {
                            "type": "BinaryOperation",
                            "operator": "*",
                            "left": {
                              "type": "NumberLiteral",
                              "number": "2",
                              "subdenomination": null
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "nTreePairs"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "BinaryOperation",
                            "operator": "==",
                            "left": {
                              "type": "BinaryOperation",
                              "operator": "+",
                              "left": {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "Identifier",
                                  "name": "nodeStack"
                                },
                                "index": {
                                  "type": "Identifier",
                                  "name": "NODE_STACK_OFFSET_END"
                                }
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "2",
                                "subdenomination": null
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "outputSize"
                            }
                          },
                          {
                            "type": "stringLiteral",
                            "value": "The sum of the page sizes does not match output size."
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "registerFact"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "fact"
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "+=",
                        "left": {
                          "type": "Identifier",
                          "name": "curAddr"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "2",
                          "subdenomination": null
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "cairoAuxInput"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "OFFSET_N_PUBLIC_MEMORY_PAGES"
                        }
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "curPage"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Not all memory pages were processed."
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "pushPageToStack",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "curPage",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "curAddr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "curOffset",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "nodeStack",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "nodeStackLen",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "cairoAuxInput",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "pageSizeOffset",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "getOffsetPageSize"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "curPage"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "pageSize",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "pageAddrOffset",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "getOffsetPageAddr"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "curPage"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "pageAddr",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "pageHashOffset",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "getOffsetPageHash"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "curPage"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "pageHash",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "pageSize"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "cairoAuxInput",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mul",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "pageSizeOffset",
                                        "arguments": []
                                      },
                                      {
                                        "type": "DecimalNumber",
                                        "value": "1"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x20"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "pageAddr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "cairoAuxInput",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mul",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "pageAddrOffset",
                                        "arguments": []
                                      },
                                      {
                                        "type": "DecimalNumber",
                                        "value": "1"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x20"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "pageHash"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "cairoAuxInput",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mul",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "pageHashOffset",
                                        "arguments": []
                                      },
                                      {
                                        "type": "DecimalNumber",
                                        "value": "1"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x20"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "pageSize"
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "**",
                        "left": {
                          "type": "NumberLiteral",
                          "number": "2",
                          "subdenomination": null
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "30",
                          "subdenomination": null
                        }
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Invalid page size."
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "Identifier",
                        "name": "pageAddr"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "curAddr"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Invalid page address."
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "nodeStack"
                    },
                    "index": {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                          "type": "Identifier",
                          "name": "NODE_STACK_ITEM_SIZE"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "nodeStackLen"
                        }
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "NODE_STACK_OFFSET_END"
                      }
                    }
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "Identifier",
                      "name": "curOffset"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "pageSize"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "nodeStack"
                    },
                    "index": {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                          "type": "Identifier",
                          "name": "NODE_STACK_ITEM_SIZE"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "nodeStackLen"
                        }
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "NODE_STACK_OFFSET_HASH"
                      }
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "pageHash"
                  }
                }
              },
              {
                "type": "Identifier",
                "name": "pageSize"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "constructNode",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "nodeStack",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "nodeStackLen",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "nNodes",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<=",
                      "left": {
                        "type": "Identifier",
                        "name": "nNodes"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "nodeStackLen"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Invalid value of n_nodes in tree structure."
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "newNodeEnd",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "nodeStack"
                  },
                  "index": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "BinaryOperation",
                      "operator": "*",
                      "left": {
                        "type": "Identifier",
                        "name": "NODE_STACK_ITEM_SIZE"
                      },
                      "right": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "-",
                            "left": {
                              "type": "Identifier",
                              "name": "nodeStackLen"
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "1",
                              "subdenomination": null
                            }
                          }
                        ],
                        "isArray": false
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "NODE_STACK_OFFSET_END"
                    }
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "newStackLen",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "-",
                  "left": {
                    "type": "Identifier",
                    "name": "nodeStackLen"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "nNodes"
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "nodeStart",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "NumberLiteral",
                    "number": "0x20",
                    "subdenomination": null
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "BinaryOperation",
                      "operator": "*",
                      "left": {
                        "type": "Identifier",
                        "name": "newStackLen"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "NODE_STACK_ITEM_SIZE"
                      }
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "0x20",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "newNodeHash",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "newNodeHash"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "keccak256",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "nodeStack",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "nodeStart",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mul",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "nNodes",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x40"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "nodeStack"
                    },
                    "index": {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                          "type": "Identifier",
                          "name": "NODE_STACK_ITEM_SIZE"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "newStackLen"
                        }
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "NODE_STACK_OFFSET_END"
                      }
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "newNodeEnd"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "nodeStack"
                    },
                    "index": {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                          "type": "Identifier",
                          "name": "NODE_STACK_ITEM_SIZE"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "newStackLen"
                        }
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "NODE_STACK_OFFSET_HASH"
                      }
                    }
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "Identifier",
                      "name": "newNodeHash"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                  "type": "Identifier",
                  "name": "newStackLen"
                },
                "right": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "IFactRegistry",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "isValid",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "fact",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "IQueryableFactRegistry",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "IFactRegistry"
          },
          "arguments": null
        }
      ],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "hasRegisteredFact",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "Identity",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "identify",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": null,
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "MemoryPageFactRegistryConstants",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "REGULAR_PAGE",
              "expression": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "CONTINUOUS_PAGE",
              "expression": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
          }
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "PrimeFieldElement0",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "K_MODULUS",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x800000000000011000000000000000000000000000000000000000000000001",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x800000000000011000000000000000000000000000000000000000000000001",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "K_MODULUS_MASK",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "K_MONTGOMERY_R",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x7fffffffffffdf0ffffffffffffffffffffffffffffffffffffffffffffffe1",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x7fffffffffffdf0ffffffffffffffffffffffffffffffffffffffffffffffe1",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "K_MONTGOMERY_R_INV",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x40000000000001100000000000012100000000000000000000000000000000",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x40000000000001100000000000012100000000000000000000000000000000",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "GENERATOR_VAL",
              "expression": {
                "type": "NumberLiteral",
                "number": "3",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "3",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "ONE_VAL",
              "expression": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "GEN1024_VAL",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x659d83946a03edd72406af6711825f5653d9e35dc125289a206c054ec89c4f1",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x659d83946a03edd72406af6711825f5653d9e35dc125289a206c054ec89c4f1",
            "subdenomination": null
          }
        },
        {
          "type": "FunctionDefinition",
          "name": "fromMontgomery",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "val",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "res",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "res"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mulmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "val",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x40000000000001100000000000012100000000000000000000000000000000"
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x800000000000011000000000000000000000000000000000000000000000001"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "res"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "fromMontgomeryBytes",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "bs",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "res",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "bs"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "fromMontgomery"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "res"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "toMontgomeryInt",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "val",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "res",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "res"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mulmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "val",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x7fffffffffffdf0ffffffffffffffffffffffffffffffffffffffffffffffe1"
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x800000000000011000000000000000000000000000000000000000000000001"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "res"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "fmul",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "a",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "b",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "res",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "res"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mulmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "a",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "b",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x800000000000011000000000000000000000000000000000000000000000001"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "res"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "fadd",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "a",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "b",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "res",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "res"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "addmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "a",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "b",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x800000000000011000000000000000000000000000000000000000000000001"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "res"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "fsub",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "a",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "b",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "res",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "res"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "addmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "a",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "sub",
                            "arguments": [
                              {
                                "type": "HexNumber",
                                "value": "0x800000000000011000000000000000000000000000000000000000000000001"
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "b",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x800000000000011000000000000000000000000000000000000000000000001"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "res"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "fpow",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "val",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "exp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "expmod"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "val"
                  },
                  {
                    "type": "Identifier",
                    "name": "exp"
                  },
                  {
                    "type": "Identifier",
                    "name": "K_MODULUS"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "expmod",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "base",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "exponent",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "modulus",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "res",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "p"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "HexNumber",
                            "value": "0x40"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "p",
                          "arguments": []
                        },
                        {
                          "type": "HexNumber",
                          "value": "0x20"
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "p",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x20"
                            }
                          ]
                        },
                        {
                          "type": "HexNumber",
                          "value": "0x20"
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "p",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x40"
                            }
                          ]
                        },
                        {
                          "type": "HexNumber",
                          "value": "0x20"
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "p",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x60"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "base",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "p",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x80"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "exponent",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "p",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0xa0"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "modulus",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyIf",
                      "condition": {
                        "type": "AssemblyExpression",
                        "functionName": "iszero",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "staticcall",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "gas",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x05"
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "p",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0xc0"
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "p",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x20"
                              }
                            ]
                          }
                        ]
                      },
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "revert",
                            "arguments": [
                              {
                                "type": "DecimalNumber",
                                "value": "0"
                              },
                              {
                                "type": "DecimalNumber",
                                "value": "0"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "res"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "p",
                            "arguments": []
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "inverse",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "val",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "expmod"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "val"
                  },
                  {
                    "type": "BinaryOperation",
                    "operator": "-",
                    "left": {
                      "type": "Identifier",
                      "name": "K_MODULUS"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  },
                  {
                    "type": "Identifier",
                    "name": "K_MODULUS"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "FactRegistry",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "IQueryableFactRegistry"
          },
          "arguments": null
        }
      ],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "Mapping",
                "keyType": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "valueType": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                }
              },
              "name": "verifiedFact",
              "expression": null,
              "visibility": "private",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "bool"
              },
              "name": "anyFactRegistered",
              "expression": null,
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "FunctionDefinition",
          "name": "isValid",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "fact",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "_factCheck"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "fact"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "_factCheck",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "fact",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "IndexAccess",
                "base": {
                  "type": "Identifier",
                  "name": "verifiedFact"
                },
                "index": {
                  "type": "Identifier",
                  "name": "fact"
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "registerFact",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "factHash",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "verifiedFact"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "factHash"
                    }
                  },
                  "right": {
                    "type": "BooleanLiteral",
                    "value": true
                  }
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "UnaryOperation",
                  "operator": "!",
                  "subExpression": {
                    "type": "Identifier",
                    "name": "anyFactRegistered"
                  },
                  "isPrefix": true
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "anyFactRegistered"
                        },
                        "right": {
                          "type": "BooleanLiteral",
                          "value": true
                        }
                      }
                    }
                  ]
                },
                "FalseBody": null
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "hasRegisteredFact",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "Identifier",
                "name": "anyFactRegistered"
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "GpsStatementVerifier",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "GpsOutputParser"
          },
          "arguments": null
        },
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "FactRegistry"
          },
          "arguments": null
        },
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "Identity"
          },
          "arguments": null
        },
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "CairoBootloaderProgramSize"
          },
          "arguments": null
        },
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "PrimeFieldElement0"
          },
          "arguments": null
        }
      ],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "CairoBootloaderProgram"
              },
              "name": "bootloaderProgramContractAddress",
              "expression": null,
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "MemoryPageFactRegistry"
              },
              "name": "memoryPageFactRegistry",
              "expression": null,
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "CairoVerifierContract"
                },
                "length": null
              },
              "name": "cairoVerifierContractAddresses",
              "expression": null,
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "N_MAIN_ARGS",
              "expression": {
                "type": "NumberLiteral",
                "number": "5",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "5",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "N_MAIN_RETURN_VALUES",
              "expression": {
                "type": "NumberLiteral",
                "number": "5",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "5",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "N_BUILTINS",
              "expression": {
                "type": "NumberLiteral",
                "number": "4",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "4",
            "subdenomination": null
          }
        },
        {
          "type": "FunctionDefinition",
          "name": "constructor",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "bootloaderProgramContract",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "memoryPageFactRegistry_",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "address"
                  },
                  "length": null
                },
                "name": "cairoVerifierContracts",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "bootloaderProgramContractAddress"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "CairoBootloaderProgram"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "bootloaderProgramContract"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "memoryPageFactRegistry"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "MemoryPageFactRegistry"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "memoryPageFactRegistry_"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "cairoVerifierContractAddresses"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "NewExpression",
                      "typeName": {
                        "type": "ArrayTypeName",
                        "baseTypeName": {
                          "type": "UserDefinedTypeName",
                          "namePath": "CairoVerifierContract"
                        },
                        "length": null
                      }
                    },
                    "arguments": [
                      {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "cairoVerifierContracts"
                        },
                        "memberName": "length"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "cairoVerifierContracts"
                    },
                    "memberName": "length"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": true
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "cairoVerifierContractAddresses"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "i"
                          }
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "CairoVerifierContract"
                          },
                          "arguments": [
                            {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "cairoVerifierContracts"
                              },
                              "index": {
                                "type": "Identifier",
                                "name": "i"
                              }
                            }
                          ],
                          "names": []
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [],
          "isConstructor": true,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "identify",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": null,
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "stringLiteral",
                "value": "StarkWare_GpsStatementVerifier_2020_1"
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "verifyProofAndRegister",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "proofParams",
                "storageLocation": "calldata",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "proof",
                "storageLocation": "calldata",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "taskMetadata",
                "storageLocation": "calldata",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "cairoAuxInput",
                "storageLocation": "calldata",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "cairoVerifierId",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": ">",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "cairoAuxInput"
                        },
                        "memberName": "length"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "OFFSET_N_PUBLIC_MEMORY_PAGES"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Invalid cairoAuxInput length."
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "nPages",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "cairoAuxInput"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "OFFSET_N_PUBLIC_MEMORY_PAGES"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "cairoAuxInput"
                        },
                        "memberName": "length"
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "getPublicInputLength"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "nPages"
                            }
                          ],
                          "names": []
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "2",
                          "subdenomination": null
                        }
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Invalid cairoAuxInput length."
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "length": null
                    },
                    "name": "cairoPublicInput",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "-",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "cairoAuxInput"
                        },
                        "memberName": "length"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "2",
                        "subdenomination": null
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "-",
                    "left": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "cairoAuxInput"
                      },
                      "memberName": "length"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "cairoPublicInput"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "i"
                          }
                        },
                        "right": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "cairoAuxInput"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "i"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "Block",
                "statements": [
                  {
                    "type": "VariableDeclarationStatement",
                    "variables": [
                      {
                        "type": "VariableDeclaration",
                        "name": "publicMemoryLength",
                        "typeName": {
                          "type": "ElementaryTypeName",
                          "name": "uint256"
                        },
                        "isStateVar": false,
                        "isIndexed": false,
                        "decl": "[738 727 663 620 600 612 600 426 325 305 196]"
                      },
                      {
                        "type": "VariableDeclaration",
                        "name": "memoryHash",
                        "typeName": {
                          "type": "ElementaryTypeName",
                          "name": "uint256"
                        },
                        "isStateVar": false,
                        "isIndexed": false,
                        "decl": "[742 727 663 620 600 612 600 426 325 305 196]"
                      },
                      {
                        "type": "VariableDeclaration",
                        "name": "prod",
                        "typeName": {
                          "type": "ElementaryTypeName",
                          "name": "uint256"
                        },
                        "isStateVar": false,
                        "isIndexed": false,
                        "decl": "[742 727 663 620 600 612 600 426 325 305 196]"
                      }
                    ],
                    "initialValue": {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "registerPublicMemoryMainPage"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "taskMetadata"
                        },
                        {
                          "type": "Identifier",
                          "name": "cairoAuxInput"
                        }
                      ],
                      "names": []
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "require"
                      },
                      "arguments": [
                        {
                          "type": "BinaryOperation",
                          "operator": "==",
                          "left": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "cairoAuxInput"
                            },
                            "index": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "Identifier",
                                "name": "getOffsetPageSize"
                              },
                              "arguments": [
                                {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                }
                              ],
                              "names": []
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "publicMemoryLength"
                          }
                        },
                        {
                          "type": "stringLiteral",
                          "value": "Invalid size for memory page 0."
                        }
                      ],
                      "names": []
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "require"
                      },
                      "arguments": [
                        {
                          "type": "BinaryOperation",
                          "operator": "==",
                          "left": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "cairoAuxInput"
                            },
                            "index": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "Identifier",
                                "name": "getOffsetPageHash"
                              },
                              "arguments": [
                                {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                }
                              ],
                              "names": []
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "memoryHash"
                          }
                        },
                        {
                          "type": "stringLiteral",
                          "value": "Invalid hash for memory page 0."
                        }
                      ],
                      "names": []
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "require"
                      },
                      "arguments": [
                        {
                          "type": "BinaryOperation",
                          "operator": "==",
                          "left": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "cairoAuxInput"
                            },
                            "index": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "Identifier",
                                "name": "getOffsetPageProd"
                              },
                              "arguments": [
                                {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                },
                                {
                                  "type": "Identifier",
                                  "name": "nPages"
                                }
                              ],
                              "names": []
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "prod"
                          }
                        },
                        {
                          "type": "stringLiteral",
                          "value": "Invalid cumulative product for memory page 0."
                        }
                      ],
                      "names": []
                    }
                  }
                ]
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "cairoVerifierId"
                      },
                      "right": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "cairoVerifierContractAddresses"
                        },
                        "memberName": "length"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "cairoVerifierId is out of range."
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "IndexAccess",
                      "base": {
                        "type": "Identifier",
                        "name": "cairoVerifierContractAddresses"
                      },
                      "index": {
                        "type": "Identifier",
                        "name": "cairoVerifierId"
                      }
                    },
                    "memberName": "verifyProofExternal"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "proofParams"
                    },
                    {
                      "type": "Identifier",
                      "name": "proof"
                    },
                    {
                      "type": "Identifier",
                      "name": "cairoPublicInput"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "registerGpsFacts"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "taskMetadata"
                    },
                    {
                      "type": "Identifier",
                      "name": "cairoAuxInput"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "registerPublicMemoryMainPage",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "taskMetadata",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "cairoAuxInput",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "publicMemoryLength",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "memoryHash",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "prod",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "nTasks",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "taskMetadata"
                  },
                  "index": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "nTasks"
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "**",
                        "left": {
                          "type": "NumberLiteral",
                          "number": "2",
                          "subdenomination": null
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "30",
                          "subdenomination": null
                        }
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Invalid number of tasks."
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "publicMemoryLength"
                  },
                  "right": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "BinaryOperation",
                            "operator": "+",
                            "left": {
                              "type": "BinaryOperation",
                              "operator": "+",
                              "left": {
                                "type": "Identifier",
                                "name": "PROGRAM_SIZE"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "N_MAIN_ARGS"
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "N_MAIN_RETURN_VALUES"
                            }
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "1",
                            "subdenomination": null
                          }
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": "*",
                          "left": {
                            "type": "NumberLiteral",
                            "number": "2",
                            "subdenomination": null
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "nTasks"
                          }
                        }
                      }
                    ],
                    "isArray": false
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "length": null
                    },
                    "name": "publicMemory",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "*",
                      "left": {
                        "type": "Identifier",
                        "name": "N_WORDS_PER_PUBLIC_MEMORY_ENTRY"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "publicMemoryLength"
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "offset",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                }
              },
              {
                "type": "Block",
                "statements": [
                  {
                    "type": "VariableDeclarationStatement",
                    "variables": [
                      {
                        "type": "VariableDeclaration",
                        "typeName": {
                          "type": "ArrayTypeName",
                          "baseTypeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint256"
                          },
                          "length": {
                            "type": "Identifier",
                            "name": "PROGRAM_SIZE"
                          }
                        },
                        "name": "bootloaderProgram",
                        "storageLocation": "memory"
                      }
                    ],
                    "initialValue": {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "bootloaderProgramContractAddress"
                        },
                        "memberName": "getCompiledProgram"
                      },
                      "arguments": [],
                      "names": []
                    }
                  },
                  {
                    "type": "ForStatement",
                    "initExpression": {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint256"
                          },
                          "name": "i",
                          "storageLocation": null
                        }
                      ],
                      "initialValue": {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      }
                    },
                    "conditionExpression": {
                      "type": "BinaryOperation",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "i"
                      },
                      "right": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "bootloaderProgram"
                        },
                        "memberName": "length"
                      }
                    },
                    "loopExpression": {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "UnaryOperation",
                        "operator": "++",
                        "subExpression": {
                          "type": "Identifier",
                          "name": "i"
                        },
                        "isPrefix": false
                      }
                    },
                    "body": {
                      "type": "Block",
                      "statements": [
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "BinaryOperation",
                            "operator": "=",
                            "left": {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "publicMemory"
                              },
                              "index": {
                                "type": "Identifier",
                                "name": "offset"
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "BinaryOperation",
                            "operator": "=",
                            "left": {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "publicMemory"
                              },
                              "index": {
                                "type": "BinaryOperation",
                                "operator": "+",
                                "left": {
                                  "type": "Identifier",
                                  "name": "offset"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "1",
                                  "subdenomination": null
                                }
                              }
                            },
                            "right": {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "bootloaderProgram"
                              },
                              "index": {
                                "type": "Identifier",
                                "name": "i"
                              }
                            }
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "BinaryOperation",
                            "operator": "+=",
                            "left": {
                              "type": "Identifier",
                              "name": "offset"
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "2",
                              "subdenomination": null
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "type": "Block",
                "statements": [
                  {
                    "type": "VariableDeclarationStatement",
                    "variables": [
                      {
                        "type": "VariableDeclaration",
                        "typeName": {
                          "type": "ElementaryTypeName",
                          "name": "uint256"
                        },
                        "name": "executionBeginAddr",
                        "storageLocation": null
                      }
                    ],
                    "initialValue": {
                      "type": "IndexAccess",
                      "base": {
                        "type": "Identifier",
                        "name": "cairoAuxInput"
                      },
                      "index": {
                        "type": "Identifier",
                        "name": "OFFSET_EXECUTION_BEGIN_ADDR"
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "publicMemory"
                        },
                        "index": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "offset"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        }
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "-",
                        "left": {
                          "type": "Identifier",
                          "name": "executionBeginAddr"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "5",
                          "subdenomination": null
                        }
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "publicMemory"
                        },
                        "index": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "offset"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "1",
                            "subdenomination": null
                          }
                        }
                      },
                      "right": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "cairoAuxInput"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "OFFSET_OUTPUT_BEGIN_ADDR"
                        }
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "publicMemory"
                        },
                        "index": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "offset"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "2",
                            "subdenomination": null
                          }
                        }
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "-",
                        "left": {
                          "type": "Identifier",
                          "name": "executionBeginAddr"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "4",
                          "subdenomination": null
                        }
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "publicMemory"
                        },
                        "index": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "offset"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "3",
                            "subdenomination": null
                          }
                        }
                      },
                      "right": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "cairoAuxInput"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "OFFSET_PEDERSEN_BEGIN_ADDR"
                        }
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "publicMemory"
                        },
                        "index": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "offset"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "4",
                            "subdenomination": null
                          }
                        }
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "-",
                        "left": {
                          "type": "Identifier",
                          "name": "executionBeginAddr"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "3",
                          "subdenomination": null
                        }
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "publicMemory"
                        },
                        "index": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "offset"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "5",
                            "subdenomination": null
                          }
                        }
                      },
                      "right": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "cairoAuxInput"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "OFFSET_RANGE_CHECK_BEGIN_ADDR"
                        }
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "publicMemory"
                        },
                        "index": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "offset"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "6",
                            "subdenomination": null
                          }
                        }
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "-",
                        "left": {
                          "type": "Identifier",
                          "name": "executionBeginAddr"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "2",
                          "subdenomination": null
                        }
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "publicMemory"
                        },
                        "index": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "offset"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "7",
                            "subdenomination": null
                          }
                        }
                      },
                      "right": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "cairoAuxInput"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "OFFSET_ECDSA_BEGIN_ADDR"
                        }
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "publicMemory"
                        },
                        "index": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "offset"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "8",
                            "subdenomination": null
                          }
                        }
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "-",
                        "left": {
                          "type": "Identifier",
                          "name": "executionBeginAddr"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "1",
                          "subdenomination": null
                        }
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "publicMemory"
                        },
                        "index": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "offset"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "9",
                            "subdenomination": null
                          }
                        }
                      },
                      "right": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "cairoAuxInput"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "OFFSET_CHECKPOINTS_BEGIN_PTR"
                        }
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "BinaryOperation",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "offset"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "10",
                        "subdenomination": null
                      }
                    }
                  }
                ]
              },
              {
                "type": "Block",
                "statements": [
                  {
                    "type": "VariableDeclarationStatement",
                    "variables": [
                      {
                        "type": "VariableDeclaration",
                        "typeName": {
                          "type": "ElementaryTypeName",
                          "name": "uint256"
                        },
                        "name": "executionStopPtr",
                        "storageLocation": null
                      }
                    ],
                    "initialValue": {
                      "type": "IndexAccess",
                      "base": {
                        "type": "Identifier",
                        "name": "cairoAuxInput"
                      },
                      "index": {
                        "type": "Identifier",
                        "name": "OFFSET_EXECUTION_STOP_PTR"
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "publicMemory"
                        },
                        "index": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "offset"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        }
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "-",
                        "left": {
                          "type": "Identifier",
                          "name": "executionStopPtr"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "5",
                          "subdenomination": null
                        }
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "publicMemory"
                        },
                        "index": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "offset"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "1",
                            "subdenomination": null
                          }
                        }
                      },
                      "right": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "cairoAuxInput"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "OFFSET_OUTPUT_STOP_PTR"
                        }
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "publicMemory"
                        },
                        "index": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "offset"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "2",
                            "subdenomination": null
                          }
                        }
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "-",
                        "left": {
                          "type": "Identifier",
                          "name": "executionStopPtr"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "4",
                          "subdenomination": null
                        }
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "publicMemory"
                        },
                        "index": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "offset"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "3",
                            "subdenomination": null
                          }
                        }
                      },
                      "right": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "cairoAuxInput"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "OFFSET_PEDERSEN_STOP_PTR"
                        }
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "publicMemory"
                        },
                        "index": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "offset"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "4",
                            "subdenomination": null
                          }
                        }
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "-",
                        "left": {
                          "type": "Identifier",
                          "name": "executionStopPtr"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "3",
                          "subdenomination": null
                        }
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "publicMemory"
                        },
                        "index": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "offset"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "5",
                            "subdenomination": null
                          }
                        }
                      },
                      "right": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "cairoAuxInput"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "OFFSET_RANGE_CHECK_STOP_PTR"
                        }
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "publicMemory"
                        },
                        "index": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "offset"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "6",
                            "subdenomination": null
                          }
                        }
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "-",
                        "left": {
                          "type": "Identifier",
                          "name": "executionStopPtr"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "2",
                          "subdenomination": null
                        }
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "publicMemory"
                        },
                        "index": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "offset"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "7",
                            "subdenomination": null
                          }
                        }
                      },
                      "right": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "cairoAuxInput"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "OFFSET_ECDSA_STOP_PTR"
                        }
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "publicMemory"
                        },
                        "index": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "offset"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "8",
                            "subdenomination": null
                          }
                        }
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "-",
                        "left": {
                          "type": "Identifier",
                          "name": "executionStopPtr"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "1",
                          "subdenomination": null
                        }
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "publicMemory"
                        },
                        "index": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "offset"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "9",
                            "subdenomination": null
                          }
                        }
                      },
                      "right": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "cairoAuxInput"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "OFFSET_CHECKPOINTS_STOP_PTR"
                        }
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "BinaryOperation",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "offset"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "10",
                        "subdenomination": null
                      }
                    }
                  }
                ]
              },
              {
                "type": "Block",
                "statements": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "require"
                      },
                      "arguments": [
                        {
                          "type": "BinaryOperation",
                          "operator": ">=",
                          "left": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "cairoAuxInput"
                            },
                            "index": {
                              "type": "Identifier",
                              "name": "OFFSET_RANGE_CHECK_STOP_PTR"
                            }
                          },
                          "right": {
                            "type": "BinaryOperation",
                            "operator": "+",
                            "left": {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "cairoAuxInput"
                              },
                              "index": {
                                "type": "Identifier",
                                "name": "OFFSET_RANGE_CHECK_BEGIN_ADDR"
                              }
                            },
                            "right": {
                              "type": "BinaryOperation",
                              "operator": "*",
                              "left": {
                                "type": "Identifier",
                                "name": "N_BUILTINS"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "nTasks"
                              }
                            }
                          }
                        },
                        {
                          "type": "stringLiteral",
                          "value": "Range-check stop pointer should be after all range checks used for validations."
                        }
                      ],
                      "names": []
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "require"
                      },
                      "arguments": [
                        {
                          "type": "BinaryOperation",
                          "operator": ">=",
                          "left": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "cairoAuxInput"
                            },
                            "index": {
                              "type": "Identifier",
                              "name": "OFFSET_CHECKPOINTS_STOP_PTR"
                            }
                          },
                          "right": {
                            "type": "BinaryOperation",
                            "operator": "+",
                            "left": {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "cairoAuxInput"
                              },
                              "index": {
                                "type": "Identifier",
                                "name": "OFFSET_CHECKPOINTS_BEGIN_PTR"
                              }
                            },
                            "right": {
                              "type": "BinaryOperation",
                              "operator": "*",
                              "left": {
                                "type": "NumberLiteral",
                                "number": "2",
                                "subdenomination": null
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "nTasks"
                              }
                            }
                          }
                        },
                        {
                          "type": "stringLiteral",
                          "value": "Number of checkpoints should be at least the number of tasks."
                        }
                      ],
                      "names": []
                    }
                  },
                  {
                    "type": "VariableDeclarationStatement",
                    "variables": [
                      {
                        "type": "VariableDeclaration",
                        "typeName": {
                          "type": "ElementaryTypeName",
                          "name": "uint256"
                        },
                        "name": "outputAddress",
                        "storageLocation": null
                      }
                    ],
                    "initialValue": {
                      "type": "IndexAccess",
                      "base": {
                        "type": "Identifier",
                        "name": "cairoAuxInput"
                      },
                      "index": {
                        "type": "Identifier",
                        "name": "OFFSET_OUTPUT_BEGIN_ADDR"
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "publicMemory"
                        },
                        "index": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "offset"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        }
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "outputAddress"
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "publicMemory"
                        },
                        "index": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "offset"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "1",
                            "subdenomination": null
                          }
                        }
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "nTasks"
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "BinaryOperation",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "offset"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "2",
                        "subdenomination": null
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "BinaryOperation",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "outputAddress"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "1",
                        "subdenomination": null
                      }
                    }
                  },
                  {
                    "type": "VariableDeclarationStatement",
                    "variables": [
                      {
                        "type": "VariableDeclaration",
                        "typeName": {
                          "type": "ElementaryTypeName",
                          "name": "uint256"
                        },
                        "name": "taskMetadataOffset",
                        "storageLocation": null
                      }
                    ],
                    "initialValue": {
                      "type": "Identifier",
                      "name": "METADATA_TASKS_OFFSET"
                    }
                  },
                  {
                    "type": "ForStatement",
                    "initExpression": {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint256"
                          },
                          "name": "task",
                          "storageLocation": null
                        }
                      ],
                      "initialValue": {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      }
                    },
                    "conditionExpression": {
                      "type": "BinaryOperation",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "task"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "nTasks"
                      }
                    },
                    "loopExpression": {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "UnaryOperation",
                        "operator": "++",
                        "subExpression": {
                          "type": "Identifier",
                          "name": "task"
                        },
                        "isPrefix": false
                      }
                    },
                    "body": {
                      "type": "Block",
                      "statements": [
                        {
                          "type": "VariableDeclarationStatement",
                          "variables": [
                            {
                              "type": "VariableDeclaration",
                              "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                              },
                              "name": "outputSize",
                              "storageLocation": null
                            }
                          ],
                          "initialValue": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "taskMetadata"
                            },
                            "index": {
                              "type": "BinaryOperation",
                              "operator": "+",
                              "left": {
                                "type": "Identifier",
                                "name": "taskMetadataOffset"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "METADATA_OFFSET_TASK_OUTPUT_SIZE"
                              }
                            }
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "Identifier",
                              "name": "require"
                            },
                            "arguments": [
                              {
                                "type": "BinaryOperation",
                                "operator": "&&",
                                "left": {
                                  "type": "BinaryOperation",
                                  "operator": "<=",
                                  "left": {
                                    "type": "NumberLiteral",
                                    "number": "2",
                                    "subdenomination": null
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "outputSize"
                                  }
                                },
                                "right": {
                                  "type": "BinaryOperation",
                                  "operator": "<",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "outputSize"
                                  },
                                  "right": {
                                    "type": "BinaryOperation",
                                    "operator": "**",
                                    "left": {
                                      "type": "NumberLiteral",
                                      "number": "2",
                                      "subdenomination": null
                                    },
                                    "right": {
                                      "type": "NumberLiteral",
                                      "number": "30",
                                      "subdenomination": null
                                    }
                                  }
                                }
                              },
                              {
                                "type": "stringLiteral",
                                "value": "Invalid task output size."
                              }
                            ],
                            "names": []
                          }
                        },
                        {
                          "type": "VariableDeclarationStatement",
                          "variables": [
                            {
                              "type": "VariableDeclaration",
                              "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                              },
                              "name": "programHash",
                              "storageLocation": null
                            }
                          ],
                          "initialValue": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "taskMetadata"
                            },
                            "index": {
                              "type": "BinaryOperation",
                              "operator": "+",
                              "left": {
                                "type": "Identifier",
                                "name": "taskMetadataOffset"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "METADATA_OFFSET_TASK_PROGRAM_HASH"
                              }
                            }
                          }
                        },
                        {
                          "type": "VariableDeclarationStatement",
                          "variables": [
                            {
                              "type": "VariableDeclaration",
                              "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                              },
                              "name": "nTreePairs",
                              "storageLocation": null
                            }
                          ],
                          "initialValue": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "taskMetadata"
                            },
                            "index": {
                              "type": "BinaryOperation",
                              "operator": "+",
                              "left": {
                                "type": "Identifier",
                                "name": "taskMetadataOffset"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "METADATA_OFFSET_TASK_N_TREE_PAIRS"
                              }
                            }
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "Identifier",
                              "name": "require"
                            },
                            "arguments": [
                              {
                                "type": "BinaryOperation",
                                "operator": "&&",
                                "left": {
                                  "type": "BinaryOperation",
                                  "operator": "<=",
                                  "left": {
                                    "type": "NumberLiteral",
                                    "number": "1",
                                    "subdenomination": null
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "nTreePairs"
                                  }
                                },
                                "right": {
                                  "type": "BinaryOperation",
                                  "operator": "<",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "nTreePairs"
                                  },
                                  "right": {
                                    "type": "BinaryOperation",
                                    "operator": "**",
                                    "left": {
                                      "type": "NumberLiteral",
                                      "number": "2",
                                      "subdenomination": null
                                    },
                                    "right": {
                                      "type": "NumberLiteral",
                                      "number": "20",
                                      "subdenomination": null
                                    }
                                  }
                                }
                              },
                              {
                                "type": "stringLiteral",
                                "value": "Invalid number of pairs in the Merkle tree structure."
                              }
                            ],
                            "names": []
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "BinaryOperation",
                            "operator": "=",
                            "left": {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "publicMemory"
                              },
                              "index": {
                                "type": "BinaryOperation",
                                "operator": "+",
                                "left": {
                                  "type": "Identifier",
                                  "name": "offset"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                }
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "outputAddress"
                            }
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "BinaryOperation",
                            "operator": "=",
                            "left": {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "publicMemory"
                              },
                              "index": {
                                "type": "BinaryOperation",
                                "operator": "+",
                                "left": {
                                  "type": "Identifier",
                                  "name": "offset"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "1",
                                  "subdenomination": null
                                }
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "outputSize"
                            }
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "BinaryOperation",
                            "operator": "=",
                            "left": {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "publicMemory"
                              },
                              "index": {
                                "type": "BinaryOperation",
                                "operator": "+",
                                "left": {
                                  "type": "Identifier",
                                  "name": "offset"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "2",
                                  "subdenomination": null
                                }
                              }
                            },
                            "right": {
                              "type": "BinaryOperation",
                              "operator": "+",
                              "left": {
                                "type": "Identifier",
                                "name": "outputAddress"
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "1",
                                "subdenomination": null
                              }
                            }
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "BinaryOperation",
                            "operator": "=",
                            "left": {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "publicMemory"
                              },
                              "index": {
                                "type": "BinaryOperation",
                                "operator": "+",
                                "left": {
                                  "type": "Identifier",
                                  "name": "offset"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "3",
                                  "subdenomination": null
                                }
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "programHash"
                            }
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "BinaryOperation",
                            "operator": "+=",
                            "left": {
                              "type": "Identifier",
                              "name": "offset"
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "4",
                              "subdenomination": null
                            }
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "BinaryOperation",
                            "operator": "+=",
                            "left": {
                              "type": "Identifier",
                              "name": "outputAddress"
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "outputSize"
                            }
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "BinaryOperation",
                            "operator": "+=",
                            "left": {
                              "type": "Identifier",
                              "name": "taskMetadataOffset"
                            },
                            "right": {
                              "type": "BinaryOperation",
                              "operator": "+",
                              "left": {
                                "type": "Identifier",
                                "name": "METADATA_TASK_HEADER_SIZE"
                              },
                              "right": {
                                "type": "BinaryOperation",
                                "operator": "*",
                                "left": {
                                  "type": "NumberLiteral",
                                  "number": "2",
                                  "subdenomination": null
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "nTreePairs"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "require"
                      },
                      "arguments": [
                        {
                          "type": "BinaryOperation",
                          "operator": "==",
                          "left": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "taskMetadata"
                            },
                            "memberName": "length"
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "taskMetadataOffset"
                          }
                        },
                        {
                          "type": "stringLiteral",
                          "value": "Invalid length of taskMetadata."
                        }
                      ],
                      "names": []
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "require"
                      },
                      "arguments": [
                        {
                          "type": "BinaryOperation",
                          "operator": "==",
                          "left": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "cairoAuxInput"
                            },
                            "index": {
                              "type": "Identifier",
                              "name": "OFFSET_OUTPUT_STOP_PTR"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "outputAddress"
                          }
                        },
                        {
                          "type": "stringLiteral",
                          "value": "Inconsistent program output length."
                        }
                      ],
                      "names": []
                    }
                  }
                ]
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "publicMemory"
                        },
                        "memberName": "length"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "offset"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Not all Cairo public inputs were written."
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes32"
                    },
                    "name": "factHash",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "Identifier",
                        "name": "factHash"
                      },
                      {
                        "type": "Identifier",
                        "name": "memoryHash"
                      },
                      {
                        "type": "Identifier",
                        "name": "prod"
                      }
                    ],
                    "isArray": false
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "memoryPageFactRegistry"
                      },
                      "memberName": "registerRegularMemoryPage"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "publicMemory"
                      },
                      {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "cairoAuxInput"
                        },
                        "index": {
                          "type": "BinaryOperation",
                          "operator": "-",
                          "left": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "cairoAuxInput"
                            },
                            "memberName": "length"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "2",
                            "subdenomination": null
                          }
                        }
                      },
                      {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "cairoAuxInput"
                        },
                        "index": {
                          "type": "BinaryOperation",
                          "operator": "-",
                          "left": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "cairoAuxInput"
                            },
                            "memberName": "length"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "1",
                            "subdenomination": null
                          }
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "K_MODULUS"
                      }
                    ],
                    "names": []
                  }
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "MemoryPageFactRegistry",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "FactRegistry"
          },
          "arguments": null
        },
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "MemoryPageFactRegistryConstants"
          },
          "arguments": null
        }
      ],
      "subNodes": [
        {
          "type": "EventDefinition",
          "name": "LogMemoryPageFact",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "factHash",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "memoryHash",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "prod",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "FunctionDefinition",
          "name": "registerRegularMemoryPage",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "memoryPairs",
                "storageLocation": "calldata",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "z",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "alpha",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "prime",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "factHash",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "memoryHash",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "prod",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "memoryPairs"
                        },
                        "memberName": "length"
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "**",
                        "left": {
                          "type": "NumberLiteral",
                          "number": "2",
                          "subdenomination": null
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "20",
                          "subdenomination": null
                        }
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Too many memory values."
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "%",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "memoryPairs"
                          },
                          "memberName": "length"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "2",
                          "subdenomination": null
                        }
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Size of memoryPairs must be even."
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "z"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "prime"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Invalid value of z."
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "alpha"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "prime"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Invalid value of alpha."
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "Identifier",
                        "name": "factHash"
                      },
                      {
                        "type": "Identifier",
                        "name": "memoryHash"
                      },
                      {
                        "type": "Identifier",
                        "name": "prod"
                      }
                    ],
                    "isArray": false
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "computeFactHash"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "memoryPairs"
                      },
                      {
                        "type": "Identifier",
                        "name": "z"
                      },
                      {
                        "type": "Identifier",
                        "name": "alpha"
                      },
                      {
                        "type": "Identifier",
                        "name": "prime"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "EmitStatement",
                "eventCall": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "LogMemoryPageFact"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "factHash"
                    },
                    {
                      "type": "Identifier",
                      "name": "memoryHash"
                    },
                    {
                      "type": "Identifier",
                      "name": "prod"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "registerFact"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "factHash"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "computeFactHash",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "memoryPairs",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "z",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "alpha",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "prime",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "factHash",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "memoryHash",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "prod",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "memorySize",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "/",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "memoryPairs"
                    },
                    "memberName": "length"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "2",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "prod"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "memoryPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "memoryPairs",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x20"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "lastPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "memoryPtr",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mul",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "memorySize",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x40"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyFor",
                      "pre": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "ptr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "memoryPtr",
                              "arguments": []
                            }
                          }
                        ]
                      },
                      "condition": {
                        "type": "AssemblyExpression",
                        "functionName": "lt",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "ptr",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "lastPtr",
                            "arguments": []
                          }
                        ]
                      },
                      "post": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "ptr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "ptr",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x40"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "address_value_lin_comb"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "addmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mload",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "ptr",
                                      "arguments": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "ptr",
                                              "arguments": []
                                            },
                                            {
                                              "type": "HexNumber",
                                              "value": "0x20"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "alpha",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "prime",
                                      "arguments": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "prime",
                                  "arguments": []
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "prod"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mulmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "prod",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "z",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "sub",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "prime",
                                          "arguments": []
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "address_value_lin_comb",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "prime",
                                  "arguments": []
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "memoryHash"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "keccak256",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "memoryPtr",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mul",
                            "arguments": [
                              {
                                "type": "HexNumber",
                                "value": "0x40"
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "memorySize",
                                "arguments": []
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "factHash"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "keccak256"
                    },
                    "arguments": [
                      {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "abi"
                          },
                          "memberName": "encodePacked"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "REGULAR_PAGE"
                          },
                          {
                            "type": "Identifier",
                            "name": "prime"
                          },
                          {
                            "type": "Identifier",
                            "name": "memorySize"
                          },
                          {
                            "type": "Identifier",
                            "name": "z"
                          },
                          {
                            "type": "Identifier",
                            "name": "alpha"
                          },
                          {
                            "type": "Identifier",
                            "name": "prod"
                          },
                          {
                            "type": "Identifier",
                            "name": "memoryHash"
                          },
                          {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "ElementaryTypeName",
                              "name": "uint256"
                            },
                            "arguments": [
                              {
                                "type": "NumberLiteral",
                                "number": "0",
                                "subdenomination": null
                              }
                            ],
                            "names": []
                          }
                        ],
                        "names": []
                      }
                    ],
                    "names": []
                  }
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "registerContinuousMemoryPage",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "startAddr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "values",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "z",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "alpha",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "prime",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "factHash",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "memoryHash",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "prod",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "values"
                        },
                        "memberName": "length"
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "**",
                        "left": {
                          "type": "NumberLiteral",
                          "number": "2",
                          "subdenomination": null
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "20",
                          "subdenomination": null
                        }
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Too many memory values."
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "prime"
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "**",
                        "left": {
                          "type": "NumberLiteral",
                          "number": "2",
                          "subdenomination": null
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "254",
                          "subdenomination": null
                        }
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "prime is too big for the optimizations in this function."
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "z"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "prime"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Invalid value of z."
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "alpha"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "prime"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Invalid value of alpha."
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "&&",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "<",
                        "left": {
                          "type": "Identifier",
                          "name": "startAddr"
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": "**",
                          "left": {
                            "type": "NumberLiteral",
                            "number": "2",
                            "subdenomination": null
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "64",
                            "subdenomination": null
                          }
                        }
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "<",
                        "left": {
                          "type": "Identifier",
                          "name": "startAddr"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "prime"
                        }
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Invalid value of startAddr."
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "nValues",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "Identifier",
                    "name": "values"
                  },
                  "memberName": "length"
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "prod"
                        }
                      ],
                      "expression": {
                        "type": "DecimalNumber",
                        "value": "1"
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "valuesPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "values",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x20"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "minus_z"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "sub",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "prime",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "z",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "prime",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "addr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "startAddr",
                            "arguments": []
                          },
                          {
                            "type": "DecimalNumber",
                            "value": "7"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "lastAddr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "startAddr",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "nValues",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyFor",
                      "pre": {
                        "type": "AssemblyBlock",
                        "operations": []
                      },
                      "condition": {
                        "type": "AssemblyExpression",
                        "functionName": "lt",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "addr",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "lastAddr",
                            "arguments": []
                          }
                        ]
                      },
                      "post": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "addr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "addr",
                                  "arguments": []
                                },
                                {
                                  "type": "DecimalNumber",
                                  "value": "8"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "prod"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mulmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "prod",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "add",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "addr",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "DecimalNumber",
                                                  "value": "7"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mulmod",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "valuesPtr",
                                                      "arguments": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "alpha",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "prime",
                                                  "arguments": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "minus_z",
                                          "arguments": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "add",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "addr",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "DecimalNumber",
                                                  "value": "6"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mulmod",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "valuesPtr",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x20"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "alpha",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "prime",
                                                  "arguments": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "minus_z",
                                          "arguments": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "prime",
                                      "arguments": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "prime",
                                  "arguments": []
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "prod"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mulmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "prod",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "add",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "addr",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "DecimalNumber",
                                                  "value": "5"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mulmod",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "valuesPtr",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x40"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "alpha",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "prime",
                                                  "arguments": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "minus_z",
                                          "arguments": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "add",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "addr",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "DecimalNumber",
                                                  "value": "4"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mulmod",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "valuesPtr",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x60"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "alpha",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "prime",
                                                  "arguments": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "minus_z",
                                          "arguments": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "prime",
                                      "arguments": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "prime",
                                  "arguments": []
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "prod"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mulmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "prod",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "add",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "addr",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "DecimalNumber",
                                                  "value": "3"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mulmod",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "valuesPtr",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x80"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "alpha",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "prime",
                                                  "arguments": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "minus_z",
                                          "arguments": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "add",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "addr",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "DecimalNumber",
                                                  "value": "2"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mulmod",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "valuesPtr",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0xa0"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "alpha",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "prime",
                                                  "arguments": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "minus_z",
                                          "arguments": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "prime",
                                      "arguments": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "prime",
                                  "arguments": []
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "prod"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mulmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "prod",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "add",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "sub",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "addr",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "DecimalNumber",
                                                  "value": "1"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mulmod",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "valuesPtr",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0xc0"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "alpha",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "prime",
                                                  "arguments": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "minus_z",
                                          "arguments": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "add",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "addr",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mulmod",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mload",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "valuesPtr",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0xe0"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "alpha",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "prime",
                                                  "arguments": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "minus_z",
                                          "arguments": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "prime",
                                      "arguments": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "prime",
                                  "arguments": []
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "valuesPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "valuesPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x100"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "addr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "sub",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "addr",
                            "arguments": []
                          },
                          {
                            "type": "DecimalNumber",
                            "value": "7"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyFor",
                      "pre": {
                        "type": "AssemblyBlock",
                        "operations": []
                      },
                      "condition": {
                        "type": "AssemblyExpression",
                        "functionName": "lt",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "addr",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "lastAddr",
                            "arguments": []
                          }
                        ]
                      },
                      "post": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "addr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "addr",
                                  "arguments": []
                                },
                                {
                                  "type": "DecimalNumber",
                                  "value": "1"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "address_value_lin_comb"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "addmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "addr",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mulmod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "valuesPtr",
                                          "arguments": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "alpha",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "prime",
                                      "arguments": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "prime",
                                  "arguments": []
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "prod"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mulmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "prod",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "z",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "sub",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "prime",
                                          "arguments": []
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "address_value_lin_comb",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "prime",
                                  "arguments": []
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "valuesPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "valuesPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "memoryHash"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "keccak256",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "values",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x20"
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mul",
                            "arguments": [
                              {
                                "type": "HexNumber",
                                "value": "0x20"
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "nValues",
                                "arguments": []
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "factHash"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "keccak256"
                    },
                    "arguments": [
                      {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "abi"
                          },
                          "memberName": "encodePacked"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "CONTINUOUS_PAGE"
                          },
                          {
                            "type": "Identifier",
                            "name": "prime"
                          },
                          {
                            "type": "Identifier",
                            "name": "nValues"
                          },
                          {
                            "type": "Identifier",
                            "name": "z"
                          },
                          {
                            "type": "Identifier",
                            "name": "alpha"
                          },
                          {
                            "type": "Identifier",
                            "name": "prod"
                          },
                          {
                            "type": "Identifier",
                            "name": "memoryHash"
                          },
                          {
                            "type": "Identifier",
                            "name": "startAddr"
                          }
                        ],
                        "names": []
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "EmitStatement",
                "eventCall": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "LogMemoryPageFact"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "factHash"
                    },
                    {
                      "type": "Identifier",
                      "name": "memoryHash"
                    },
                    {
                      "type": "Identifier",
                      "name": "prod"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "registerFact"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "factHash"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        }
      ],
      "kind": "contract"
    }
  ]
}