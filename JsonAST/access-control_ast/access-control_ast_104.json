{
  "type": "SourceUnit",
  "children": [
    {
      "type": "PragmaDirective",
      "name": "solidity",
      "value": "0.4.24"
    },
    {
      "type": "ContractDefinition",
      "name": "BBLib",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "UsingForDeclaration",
          "typeName": {
            "type": "ElementaryTypeName",
            "name": "bytes"
          },
          "libraryName": "BytesLib"
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "BB_VERSION",
              "expression": {
                "type": "NumberLiteral",
                "number": "6",
                "subdenomination": null
              },
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "6",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint16"
              },
              "name": "USE_ETH",
              "expression": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
              },
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint16"
              },
              "name": "USE_SIGNED",
              "expression": {
                "type": "NumberLiteral",
                "number": "2",
                "subdenomination": null
              },
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "2",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint16"
              },
              "name": "USE_NO_ENC",
              "expression": {
                "type": "NumberLiteral",
                "number": "4",
                "subdenomination": null
              },
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "4",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint16"
              },
              "name": "USE_ENC",
              "expression": {
                "type": "NumberLiteral",
                "number": "8",
                "subdenomination": null
              },
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "8",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint16"
              },
              "name": "IS_BINDING",
              "expression": {
                "type": "NumberLiteral",
                "number": "8192",
                "subdenomination": null
              },
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "8192",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint16"
              },
              "name": "IS_OFFICIAL",
              "expression": {
                "type": "NumberLiteral",
                "number": "16384",
                "subdenomination": null
              },
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "16384",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint16"
              },
              "name": "USE_TESTING",
              "expression": {
                "type": "NumberLiteral",
                "number": "32768",
                "subdenomination": null
              },
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "32768",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint32"
              },
              "name": "MAX_UINT32",
              "expression": {
                "type": "NumberLiteral",
                "number": "0xFFFFFFFF",
                "subdenomination": null
              },
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0xFFFFFFFF",
            "subdenomination": null
          }
        },
        {
          "type": "StructDefinition",
          "name": "Vote",
          "members": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes32"
              },
              "name": "voteData",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes32"
              },
              "name": "castTsAndSender",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes"
              },
              "name": "extra",
              "storageLocation": null
            }
          ]
        },
        {
          "type": "StructDefinition",
          "name": "Sponsor",
          "members": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address"
              },
              "name": "sender",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint"
              },
              "name": "amount",
              "storageLocation": null
            }
          ]
        },
        {
          "type": "EventDefinition",
          "name": "CreatedBallot",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_specHash",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint64"
                },
                "name": "startTs",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint64"
                },
                "name": "endTs",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint16"
                },
                "name": "submissionBits",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "SuccessfulVote",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "voter",
                "isStateVar": false,
                "isIndexed": true
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "voteId",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "SeckeyRevealed",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "secretKey",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "TestingEnabled",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "DeprecatedContract",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "isAnonymous": false
        },
        {
          "type": "StructDefinition",
          "name": "DB",
          "members": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "Mapping",
                "keyType": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "valueType": {
                  "type": "UserDefinedTypeName",
                  "namePath": "Vote"
                }
              },
              "name": "votes",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "nVotesCast",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "Mapping",
                "keyType": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "valueType": {
                  "type": "ElementaryTypeName",
                  "name": "uint32"
                }
              },
              "name": "sequenceNumber",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes32"
              },
              "name": "ballotEncryptionSeckey",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "packed",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes32"
              },
              "name": "specHash",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes16"
              },
              "name": "extraData",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "Sponsor"
                },
                "length": null
              },
              "name": "sponsors",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "IxIface"
              },
              "name": "index",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "bool"
              },
              "name": "deprecated",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address"
              },
              "name": "ballotOwner",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "creationTs",
              "storageLocation": null
            }
          ]
        },
        {
          "type": "FunctionDefinition",
          "name": "requireBallotClosed",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "DB"
                },
                "name": "db",
                "storageLocation": "storage",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": ">",
                      "left": {
                        "type": "Identifier",
                        "name": "now"
                      },
                      "right": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "BPackedUtils"
                          },
                          "memberName": "packedToEndTime"
                        },
                        "arguments": [
                          {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "db"
                            },
                            "memberName": "packed"
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "!b-closed"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "requireBallotOpen",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "DB"
                },
                "name": "db",
                "storageLocation": "storage",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint64"
                    },
                    "name": "_n",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "uint64"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "now"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint64"
                    },
                    "name": "startTs",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint64"
                    },
                    "name": "endTs",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "TupleExpression",
                    "components": [
                      null,
                      {
                        "type": "Identifier",
                        "name": "startTs"
                      },
                      {
                        "type": "Identifier",
                        "name": "endTs"
                      }
                    ],
                    "isArray": false
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "BPackedUtils"
                      },
                      "memberName": "unpackAll"
                    },
                    "arguments": [
                      {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "db"
                        },
                        "memberName": "packed"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "&&",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": ">=",
                        "left": {
                          "type": "Identifier",
                          "name": "_n"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "startTs"
                        }
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "<",
                        "left": {
                          "type": "Identifier",
                          "name": "_n"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "endTs"
                        }
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "!b-open"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "db"
                        },
                        "memberName": "deprecated"
                      },
                      "right": {
                        "type": "BooleanLiteral",
                        "value": false
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "b-deprecated"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "requireBallotOwner",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "DB"
                },
                "name": "db",
                "storageLocation": "storage",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "msg"
                        },
                        "memberName": "sender"
                      },
                      "right": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "db"
                        },
                        "memberName": "ballotOwner"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "!b-owner"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "requireTesting",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "DB"
                },
                "name": "db",
                "storageLocation": "storage",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "isTesting"
                      },
                      "arguments": [
                        {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "BPackedUtils"
                            },
                            "memberName": "packedToSubmissionBits"
                          },
                          "arguments": [
                            {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "db"
                              },
                              "memberName": "packed"
                            }
                          ],
                          "names": []
                        }
                      ],
                      "names": []
                    },
                    {
                      "type": "stringLiteral",
                      "value": "!testing"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "getVersion",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "Identifier",
                "name": "BB_VERSION"
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "init",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "DB"
                },
                "name": "db",
                "storageLocation": "storage",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_specHash",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_packed",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "IxIface"
                },
                "name": "ix",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "ballotOwner",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes16"
                },
                "name": "extraData",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "db"
                        },
                        "memberName": "specHash"
                      },
                      "right": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "ElementaryTypeName",
                          "name": "bytes32"
                        },
                        "arguments": [
                          {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "b-exists"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "db"
                    },
                    "memberName": "index"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "ix"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "db"
                    },
                    "memberName": "ballotOwner"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "ballotOwner"
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint64"
                    },
                    "name": "startTs",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint64"
                    },
                    "name": "endTs",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint16"
                    },
                    "name": "sb",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "Identifier",
                        "name": "sb"
                      },
                      {
                        "type": "Identifier",
                        "name": "startTs"
                      },
                      {
                        "type": "Identifier",
                        "name": "endTs"
                      }
                    ],
                    "isArray": false
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "BPackedUtils"
                      },
                      "memberName": "unpackAll"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "_packed"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bool"
                    },
                    "name": "_testing",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "isTesting"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "sb"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "Identifier",
                  "name": "_testing"
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "EmitStatement",
                      "eventCall": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "TestingEnabled"
                        },
                        "arguments": [],
                        "names": []
                      }
                    }
                  ]
                },
                "FalseBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "BinaryOperation",
                            "operator": ">",
                            "left": {
                              "type": "Identifier",
                              "name": "endTs"
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "now"
                            }
                          },
                          {
                            "type": "stringLiteral",
                            "value": "bad-end-time"
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "BinaryOperation",
                            "operator": "==",
                            "left": {
                              "type": "BinaryOperation",
                              "operator": "&",
                              "left": {
                                "type": "Identifier",
                                "name": "sb"
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "0x1ff2",
                                "subdenomination": null
                              }
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "0",
                              "subdenomination": null
                            }
                          },
                          {
                            "type": "stringLiteral",
                            "value": "bad-sb"
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "bool"
                          },
                          "name": "okaySubmissionBits",
                          "storageLocation": null
                        }
                      ],
                      "initialValue": {
                        "type": "BinaryOperation",
                        "operator": "==",
                        "left": {
                          "type": "NumberLiteral",
                          "number": "1",
                          "subdenomination": null
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "TupleExpression",
                            "components": [
                              {
                                "type": "Conditional",
                                "condition": {
                                  "type": "FunctionCall",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "isEthNoEnc"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "sb"
                                    }
                                  ],
                                  "names": []
                                },
                                "TrueExpression": {
                                  "type": "NumberLiteral",
                                  "number": "1",
                                  "subdenomination": null
                                },
                                "FalseExpression": {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                }
                              }
                            ],
                            "isArray": false
                          },
                          "right": {
                            "type": "TupleExpression",
                            "components": [
                              {
                                "type": "Conditional",
                                "condition": {
                                  "type": "FunctionCall",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "isEthWithEnc"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "sb"
                                    }
                                  ],
                                  "names": []
                                },
                                "TrueExpression": {
                                  "type": "NumberLiteral",
                                  "number": "1",
                                  "subdenomination": null
                                },
                                "FalseExpression": {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                }
                              }
                            ],
                            "isArray": false
                          }
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "okaySubmissionBits"
                          },
                          {
                            "type": "stringLiteral",
                            "value": "!valid-sb"
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "startTs"
                        },
                        "right": {
                          "type": "Conditional",
                          "condition": {
                            "type": "BinaryOperation",
                            "operator": ">",
                            "left": {
                              "type": "Identifier",
                              "name": "startTs"
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "now"
                            }
                          },
                          "TrueExpression": {
                            "type": "Identifier",
                            "name": "startTs"
                          },
                          "FalseExpression": {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "ElementaryTypeName",
                              "name": "uint64"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "now"
                              }
                            ],
                            "names": []
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "!=",
                      "left": {
                        "type": "Identifier",
                        "name": "_specHash"
                      },
                      "right": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "ElementaryTypeName",
                          "name": "bytes32"
                        },
                        "arguments": [
                          {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "null-specHash"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "db"
                    },
                    "memberName": "specHash"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "_specHash"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "db"
                    },
                    "memberName": "packed"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "BPackedUtils"
                      },
                      "memberName": "pack"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "sb"
                      },
                      {
                        "type": "Identifier",
                        "name": "startTs"
                      },
                      {
                        "type": "Identifier",
                        "name": "endTs"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "db"
                    },
                    "memberName": "creationTs"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "now"
                  }
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "!=",
                  "left": {
                    "type": "Identifier",
                    "name": "extraData"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "bytes16"
                    },
                    "arguments": [
                      {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      }
                    ],
                    "names": []
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "db"
                          },
                          "memberName": "extraData"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "extraData"
                        }
                      }
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "EmitStatement",
                "eventCall": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "CreatedBallot"
                  },
                  "arguments": [
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "db"
                      },
                      "memberName": "specHash"
                    },
                    {
                      "type": "Identifier",
                      "name": "startTs"
                    },
                    {
                      "type": "Identifier",
                      "name": "endTs"
                    },
                    {
                      "type": "Identifier",
                      "name": "sb"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "logSponsorship",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "DB"
                },
                "name": "db",
                "storageLocation": "storage",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "value",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "db"
                      },
                      "memberName": "sponsors"
                    },
                    "memberName": "push"
                  },
                  "arguments": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "Sponsor"
                      },
                      "arguments": [
                        {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "msg"
                          },
                          "memberName": "sender"
                        },
                        {
                          "type": "Identifier",
                          "name": "value"
                        }
                      ],
                      "names": []
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "getVote",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "DB"
                },
                "name": "db",
                "storageLocation": "storage",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "voteData",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "sender",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "extra",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "castTs",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "TupleExpression",
                "components": [
                  {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "IndexAccess",
                      "base": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "db"
                        },
                        "memberName": "votes"
                      },
                      "index": {
                        "type": "Identifier",
                        "name": "id"
                      }
                    },
                    "memberName": "voteData"
                  },
                  {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "address"
                    },
                    "arguments": [
                      {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "db"
                            },
                            "memberName": "votes"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "id"
                          }
                        },
                        "memberName": "castTsAndSender"
                      }
                    ],
                    "names": []
                  },
                  {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "IndexAccess",
                      "base": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "db"
                        },
                        "memberName": "votes"
                      },
                      "index": {
                        "type": "Identifier",
                        "name": "id"
                      }
                    },
                    "memberName": "extra"
                  },
                  {
                    "type": "BinaryOperation",
                    "operator": ">>",
                    "left": {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "ElementaryTypeName",
                        "name": "uint"
                      },
                      "arguments": [
                        {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "db"
                              },
                              "memberName": "votes"
                            },
                            "index": {
                              "type": "Identifier",
                              "name": "id"
                            }
                          },
                          "memberName": "castTsAndSender"
                        }
                      ],
                      "names": []
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "160",
                      "subdenomination": null
                    }
                  }
                ],
                "isArray": false
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "getSequenceNumber",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "DB"
                },
                "name": "db",
                "storageLocation": "storage",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "voter",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint32"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "IndexAccess",
                "base": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "Identifier",
                    "name": "db"
                  },
                  "memberName": "sequenceNumber"
                },
                "index": {
                  "type": "Identifier",
                  "name": "voter"
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "getTotalSponsorship",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "DB"
                },
                "name": "db",
                "storageLocation": "storage",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "total",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "db"
                      },
                      "memberName": "sponsors"
                    },
                    "memberName": "length"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "+=",
                        "left": {
                          "type": "Identifier",
                          "name": "total"
                        },
                        "right": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "db"
                              },
                              "memberName": "sponsors"
                            },
                            "index": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          },
                          "memberName": "amount"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "getSponsor",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "DB"
                },
                "name": "db",
                "storageLocation": "storage",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "i",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "sender",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "amount",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "sender"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "IndexAccess",
                      "base": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "db"
                        },
                        "memberName": "sponsors"
                      },
                      "index": {
                        "type": "Identifier",
                        "name": "i"
                      }
                    },
                    "memberName": "sender"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "amount"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "IndexAccess",
                      "base": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "db"
                        },
                        "memberName": "sponsors"
                      },
                      "index": {
                        "type": "Identifier",
                        "name": "i"
                      }
                    },
                    "memberName": "amount"
                  }
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "submitVote",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "DB"
                },
                "name": "db",
                "storageLocation": "storage",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "voteData",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "extra",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "_addVote"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "db"
                    },
                    {
                      "type": "Identifier",
                      "name": "voteData"
                    },
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "msg"
                      },
                      "memberName": "sender"
                    },
                    {
                      "type": "Identifier",
                      "name": "extra"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "!=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "db"
                      },
                      "memberName": "sequenceNumber"
                    },
                    "index": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "msg"
                      },
                      "memberName": "sender"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "MAX_UINT32"
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "db"
                            },
                            "memberName": "sequenceNumber"
                          },
                          "index": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "msg"
                            },
                            "memberName": "sender"
                          }
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "MAX_UINT32"
                        }
                      }
                    }
                  ]
                },
                "FalseBody": null
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "submitProxyVote",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "DB"
                },
                "name": "db",
                "storageLocation": "storage",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "bytes32"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "5",
                    "subdenomination": null
                  }
                },
                "name": "proxyReq",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "extra",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "voter",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes32"
                    },
                    "name": "r",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "proxyReq"
                  },
                  "index": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes32"
                    },
                    "name": "s",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "proxyReq"
                  },
                  "index": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint8"
                    },
                    "name": "v",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "uint8"
                  },
                  "arguments": [
                    {
                      "type": "IndexAccess",
                      "base": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "proxyReq"
                        },
                        "index": {
                          "type": "NumberLiteral",
                          "number": "2",
                          "subdenomination": null
                        }
                      },
                      "index": {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes31"
                    },
                    "name": "proxyReq2",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "bytes31"
                  },
                  "arguments": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "ElementaryTypeName",
                        "name": "uint248"
                      },
                      "arguments": [
                        {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "proxyReq"
                          },
                          "index": {
                            "type": "NumberLiteral",
                            "number": "2",
                            "subdenomination": null
                          }
                        }
                      ],
                      "names": []
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes32"
                    },
                    "name": "ballotId",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "proxyReq"
                  },
                  "index": {
                    "type": "NumberLiteral",
                    "number": "3",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes32"
                    },
                    "name": "voteData",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "proxyReq"
                  },
                  "index": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "signed",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "abi"
                    },
                    "memberName": "encodePacked"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "proxyReq2"
                    },
                    {
                      "type": "Identifier",
                      "name": "ballotId"
                    },
                    {
                      "type": "Identifier",
                      "name": "voteData"
                    },
                    {
                      "type": "Identifier",
                      "name": "extra"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes32"
                    },
                    "name": "msgHash",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "keccak256"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "signed"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "voter"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "ecrecover"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "msgHash"
                      },
                      {
                        "type": "Identifier",
                        "name": "v"
                      },
                      {
                        "type": "Identifier",
                        "name": "r"
                      },
                      {
                        "type": "Identifier",
                        "name": "s"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint32"
                    },
                    "name": "sequence",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "uint32"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "proxyReq2"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "_proxyReplayProtection"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "db"
                    },
                    {
                      "type": "Identifier",
                      "name": "voter"
                    },
                    {
                      "type": "Identifier",
                      "name": "sequence"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "_addVote"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "db"
                    },
                    {
                      "type": "Identifier",
                      "name": "voteData"
                    },
                    {
                      "type": "Identifier",
                      "name": "voter"
                    },
                    {
                      "type": "Identifier",
                      "name": "extra"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "_addVote",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "DB"
                },
                "name": "db",
                "storageLocation": "storage",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "voteData",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "sender",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "extra",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "requireBallotOpen"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "db"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "id"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "db"
                    },
                    "memberName": "nVotesCast"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "IndexAccess",
                      "base": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "db"
                        },
                        "memberName": "votes"
                      },
                      "index": {
                        "type": "Identifier",
                        "name": "id"
                      }
                    },
                    "memberName": "voteData"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "voteData"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "IndexAccess",
                      "base": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "db"
                        },
                        "memberName": "votes"
                      },
                      "index": {
                        "type": "Identifier",
                        "name": "id"
                      }
                    },
                    "memberName": "castTsAndSender"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "^",
                    "left": {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "ElementaryTypeName",
                        "name": "bytes32"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "sender"
                        }
                      ],
                      "names": []
                    },
                    "right": {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "ElementaryTypeName",
                        "name": "bytes32"
                      },
                      "arguments": [
                        {
                          "type": "BinaryOperation",
                          "operator": "<<",
                          "left": {
                            "type": "Identifier",
                            "name": "now"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "160",
                            "subdenomination": null
                          }
                        }
                      ],
                      "names": []
                    }
                  }
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "extra"
                    },
                    "memberName": "length"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "db"
                              },
                              "memberName": "votes"
                            },
                            "index": {
                              "type": "Identifier",
                              "name": "id"
                            }
                          },
                          "memberName": "extra"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "extra"
                        }
                      }
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "+=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "db"
                    },
                    "memberName": "nVotesCast"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "EmitStatement",
                "eventCall": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "SuccessfulVote"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "sender"
                    },
                    {
                      "type": "Identifier",
                      "name": "id"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "_proxyReplayProtection",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "DB"
                },
                "name": "db",
                "storageLocation": "storage",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "voter",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint32"
                },
                "name": "sequence",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<",
                      "left": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "db"
                          },
                          "memberName": "sequenceNumber"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "voter"
                        }
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "sequence"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "bad-sequence-n"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "db"
                      },
                      "memberName": "sequenceNumber"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "voter"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "sequence"
                  }
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "setEndTime",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "DB"
                },
                "name": "db",
                "storageLocation": "storage",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint64"
                },
                "name": "newEndTime",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint16"
                    },
                    "name": "sb",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint64"
                    },
                    "name": "sTs",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "Identifier",
                        "name": "sb"
                      },
                      {
                        "type": "Identifier",
                        "name": "sTs"
                      },
                      null
                    ],
                    "isArray": false
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "BPackedUtils"
                      },
                      "memberName": "unpackAll"
                    },
                    "arguments": [
                      {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "db"
                        },
                        "memberName": "packed"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "db"
                    },
                    "memberName": "packed"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "BPackedUtils"
                      },
                      "memberName": "pack"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "sb"
                      },
                      {
                        "type": "Identifier",
                        "name": "sTs"
                      },
                      {
                        "type": "Identifier",
                        "name": "newEndTime"
                      }
                    ],
                    "names": []
                  }
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "revealSeckey",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "DB"
                },
                "name": "db",
                "storageLocation": "storage",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "sk",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "db"
                    },
                    "memberName": "ballotEncryptionSeckey"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "sk"
                  }
                }
              },
              {
                "type": "EmitStatement",
                "eventCall": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "SeckeyRevealed"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "sk"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint16"
              },
              "name": "SETTINGS_MASK",
              "expression": {
                "type": "BinaryOperation",
                "operator": "^",
                "left": {
                  "type": "BinaryOperation",
                  "operator": "^",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "^",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "0xFFFF",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "USE_TESTING"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "IS_OFFICIAL"
                  }
                },
                "right": {
                  "type": "Identifier",
                  "name": "IS_BINDING"
                }
              },
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "BinaryOperation",
            "operator": "^",
            "left": {
              "type": "BinaryOperation",
              "operator": "^",
              "left": {
                "type": "BinaryOperation",
                "operator": "^",
                "left": {
                  "type": "NumberLiteral",
                  "number": "0xFFFF",
                  "subdenomination": null
                },
                "right": {
                  "type": "Identifier",
                  "name": "USE_TESTING"
                }
              },
              "right": {
                "type": "Identifier",
                "name": "IS_OFFICIAL"
              }
            },
            "right": {
              "type": "Identifier",
              "name": "IS_BINDING"
            }
          }
        },
        {
          "type": "FunctionDefinition",
          "name": "isEthNoEnc",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint16"
                },
                "name": "submissionBits",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "checkFlags"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "submissionBits"
                  },
                  {
                    "type": "BinaryOperation",
                    "operator": "|",
                    "left": {
                      "type": "Identifier",
                      "name": "USE_ETH"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "USE_NO_ENC"
                    }
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "isEthWithEnc",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint16"
                },
                "name": "submissionBits",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "checkFlags"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "submissionBits"
                  },
                  {
                    "type": "BinaryOperation",
                    "operator": "|",
                    "left": {
                      "type": "Identifier",
                      "name": "USE_ETH"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "USE_ENC"
                    }
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "isOfficial",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint16"
                },
                "name": "submissionBits",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                  "type": "TupleExpression",
                  "components": [
                    {
                      "type": "BinaryOperation",
                      "operator": "&",
                      "left": {
                        "type": "Identifier",
                        "name": "submissionBits"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "IS_OFFICIAL"
                      }
                    }
                  ],
                  "isArray": false
                },
                "right": {
                  "type": "Identifier",
                  "name": "IS_OFFICIAL"
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "isBinding",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint16"
                },
                "name": "submissionBits",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                  "type": "TupleExpression",
                  "components": [
                    {
                      "type": "BinaryOperation",
                      "operator": "&",
                      "left": {
                        "type": "Identifier",
                        "name": "submissionBits"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "IS_BINDING"
                      }
                    }
                  ],
                  "isArray": false
                },
                "right": {
                  "type": "Identifier",
                  "name": "IS_BINDING"
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "isTesting",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint16"
                },
                "name": "submissionBits",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                  "type": "TupleExpression",
                  "components": [
                    {
                      "type": "BinaryOperation",
                      "operator": "&",
                      "left": {
                        "type": "Identifier",
                        "name": "submissionBits"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "USE_TESTING"
                      }
                    }
                  ],
                  "isArray": false
                },
                "right": {
                  "type": "Identifier",
                  "name": "USE_TESTING"
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "qualifiesAsCommunityBallot",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint16"
                },
                "name": "submissionBits",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                  "type": "TupleExpression",
                  "components": [
                    {
                      "type": "BinaryOperation",
                      "operator": "&",
                      "left": {
                        "type": "Identifier",
                        "name": "submissionBits"
                      },
                      "right": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "|",
                            "left": {
                              "type": "BinaryOperation",
                              "operator": "|",
                              "left": {
                                "type": "Identifier",
                                "name": "IS_BINDING"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "IS_OFFICIAL"
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "USE_ENC"
                            }
                          }
                        ],
                        "isArray": false
                      }
                    }
                  ],
                  "isArray": false
                },
                "right": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "checkFlags",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint16"
                },
                "name": "submissionBits",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint16"
                },
                "name": "expected",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint16"
                    },
                    "name": "sBitsNoSettings",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "&",
                  "left": {
                    "type": "Identifier",
                    "name": "submissionBits"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "SETTINGS_MASK"
                  }
                }
              },
              {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                  "type": "Identifier",
                  "name": "sBitsNoSettings"
                },
                "right": {
                  "type": "Identifier",
                  "name": "expected"
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        }
      ],
      "kind": "library"
    },
    {
      "type": "ContractDefinition",
      "name": "BPackedUtils",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "sbMask",
              "expression": {
                "type": "NumberLiteral",
                "number": "0xffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffff",
                "subdenomination": null
              },
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0xffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffff",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "startTimeMask",
              "expression": {
                "type": "NumberLiteral",
                "number": "0xffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff",
                "subdenomination": null
              },
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0xffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "endTimeMask",
              "expression": {
                "type": "NumberLiteral",
                "number": "0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000",
                "subdenomination": null
              },
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000",
            "subdenomination": null
          }
        },
        {
          "type": "FunctionDefinition",
          "name": "packedToSubmissionBits",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "packed",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint16"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "ElementaryTypeName",
                  "name": "uint16"
                },
                "arguments": [
                  {
                    "type": "BinaryOperation",
                    "operator": ">>",
                    "left": {
                      "type": "Identifier",
                      "name": "packed"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "128",
                      "subdenomination": null
                    }
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "packedToStartTime",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "packed",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint64"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "ElementaryTypeName",
                  "name": "uint64"
                },
                "arguments": [
                  {
                    "type": "BinaryOperation",
                    "operator": ">>",
                    "left": {
                      "type": "Identifier",
                      "name": "packed"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "64",
                      "subdenomination": null
                    }
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "packedToEndTime",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "packed",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint64"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "ElementaryTypeName",
                  "name": "uint64"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "packed"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "unpackAll",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "packed",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint16"
                },
                "name": "submissionBits",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint64"
                },
                "name": "startTime",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint64"
                },
                "name": "endTime",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "submissionBits"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "uint16"
                    },
                    "arguments": [
                      {
                        "type": "BinaryOperation",
                        "operator": ">>",
                        "left": {
                          "type": "Identifier",
                          "name": "packed"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "128",
                          "subdenomination": null
                        }
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "startTime"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "uint64"
                    },
                    "arguments": [
                      {
                        "type": "BinaryOperation",
                        "operator": ">>",
                        "left": {
                          "type": "Identifier",
                          "name": "packed"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "64",
                          "subdenomination": null
                        }
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "endTime"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "uint64"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "packed"
                      }
                    ],
                    "names": []
                  }
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "pack",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint16"
                },
                "name": "sb",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint64"
                },
                "name": "st",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint64"
                },
                "name": "et",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "packed",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "BinaryOperation",
                "operator": "|",
                "left": {
                  "type": "BinaryOperation",
                  "operator": "|",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "<<",
                    "left": {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "sb"
                        }
                      ],
                      "names": []
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "128",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "<<",
                    "left": {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "st"
                        }
                      ],
                      "names": []
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "64",
                      "subdenomination": null
                    }
                  }
                },
                "right": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "et"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "setSB",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "packed",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint16"
                },
                "name": "newSB",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "BinaryOperation",
                "operator": "|",
                "left": {
                  "type": "TupleExpression",
                  "components": [
                    {
                      "type": "BinaryOperation",
                      "operator": "&",
                      "left": {
                        "type": "Identifier",
                        "name": "packed"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "sbMask"
                      }
                    }
                  ],
                  "isArray": false
                },
                "right": {
                  "type": "BinaryOperation",
                  "operator": "<<",
                  "left": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "newSB"
                      }
                    ],
                    "names": []
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "128",
                    "subdenomination": null
                  }
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        }
      ],
      "kind": "library"
    },
    {
      "type": "ContractDefinition",
      "name": "IxIface",
      "baseContracts": [],
      "subNodes": [],
      "kind": "interface"
    },
    {
      "type": "ContractDefinition",
      "name": "BytesLib",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "concat",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_preBytes",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_postBytes",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "tempBytes",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": null
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "tempBytes"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "HexNumber",
                            "value": "0x40"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "length"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "_preBytes",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "tempBytes",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "length",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "mc"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "tempBytes",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x20"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "end"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mc",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "length",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyFor",
                      "pre": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "cc"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "_preBytes",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "condition": {
                        "type": "AssemblyExpression",
                        "functionName": "lt",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mc",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "end",
                            "arguments": []
                          }
                        ]
                      },
                      "post": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "mc"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mc",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "cc"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "cc",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mc",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mload",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "cc",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "length"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "_postBytes",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "tempBytes",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "length",
                              "arguments": []
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "mload",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "tempBytes",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "mc"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "end",
                        "arguments": []
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "end"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mc",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "length",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyFor",
                      "pre": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "cc"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "_postBytes",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "condition": {
                        "type": "AssemblyExpression",
                        "functionName": "lt",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mc",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "end",
                            "arguments": []
                          }
                        ]
                      },
                      "post": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "mc"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mc",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "cc"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "cc",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mc",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mload",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "cc",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "HexNumber",
                          "value": "0x40"
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "and",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "end",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "iszero",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "length",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mload",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "_preBytes",
                                                  "arguments": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "DecimalNumber",
                                  "value": "31"
                                }
                              ]
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "not",
                              "arguments": [
                                {
                                  "type": "DecimalNumber",
                                  "value": "31"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "tempBytes"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "concatStorage",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_preBytes",
                "storageLocation": "storage",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_postBytes",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "fslot"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "sload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "_preBytes_slot",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "slength"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "div",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "and",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "fslot",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "sub",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mul",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0x100"
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "iszero",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "and",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "fslot",
                                                "arguments": []
                                              },
                                              {
                                                "type": "DecimalNumber",
                                                "value": "1"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "DecimalNumber",
                                    "value": "1"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "DecimalNumber",
                            "value": "2"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "mlength"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "_postBytes",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "newlength"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "slength",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mlength",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblySwitch",
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "lt",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "slength",
                                "arguments": []
                              },
                              {
                                "type": "DecimalNumber",
                                "value": "32"
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "lt",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "newlength",
                                "arguments": []
                              },
                              {
                                "type": "DecimalNumber",
                                "value": "32"
                              }
                            ]
                          }
                        ]
                      },
                      "cases": [
                        {
                          "type": "AssemblyCase",
                          "block": {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "sstore",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "_preBytes_slot",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "fslot",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mul",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "div",
                                                "arguments": [
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "mload",
                                                    "arguments": [
                                                      {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "add",
                                                        "arguments": [
                                                          {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "_postBytes",
                                                            "arguments": []
                                                          },
                                                          {
                                                            "type": "HexNumber",
                                                            "value": "0x20"
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "exp",
                                                    "arguments": [
                                                      {
                                                        "type": "HexNumber",
                                                        "value": "0x100"
                                                      },
                                                      {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "sub",
                                                        "arguments": [
                                                          {
                                                            "type": "DecimalNumber",
                                                            "value": "32"
                                                          },
                                                          {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "mlength",
                                                            "arguments": []
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "exp",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x100"
                                                  },
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "sub",
                                                    "arguments": [
                                                      {
                                                        "type": "DecimalNumber",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "newlength",
                                                        "arguments": []
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mul",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mlength",
                                                "arguments": []
                                              },
                                              {
                                                "type": "DecimalNumber",
                                                "value": "2"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "value": {
                            "type": "DecimalNumber",
                            "value": "2"
                          }
                        },
                        {
                          "type": "AssemblyCase",
                          "block": {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mstore",
                                "arguments": [
                                  {
                                    "type": "HexNumber",
                                    "value": "0x0"
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "_preBytes_slot",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "sc"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "keccak256",
                                      "arguments": [
                                        {
                                          "type": "HexNumber",
                                          "value": "0x0"
                                        },
                                        {
                                          "type": "HexNumber",
                                          "value": "0x20"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "div",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "slength",
                                          "arguments": []
                                        },
                                        {
                                          "type": "DecimalNumber",
                                          "value": "32"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "sstore",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "_preBytes_slot",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mul",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "newlength",
                                            "arguments": []
                                          },
                                          {
                                            "type": "DecimalNumber",
                                            "value": "2"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "DecimalNumber",
                                        "value": "1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "submod"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "sub",
                                  "arguments": [
                                    {
                                      "type": "DecimalNumber",
                                      "value": "32"
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "slength",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "mc"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "_postBytes",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "submod",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "end"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "_postBytes",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mlength",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "mask"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "sub",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "exp",
                                      "arguments": [
                                        {
                                          "type": "HexNumber",
                                          "value": "0x100"
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "submod",
                                          "arguments": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "DecimalNumber",
                                      "value": "1"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "sstore",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sc",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "and",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "fslot",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "and",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mc",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mask",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyFor",
                                "pre": {
                                  "type": "AssemblyBlock",
                                  "operations": [
                                    {
                                      "type": "AssemblyAssignment",
                                      "names": [
                                        {
                                          "type": "Identifier",
                                          "name": "mc"
                                        }
                                      ],
                                      "expression": {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mc",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0x20"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "AssemblyAssignment",
                                      "names": [
                                        {
                                          "type": "Identifier",
                                          "name": "sc"
                                        }
                                      ],
                                      "expression": {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sc",
                                            "arguments": []
                                          },
                                          {
                                            "type": "DecimalNumber",
                                            "value": "1"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "condition": {
                                  "type": "AssemblyExpression",
                                  "functionName": "lt",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mc",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "end",
                                      "arguments": []
                                    }
                                  ]
                                },
                                "post": {
                                  "type": "AssemblyBlock",
                                  "operations": [
                                    {
                                      "type": "AssemblyAssignment",
                                      "names": [
                                        {
                                          "type": "Identifier",
                                          "name": "sc"
                                        }
                                      ],
                                      "expression": {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sc",
                                            "arguments": []
                                          },
                                          {
                                            "type": "DecimalNumber",
                                            "value": "1"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "AssemblyAssignment",
                                      "names": [
                                        {
                                          "type": "Identifier",
                                          "name": "mc"
                                        }
                                      ],
                                      "expression": {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mc",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0x20"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "body": {
                                  "type": "AssemblyBlock",
                                  "operations": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "sstore",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "sc",
                                          "arguments": []
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mload",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mc",
                                              "arguments": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "mask"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "exp",
                                  "arguments": [
                                    {
                                      "type": "HexNumber",
                                      "value": "0x100"
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "sub",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mc",
                                          "arguments": []
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "end",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "sstore",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sc",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mul",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "div",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mc",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mask",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mask",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "value": {
                            "type": "DecimalNumber",
                            "value": "1"
                          }
                        },
                        {
                          "type": "AssemblyCase",
                          "block": {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mstore",
                                "arguments": [
                                  {
                                    "type": "HexNumber",
                                    "value": "0x0"
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "_preBytes_slot",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "sc"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "keccak256",
                                      "arguments": [
                                        {
                                          "type": "HexNumber",
                                          "value": "0x0"
                                        },
                                        {
                                          "type": "HexNumber",
                                          "value": "0x20"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "div",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "slength",
                                          "arguments": []
                                        },
                                        {
                                          "type": "DecimalNumber",
                                          "value": "32"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "sstore",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "_preBytes_slot",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mul",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "newlength",
                                            "arguments": []
                                          },
                                          {
                                            "type": "DecimalNumber",
                                            "value": "2"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "DecimalNumber",
                                        "value": "1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "slengthmod"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "slength",
                                      "arguments": []
                                    },
                                    {
                                      "type": "DecimalNumber",
                                      "value": "32"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "mlengthmod"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mod",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mlength",
                                      "arguments": []
                                    },
                                    {
                                      "type": "DecimalNumber",
                                      "value": "32"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "submod"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "sub",
                                  "arguments": [
                                    {
                                      "type": "DecimalNumber",
                                      "value": "32"
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "slengthmod",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "mc"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "_postBytes",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "submod",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "end"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "_postBytes",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mlength",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "mask"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "sub",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "exp",
                                      "arguments": [
                                        {
                                          "type": "HexNumber",
                                          "value": "0x100"
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "submod",
                                          "arguments": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "DecimalNumber",
                                      "value": "1"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "sstore",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sc",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "sload",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sc",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "and",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mc",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mask",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyFor",
                                "pre": {
                                  "type": "AssemblyBlock",
                                  "operations": [
                                    {
                                      "type": "AssemblyAssignment",
                                      "names": [
                                        {
                                          "type": "Identifier",
                                          "name": "sc"
                                        }
                                      ],
                                      "expression": {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sc",
                                            "arguments": []
                                          },
                                          {
                                            "type": "DecimalNumber",
                                            "value": "1"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "AssemblyAssignment",
                                      "names": [
                                        {
                                          "type": "Identifier",
                                          "name": "mc"
                                        }
                                      ],
                                      "expression": {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mc",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0x20"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "condition": {
                                  "type": "AssemblyExpression",
                                  "functionName": "lt",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mc",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "end",
                                      "arguments": []
                                    }
                                  ]
                                },
                                "post": {
                                  "type": "AssemblyBlock",
                                  "operations": [
                                    {
                                      "type": "AssemblyAssignment",
                                      "names": [
                                        {
                                          "type": "Identifier",
                                          "name": "sc"
                                        }
                                      ],
                                      "expression": {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sc",
                                            "arguments": []
                                          },
                                          {
                                            "type": "DecimalNumber",
                                            "value": "1"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "AssemblyAssignment",
                                      "names": [
                                        {
                                          "type": "Identifier",
                                          "name": "mc"
                                        }
                                      ],
                                      "expression": {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mc",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0x20"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "body": {
                                  "type": "AssemblyBlock",
                                  "operations": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "sstore",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "sc",
                                          "arguments": []
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mload",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mc",
                                              "arguments": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "mask"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "exp",
                                  "arguments": [
                                    {
                                      "type": "HexNumber",
                                      "value": "0x100"
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "sub",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mc",
                                          "arguments": []
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "end",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "sstore",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sc",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mul",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "div",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mload",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mc",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mask",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mask",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "default": true
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "slice",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_bytes",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "_start",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "_length",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": ">=",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "_bytes"
                        },
                        "memberName": "length"
                      },
                      "right": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "+",
                            "left": {
                              "type": "Identifier",
                              "name": "_start"
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "_length"
                            }
                          }
                        ],
                        "isArray": false
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "tempBytes",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": null
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblySwitch",
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "iszero",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "_length",
                            "arguments": []
                          }
                        ]
                      },
                      "cases": [
                        {
                          "type": "AssemblyCase",
                          "block": {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "tempBytes"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mload",
                                  "arguments": [
                                    {
                                      "type": "HexNumber",
                                      "value": "0x40"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "lengthmod"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "and",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "_length",
                                      "arguments": []
                                    },
                                    {
                                      "type": "DecimalNumber",
                                      "value": "31"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "mc"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "add",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "tempBytes",
                                          "arguments": []
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "lengthmod",
                                          "arguments": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mul",
                                      "arguments": [
                                        {
                                          "type": "HexNumber",
                                          "value": "0x20"
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "iszero",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "lengthmod",
                                              "arguments": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "end"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mc",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "_length",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyFor",
                                "pre": {
                                  "type": "AssemblyBlock",
                                  "operations": [
                                    {
                                      "type": "AssemblyLocalDefinition",
                                      "names": [
                                        {
                                          "type": "Identifier",
                                          "name": "cc"
                                        }
                                      ],
                                      "expression": {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "add",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "add",
                                                "arguments": [
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "_bytes",
                                                    "arguments": []
                                                  },
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "lengthmod",
                                                    "arguments": []
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mul",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x20"
                                                  },
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "iszero",
                                                    "arguments": [
                                                      {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "lengthmod",
                                                        "arguments": []
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "_start",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "condition": {
                                  "type": "AssemblyExpression",
                                  "functionName": "lt",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mc",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "end",
                                      "arguments": []
                                    }
                                  ]
                                },
                                "post": {
                                  "type": "AssemblyBlock",
                                  "operations": [
                                    {
                                      "type": "AssemblyAssignment",
                                      "names": [
                                        {
                                          "type": "Identifier",
                                          "name": "mc"
                                        }
                                      ],
                                      "expression": {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mc",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0x20"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "AssemblyAssignment",
                                      "names": [
                                        {
                                          "type": "Identifier",
                                          "name": "cc"
                                        }
                                      ],
                                      "expression": {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "cc",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0x20"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "body": {
                                  "type": "AssemblyBlock",
                                  "operations": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mstore",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mc",
                                          "arguments": []
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "mload",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "cc",
                                              "arguments": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mstore",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "tempBytes",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "_length",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mstore",
                                "arguments": [
                                  {
                                    "type": "HexNumber",
                                    "value": "0x40"
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "and",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mc",
                                            "arguments": []
                                          },
                                          {
                                            "type": "DecimalNumber",
                                            "value": "31"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "not",
                                        "arguments": [
                                          {
                                            "type": "DecimalNumber",
                                            "value": "31"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "value": {
                            "type": "DecimalNumber",
                            "value": "0"
                          }
                        },
                        {
                          "type": "AssemblyCase",
                          "block": {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "tempBytes"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "mload",
                                  "arguments": [
                                    {
                                      "type": "HexNumber",
                                      "value": "0x40"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mstore",
                                "arguments": [
                                  {
                                    "type": "HexNumber",
                                    "value": "0x40"
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "tempBytes",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x20"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "default": true
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "tempBytes"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "toAddress",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_bytes",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "_start",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": ">=",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "_bytes"
                        },
                        "memberName": "length"
                      },
                      "right": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "+",
                            "left": {
                              "type": "Identifier",
                              "name": "_start"
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "20",
                              "subdenomination": null
                            }
                          }
                        ],
                        "isArray": false
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "address"
                    },
                    "name": "tempAddress",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "tempAddress"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "div",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mload",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "_bytes",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x20"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "_start",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x1000000000000000000000000"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "tempAddress"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "toUint",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_bytes",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "_start",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": ">=",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "_bytes"
                        },
                        "memberName": "length"
                      },
                      "right": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "+",
                            "left": {
                              "type": "Identifier",
                              "name": "_start"
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "32",
                              "subdenomination": null
                            }
                          }
                        ],
                        "isArray": false
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "tempUint",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "tempUint"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "_bytes",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x20"
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "_start",
                                "arguments": []
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "tempUint"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "equal",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_preBytes",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_postBytes",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bool"
                    },
                    "name": "success",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BooleanLiteral",
                  "value": true
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "length"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "_preBytes",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblySwitch",
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "eq",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "length",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mload",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "_postBytes",
                                "arguments": []
                              }
                            ]
                          }
                        ]
                      },
                      "cases": [
                        {
                          "type": "AssemblyCase",
                          "block": {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "cb"
                                  }
                                ],
                                "expression": {
                                  "type": "DecimalNumber",
                                  "value": "1"
                                }
                              },
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "mc"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "_preBytes",
                                      "arguments": []
                                    },
                                    {
                                      "type": "HexNumber",
                                      "value": "0x20"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyLocalDefinition",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "end"
                                  }
                                ],
                                "expression": {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mc",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "length",
                                      "arguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "AssemblyFor",
                                "pre": {
                                  "type": "AssemblyBlock",
                                  "operations": [
                                    {
                                      "type": "AssemblyLocalDefinition",
                                      "names": [
                                        {
                                          "type": "Identifier",
                                          "name": "cc"
                                        }
                                      ],
                                      "expression": {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "_postBytes",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0x20"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "condition": {
                                  "type": "AssemblyExpression",
                                  "functionName": "eq",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "add",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "lt",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "mc",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "end",
                                              "arguments": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "cb",
                                          "arguments": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "DecimalNumber",
                                      "value": "2"
                                    }
                                  ]
                                },
                                "post": {
                                  "type": "AssemblyBlock",
                                  "operations": [
                                    {
                                      "type": "AssemblyAssignment",
                                      "names": [
                                        {
                                          "type": "Identifier",
                                          "name": "mc"
                                        }
                                      ],
                                      "expression": {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mc",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0x20"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "AssemblyAssignment",
                                      "names": [
                                        {
                                          "type": "Identifier",
                                          "name": "cc"
                                        }
                                      ],
                                      "expression": {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "cc",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0x20"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "body": {
                                  "type": "AssemblyBlock",
                                  "operations": [
                                    {
                                      "type": "AssemblyIf",
                                      "condition": {
                                        "type": "AssemblyExpression",
                                        "functionName": "iszero",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "eq",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "mc",
                                                    "arguments": []
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "cc",
                                                    "arguments": []
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "body": {
                                        "type": "AssemblyBlock",
                                        "operations": [
                                          {
                                            "type": "AssemblyAssignment",
                                            "names": [
                                              {
                                                "type": "Identifier",
                                                "name": "success"
                                              }
                                            ],
                                            "expression": {
                                              "type": "DecimalNumber",
                                              "value": "0"
                                            }
                                          },
                                          {
                                            "type": "AssemblyAssignment",
                                            "names": [
                                              {
                                                "type": "Identifier",
                                                "name": "cb"
                                              }
                                            ],
                                            "expression": {
                                              "type": "DecimalNumber",
                                              "value": "0"
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "value": {
                            "type": "DecimalNumber",
                            "value": "1"
                          }
                        },
                        {
                          "type": "AssemblyCase",
                          "block": {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "success"
                                  }
                                ],
                                "expression": {
                                  "type": "DecimalNumber",
                                  "value": "0"
                                }
                              }
                            ]
                          },
                          "default": true
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "success"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "equalStorage",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_preBytes",
                "storageLocation": "storage",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_postBytes",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bool"
                    },
                    "name": "success",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BooleanLiteral",
                  "value": true
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "fslot"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "sload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "_preBytes_slot",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "slength"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "div",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "and",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "fslot",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "sub",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mul",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0x100"
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "iszero",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "and",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "fslot",
                                                "arguments": []
                                              },
                                              {
                                                "type": "DecimalNumber",
                                                "value": "1"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "DecimalNumber",
                                    "value": "1"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "DecimalNumber",
                            "value": "2"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "mlength"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "_postBytes",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblySwitch",
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "eq",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "slength",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mlength",
                            "arguments": []
                          }
                        ]
                      },
                      "cases": [
                        {
                          "type": "AssemblyCase",
                          "block": {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyIf",
                                "condition": {
                                  "type": "AssemblyExpression",
                                  "functionName": "iszero",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "iszero",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "slength",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "body": {
                                  "type": "AssemblyBlock",
                                  "operations": [
                                    {
                                      "type": "AssemblySwitch",
                                      "expression": {
                                        "type": "AssemblyExpression",
                                        "functionName": "lt",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "slength",
                                            "arguments": []
                                          },
                                          {
                                            "type": "DecimalNumber",
                                            "value": "32"
                                          }
                                        ]
                                      },
                                      "cases": [
                                        {
                                          "type": "AssemblyCase",
                                          "block": {
                                            "type": "AssemblyBlock",
                                            "operations": [
                                              {
                                                "type": "AssemblyAssignment",
                                                "names": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "fslot"
                                                  }
                                                ],
                                                "expression": {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "mul",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "div",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "fslot",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "HexNumber",
                                                          "value": "0x100"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x100"
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "AssemblyIf",
                                                "condition": {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "iszero",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "eq",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "fslot",
                                                          "arguments": []
                                                        },
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "mload",
                                                          "arguments": [
                                                            {
                                                              "type": "AssemblyExpression",
                                                              "functionName": "add",
                                                              "arguments": [
                                                                {
                                                                  "type": "AssemblyExpression",
                                                                  "functionName": "_postBytes",
                                                                  "arguments": []
                                                                },
                                                                {
                                                                  "type": "HexNumber",
                                                                  "value": "0x20"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                "body": {
                                                  "type": "AssemblyBlock",
                                                  "operations": [
                                                    {
                                                      "type": "AssemblyAssignment",
                                                      "names": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "success"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "type": "DecimalNumber",
                                                        "value": "0"
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "value": {
                                            "type": "DecimalNumber",
                                            "value": "1"
                                          }
                                        },
                                        {
                                          "type": "AssemblyCase",
                                          "block": {
                                            "type": "AssemblyBlock",
                                            "operations": [
                                              {
                                                "type": "AssemblyLocalDefinition",
                                                "names": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "cb"
                                                  }
                                                ],
                                                "expression": {
                                                  "type": "DecimalNumber",
                                                  "value": "1"
                                                }
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mstore",
                                                "arguments": [
                                                  {
                                                    "type": "HexNumber",
                                                    "value": "0x0"
                                                  },
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "_preBytes_slot",
                                                    "arguments": []
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyLocalDefinition",
                                                "names": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "sc"
                                                  }
                                                ],
                                                "expression": {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "keccak256",
                                                  "arguments": [
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x0"
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x20"
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "AssemblyLocalDefinition",
                                                "names": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "mc"
                                                  }
                                                ],
                                                "expression": {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "_postBytes",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "HexNumber",
                                                      "value": "0x20"
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "AssemblyLocalDefinition",
                                                "names": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "end"
                                                  }
                                                ],
                                                "expression": {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "add",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "mc",
                                                      "arguments": []
                                                    },
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "mlength",
                                                      "arguments": []
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "AssemblyFor",
                                                "pre": {
                                                  "type": "AssemblyBlock",
                                                  "operations": []
                                                },
                                                "condition": {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "eq",
                                                  "arguments": [
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "add",
                                                      "arguments": [
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "lt",
                                                          "arguments": [
                                                            {
                                                              "type": "AssemblyExpression",
                                                              "functionName": "mc",
                                                              "arguments": []
                                                            },
                                                            {
                                                              "type": "AssemblyExpression",
                                                              "functionName": "end",
                                                              "arguments": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "AssemblyExpression",
                                                          "functionName": "cb",
                                                          "arguments": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "DecimalNumber",
                                                      "value": "2"
                                                    }
                                                  ]
                                                },
                                                "post": {
                                                  "type": "AssemblyBlock",
                                                  "operations": [
                                                    {
                                                      "type": "AssemblyAssignment",
                                                      "names": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "sc"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "add",
                                                        "arguments": [
                                                          {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "sc",
                                                            "arguments": []
                                                          },
                                                          {
                                                            "type": "DecimalNumber",
                                                            "value": "1"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "AssemblyAssignment",
                                                      "names": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "mc"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "add",
                                                        "arguments": [
                                                          {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "mc",
                                                            "arguments": []
                                                          },
                                                          {
                                                            "type": "HexNumber",
                                                            "value": "0x20"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "body": {
                                                  "type": "AssemblyBlock",
                                                  "operations": [
                                                    {
                                                      "type": "AssemblyIf",
                                                      "condition": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "iszero",
                                                        "arguments": [
                                                          {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "eq",
                                                            "arguments": [
                                                              {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "sload",
                                                                "arguments": [
                                                                  {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "sc",
                                                                    "arguments": []
                                                                  }
                                                                ]
                                                              },
                                                              {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mload",
                                                                "arguments": [
                                                                  {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "mc",
                                                                    "arguments": []
                                                                  }
                                                                ]
                                                              }
                                                            ]
                                                          }
                                                        ]
                                                      },
                                                      "body": {
                                                        "type": "AssemblyBlock",
                                                        "operations": [
                                                          {
                                                            "type": "AssemblyAssignment",
                                                            "names": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "success"
                                                              }
                                                            ],
                                                            "expression": {
                                                              "type": "DecimalNumber",
                                                              "value": "0"
                                                            }
                                                          },
                                                          {
                                                            "type": "AssemblyAssignment",
                                                            "names": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "cb"
                                                              }
                                                            ],
                                                            "expression": {
                                                              "type": "DecimalNumber",
                                                              "value": "0"
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "default": true
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "value": {
                            "type": "DecimalNumber",
                            "value": "1"
                          }
                        },
                        {
                          "type": "AssemblyCase",
                          "block": {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyAssignment",
                                "names": [
                                  {
                                    "type": "Identifier",
                                    "name": "success"
                                  }
                                ],
                                "expression": {
                                  "type": "DecimalNumber",
                                  "value": "0"
                                }
                              }
                            ]
                          },
                          "default": true
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "success"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        }
      ],
      "kind": "library"
    }
  ]
}