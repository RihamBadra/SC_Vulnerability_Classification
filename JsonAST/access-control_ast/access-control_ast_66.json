{
  "type": "SourceUnit",
  "children": [
    {
      "type": "PragmaDirective",
      "name": "solidity",
      "value": "=0.7.6"
    },
    {
      "type": "ContractDefinition",
      "name": "SafeMath",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "safeMul",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "a",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "b",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "c",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                    "type": "Identifier",
                    "name": "a"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "b"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "assert"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "||",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "==",
                        "left": {
                          "type": "Identifier",
                          "name": "a"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "==",
                        "left": {
                          "type": "BinaryOperation",
                          "operator": "/",
                          "left": {
                            "type": "Identifier",
                            "name": "c"
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "a"
                          }
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "b"
                        }
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "Identifier",
                "name": "c"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "safeDiv",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "a",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "b",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "assert"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": ">",
                      "left": {
                        "type": "Identifier",
                        "name": "b"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "c",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "/",
                  "left": {
                    "type": "Identifier",
                    "name": "a"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "b"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "assert"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "Identifier",
                        "name": "a"
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                          "type": "BinaryOperation",
                          "operator": "*",
                          "left": {
                            "type": "Identifier",
                            "name": "b"
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "c"
                          }
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": "%",
                          "left": {
                            "type": "Identifier",
                            "name": "a"
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "b"
                          }
                        }
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "Identifier",
                "name": "c"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "Token",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "transfer",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "_to",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_value",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": "success",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "balanceOf",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "_who",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        }
      ],
      "kind": "interface"
    },
    {
      "type": "ContractDefinition",
      "name": "DragoEventful",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "customDragoLog",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes4"
                },
                "name": "_methodHash",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_encodedParams",
                "storageLocation": "calldata",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": "success",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        }
      ],
      "kind": "interface"
    },
    {
      "type": "ContractDefinition",
      "name": "Drago",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address"
              },
              "name": "owner",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "FunctionDefinition",
          "name": "getEventful",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        }
      ],
      "kind": "abstract"
    },
    {
      "type": "ContractDefinition",
      "name": "ASelfCustody",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "SafeMath"
          },
          "arguments": null
        }
      ],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address"
              },
              "name": "GRG_ADDRESS",
              "expression": {
                "type": "FunctionCall",
                "expression": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "arguments": [
                  {
                    "type": "NumberLiteral",
                    "number": "0x4FbB350052Bca5417566f188eB2EBCE5b19BC964",
                    "subdenomination": null
                  }
                ],
                "names": []
              },
              "visibility": "private",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "FunctionCall",
            "expression": {
              "type": "ElementaryTypeName",
              "name": "address"
            },
            "arguments": [
              {
                "type": "NumberLiteral",
                "number": "0x4FbB350052Bca5417566f188eB2EBCE5b19BC964",
                "subdenomination": null
              }
            ],
            "names": []
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MIN_TOKEN_VALUE",
              "expression": {
                "type": "NumberLiteral",
                "number": "1e21",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "1e21",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes4"
              },
              "name": "SELECTOR",
              "expression": {
                "type": "FunctionCall",
                "expression": {
                  "type": "ElementaryTypeName",
                  "name": "bytes4"
                },
                "arguments": [
                  {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "keccak256"
                    },
                    "arguments": [
                      {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "ElementaryTypeName",
                          "name": "bytes"
                        },
                        "arguments": [
                          {
                            "type": "stringLiteral",
                            "value": "transfer(address,uint256)"
                          }
                        ],
                        "names": []
                      }
                    ],
                    "names": []
                  }
                ],
                "names": []
              },
              "visibility": "private",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "FunctionCall",
            "expression": {
              "type": "ElementaryTypeName",
              "name": "bytes4"
            },
            "arguments": [
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "keccak256"
                },
                "arguments": [
                  {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "arguments": [
                      {
                        "type": "stringLiteral",
                        "value": "transfer(address,uint256)"
                      }
                    ],
                    "names": []
                  }
                ],
                "names": []
              }
            ],
            "names": []
          }
        },
        {
          "type": "FunctionDefinition",
          "name": "transferToSelfCustody",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address",
                  "stateMutability": "payable"
                },
                "name": "selfCustodyAccount",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "token",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "amount",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "Identifier",
                              "name": "Drago"
                            },
                            "arguments": [
                              {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "ElementaryTypeName",
                                  "name": "address"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "this"
                                  }
                                ],
                                "names": []
                              }
                            ],
                            "names": []
                          },
                          "memberName": "owner"
                        },
                        "arguments": [],
                        "names": []
                      },
                      "right": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "msg"
                        },
                        "memberName": "sender"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "FAIL_OWNER_CHECK"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "!=",
                      "left": {
                        "type": "Identifier",
                        "name": "amount"
                      },
                      "right": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "ElementaryTypeName",
                          "name": "uint256"
                        },
                        "arguments": [
                          {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        ],
                        "names": []
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "name": "satisfied",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bool"
                    },
                    "isStateVar": false,
                    "isIndexed": false,
                    "decl": "[738 727 663 620 600 426 325 305 196]"
                  },
                  {
                    "type": "VariableDeclaration",
                    "name": "shortfall",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "isStateVar": false,
                    "isIndexed": false,
                    "decl": "[742 727 663 620 600 426 325 305 196]"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "_poolGRGminimumSatisfied"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "GRG_ADDRESS"
                    },
                    {
                      "type": "Identifier",
                      "name": "token"
                    },
                    {
                      "type": "Identifier",
                      "name": "amount"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                    "type": "Identifier",
                    "name": "satisfied"
                  },
                  "right": {
                    "type": "BooleanLiteral",
                    "value": true
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "Identifier",
                              "name": "transferToSelfCustodyInternal"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "selfCustodyAccount"
                              },
                              {
                                "type": "Identifier",
                                "name": "token"
                              },
                              {
                                "type": "Identifier",
                                "name": "amount"
                              }
                            ],
                            "names": []
                          },
                          {
                            "type": "stringLiteral",
                            "value": "TRANSFER_FAIL_GRG_REQ_SATISFIED_ERROR"
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "Identifier",
                              "name": "logTransferToSelfCustody"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "selfCustodyAccount"
                              },
                              {
                                "type": "Identifier",
                                "name": "token"
                              },
                              {
                                "type": "Identifier",
                                "name": "amount"
                              }
                            ],
                            "names": []
                          },
                          {
                            "type": "stringLiteral",
                            "value": "LOG_FAIL_GRG_REQ_SATISFIED_ERROR"
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "TupleExpression",
                      "components": [
                        {
                          "type": "BooleanLiteral",
                          "value": true
                        },
                        {
                          "type": "Identifier",
                          "name": "shortfall"
                        }
                      ],
                      "isArray": false
                    }
                  ]
                },
                "FalseBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "TupleExpression",
                      "components": [
                        {
                          "type": "BooleanLiteral",
                          "value": false
                        },
                        {
                          "type": "Identifier",
                          "name": "shortfall"
                        }
                      ],
                      "isArray": false
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "poolGRGminimumSatisfied",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "grgTokenAddress",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "tokenAddress",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "amount",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": "satisfied",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "shortfall",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "_poolGRGminimumSatisfied"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "grgTokenAddress"
                  },
                  {
                    "type": "Identifier",
                    "name": "tokenAddress"
                  },
                  {
                    "type": "Identifier",
                    "name": "amount"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "_poolGRGminimumSatisfied",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "grgTokenAddress",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "tokenAddress",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "amount",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": "satisfied",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "shortfall",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "etherBase",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "18",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "rationalBase",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "36",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "rationalizedAmountBase36",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "safeMul"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "amount"
                    },
                    {
                      "type": "BinaryOperation",
                      "operator": "**",
                      "left": {
                        "type": "NumberLiteral",
                        "number": "10",
                        "subdenomination": null
                      },
                      "right": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "-",
                            "left": {
                              "type": "Identifier",
                              "name": "rationalBase"
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "etherBase"
                            }
                          }
                        ],
                        "isArray": false
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "poolRationalizedGrgBalanceBase36",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "Token"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "grgTokenAddress"
                          }
                        ],
                        "names": []
                      },
                      "memberName": "balanceOf"
                    },
                    "arguments": [
                      {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "ElementaryTypeName",
                          "name": "address"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "this"
                          }
                        ],
                        "names": []
                      }
                    ],
                    "names": []
                  },
                  "right": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "BinaryOperation",
                        "operator": "**",
                        "left": {
                          "type": "NumberLiteral",
                          "number": "10",
                          "subdenomination": null
                        },
                        "right": {
                          "type": "TupleExpression",
                          "components": [
                            {
                              "type": "BinaryOperation",
                              "operator": "-",
                              "left": {
                                "type": "Identifier",
                                "name": "rationalBase"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "etherBase"
                              }
                            }
                          ],
                          "isArray": false
                        }
                      }
                    ],
                    "isArray": false
                  }
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "!=",
                  "left": {
                    "type": "Identifier",
                    "name": "tokenAddress"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "address"
                    },
                    "arguments": [
                      {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      }
                    ],
                    "names": []
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint256"
                          },
                          "name": "poolGrgBalance",
                          "storageLocation": null
                        }
                      ],
                      "initialValue": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "Identifier",
                              "name": "Token"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "grgTokenAddress"
                              }
                            ],
                            "names": []
                          },
                          "memberName": "balanceOf"
                        },
                        "arguments": [
                          {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "ElementaryTypeName",
                              "name": "address"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "this"
                              }
                            ],
                            "names": []
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "satisfied"
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": ">=",
                          "left": {
                            "type": "Identifier",
                            "name": "poolGrgBalance"
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "MIN_TOKEN_VALUE"
                          }
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "shortfall"
                        },
                        "right": {
                          "type": "Conditional",
                          "condition": {
                            "type": "BinaryOperation",
                            "operator": "<",
                            "left": {
                              "type": "Identifier",
                              "name": "poolGrgBalance"
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "MIN_TOKEN_VALUE"
                            }
                          },
                          "TrueExpression": {
                            "type": "BinaryOperation",
                            "operator": "-",
                            "left": {
                              "type": "Identifier",
                              "name": "MIN_TOKEN_VALUE"
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "poolGrgBalance"
                            }
                          },
                          "FalseExpression": {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "ElementaryTypeName",
                              "name": "uint256"
                            },
                            "arguments": [
                              {
                                "type": "NumberLiteral",
                                "number": "0",
                                "subdenomination": null
                              }
                            ],
                            "names": []
                          }
                        }
                      }
                    }
                  ]
                },
                "FalseBody": {
                  "type": "IfStatement",
                  "condition": {
                    "type": "BinaryOperation",
                    "operator": "<",
                    "left": {
                      "type": "Identifier",
                      "name": "rationalizedAmountBase36"
                    },
                    "right": {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "findPi2"
                      },
                      "arguments": [],
                      "names": []
                    }
                  },
                  "TrueBody": {
                    "type": "Block",
                    "statements": [
                      {
                        "type": "IfStatement",
                        "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                            "type": "Identifier",
                            "name": "poolRationalizedGrgBalanceBase36"
                          },
                          "right": {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "Identifier",
                              "name": "findPi4"
                            },
                            "arguments": [],
                            "names": []
                          }
                        },
                        "TrueBody": {
                          "type": "Block",
                          "statements": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "BinaryOperation",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "satisfied"
                                },
                                "right": {
                                  "type": "BooleanLiteral",
                                  "value": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "BinaryOperation",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "shortfall"
                                },
                                "right": {
                                  "type": "FunctionCall",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "safeDiv"
                                  },
                                  "arguments": [
                                    {
                                      "type": "BinaryOperation",
                                      "operator": "-",
                                      "left": {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "findPi4"
                                        },
                                        "arguments": [],
                                        "names": []
                                      },
                                      "right": {
                                        "type": "Identifier",
                                        "name": "poolRationalizedGrgBalanceBase36"
                                      }
                                    },
                                    {
                                      "type": "TupleExpression",
                                      "components": [
                                        {
                                          "type": "BinaryOperation",
                                          "operator": "**",
                                          "left": {
                                            "type": "NumberLiteral",
                                            "number": "10",
                                            "subdenomination": null
                                          },
                                          "right": {
                                            "type": "TupleExpression",
                                            "components": [
                                              {
                                                "type": "BinaryOperation",
                                                "operator": "-",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "rationalBase"
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "etherBase"
                                                }
                                              }
                                            ],
                                            "isArray": false
                                          }
                                        }
                                      ],
                                      "isArray": false
                                    }
                                  ],
                                  "names": []
                                }
                              }
                            }
                          ]
                        },
                        "FalseBody": {
                          "type": "Block",
                          "statements": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "BinaryOperation",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "satisfied"
                                },
                                "right": {
                                  "type": "BooleanLiteral",
                                  "value": true
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "BinaryOperation",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "shortfall"
                                },
                                "right": {
                                  "type": "FunctionCall",
                                  "expression": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                  },
                                  "arguments": [
                                    {
                                      "type": "NumberLiteral",
                                      "number": "0",
                                      "subdenomination": null
                                    }
                                  ],
                                  "names": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "FalseBody": {
                    "type": "IfStatement",
                    "condition": {
                      "type": "BinaryOperation",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "rationalizedAmountBase36"
                      },
                      "right": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "findPi3"
                        },
                        "arguments": [],
                        "names": []
                      }
                    },
                    "TrueBody": {
                      "type": "Block",
                      "statements": [
                        {
                          "type": "IfStatement",
                          "condition": {
                            "type": "BinaryOperation",
                            "operator": "<",
                            "left": {
                              "type": "Identifier",
                              "name": "poolRationalizedGrgBalanceBase36"
                            },
                            "right": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "Identifier",
                                "name": "findPi5"
                              },
                              "arguments": [],
                              "names": []
                            }
                          },
                          "TrueBody": {
                            "type": "Block",
                            "statements": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "BinaryOperation",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "satisfied"
                                  },
                                  "right": {
                                    "type": "BooleanLiteral",
                                    "value": false
                                  }
                                }
                              },
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "BinaryOperation",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "shortfall"
                                  },
                                  "right": {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "Identifier",
                                      "name": "safeDiv"
                                    },
                                    "arguments": [
                                      {
                                        "type": "BinaryOperation",
                                        "operator": "-",
                                        "left": {
                                          "type": "FunctionCall",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "findPi5"
                                          },
                                          "arguments": [],
                                          "names": []
                                        },
                                        "right": {
                                          "type": "Identifier",
                                          "name": "poolRationalizedGrgBalanceBase36"
                                        }
                                      },
                                      {
                                        "type": "TupleExpression",
                                        "components": [
                                          {
                                            "type": "BinaryOperation",
                                            "operator": "**",
                                            "left": {
                                              "type": "NumberLiteral",
                                              "number": "10",
                                              "subdenomination": null
                                            },
                                            "right": {
                                              "type": "TupleExpression",
                                              "components": [
                                                {
                                                  "type": "BinaryOperation",
                                                  "operator": "-",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "rationalBase"
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "etherBase"
                                                  }
                                                }
                                              ],
                                              "isArray": false
                                            }
                                          }
                                        ],
                                        "isArray": false
                                      }
                                    ],
                                    "names": []
                                  }
                                }
                              }
                            ]
                          },
                          "FalseBody": {
                            "type": "Block",
                            "statements": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "BinaryOperation",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "satisfied"
                                  },
                                  "right": {
                                    "type": "BooleanLiteral",
                                    "value": true
                                  }
                                }
                              },
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "BinaryOperation",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "shortfall"
                                  },
                                  "right": {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "ElementaryTypeName",
                                      "name": "uint256"
                                    },
                                    "arguments": [
                                      {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                      }
                                    ],
                                    "names": []
                                  }
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "FalseBody": {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": ">=",
                        "left": {
                          "type": "Identifier",
                          "name": "rationalizedAmountBase36"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "findPi3"
                          },
                          "arguments": [],
                          "names": []
                        }
                      },
                      "TrueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "IfStatement",
                            "condition": {
                              "type": "BinaryOperation",
                              "operator": "<",
                              "left": {
                                "type": "Identifier",
                                "name": "poolRationalizedGrgBalanceBase36"
                              },
                              "right": {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "findPi6"
                                },
                                "arguments": [],
                                "names": []
                              }
                            },
                            "TrueBody": {
                              "type": "Block",
                              "statements": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "satisfied"
                                    },
                                    "right": {
                                      "type": "BooleanLiteral",
                                      "value": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "shortfall"
                                    },
                                    "right": {
                                      "type": "FunctionCall",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "safeDiv"
                                      },
                                      "arguments": [
                                        {
                                          "type": "BinaryOperation",
                                          "operator": "-",
                                          "left": {
                                            "type": "FunctionCall",
                                            "expression": {
                                              "type": "Identifier",
                                              "name": "findPi6"
                                            },
                                            "arguments": [],
                                            "names": []
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "poolRationalizedGrgBalanceBase36"
                                          }
                                        },
                                        {
                                          "type": "TupleExpression",
                                          "components": [
                                            {
                                              "type": "BinaryOperation",
                                              "operator": "**",
                                              "left": {
                                                "type": "NumberLiteral",
                                                "number": "10",
                                                "subdenomination": null
                                              },
                                              "right": {
                                                "type": "TupleExpression",
                                                "components": [
                                                  {
                                                    "type": "BinaryOperation",
                                                    "operator": "-",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "rationalBase"
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "etherBase"
                                                    }
                                                  }
                                                ],
                                                "isArray": false
                                              }
                                            }
                                          ],
                                          "isArray": false
                                        }
                                      ],
                                      "names": []
                                    }
                                  }
                                }
                              ]
                            },
                            "FalseBody": {
                              "type": "Block",
                              "statements": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "satisfied"
                                    },
                                    "right": {
                                      "type": "BooleanLiteral",
                                      "value": true
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "shortfall"
                                    },
                                    "right": {
                                      "type": "FunctionCall",
                                      "expression": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                      },
                                      "arguments": [
                                        {
                                          "type": "NumberLiteral",
                                          "number": "0",
                                          "subdenomination": null
                                        }
                                      ],
                                      "names": []
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "FalseBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "Identifier",
                                "name": "revert"
                              },
                              "arguments": [
                                {
                                  "type": "stringLiteral",
                                  "value": "UNKNOWN_GRG_MINIMUM_ERROR"
                                }
                              ],
                              "names": []
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              },
              {
                "type": "TupleExpression",
                "components": [
                  {
                    "type": "Identifier",
                    "name": "satisfied"
                  },
                  {
                    "type": "Identifier",
                    "name": "shortfall"
                  }
                ],
                "isArray": false
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "findPi",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "pi1",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint8"
                    },
                    "name": "power",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "pi",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "3141592",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "piBase",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "6",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "rationalBase",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "36",
                  "subdenomination": null
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "pi1"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "BinaryOperation",
                      "operator": "**",
                      "left": {
                        "type": "Identifier",
                        "name": "pi"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "power"
                      }
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "**",
                      "left": {
                        "type": "NumberLiteral",
                        "number": "10",
                        "subdenomination": null
                      },
                      "right": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "-",
                            "left": {
                              "type": "Identifier",
                              "name": "rationalBase"
                            },
                            "right": {
                              "type": "BinaryOperation",
                              "operator": "*",
                              "left": {
                                "type": "Identifier",
                                "name": "piBase"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "power"
                              }
                            }
                          }
                        ],
                        "isArray": false
                      }
                    }
                  }
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "findPi2",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "pi2",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint8"
                    },
                    "name": "power",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "2",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "pi",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "3141592",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "piBase",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "6",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "rationalBase",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "36",
                  "subdenomination": null
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "pi2"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "BinaryOperation",
                      "operator": "**",
                      "left": {
                        "type": "Identifier",
                        "name": "pi"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "power"
                      }
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "**",
                      "left": {
                        "type": "NumberLiteral",
                        "number": "10",
                        "subdenomination": null
                      },
                      "right": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "-",
                            "left": {
                              "type": "Identifier",
                              "name": "rationalBase"
                            },
                            "right": {
                              "type": "BinaryOperation",
                              "operator": "*",
                              "left": {
                                "type": "Identifier",
                                "name": "piBase"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "power"
                              }
                            }
                          }
                        ],
                        "isArray": false
                      }
                    }
                  }
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "findPi3",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "pi3",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint8"
                    },
                    "name": "power",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "3",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "pi",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "3141592",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "piBase",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "6",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "rationalBase",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "36",
                  "subdenomination": null
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "pi3"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "BinaryOperation",
                      "operator": "**",
                      "left": {
                        "type": "Identifier",
                        "name": "pi"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "power"
                      }
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "**",
                      "left": {
                        "type": "NumberLiteral",
                        "number": "10",
                        "subdenomination": null
                      },
                      "right": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "-",
                            "left": {
                              "type": "Identifier",
                              "name": "rationalBase"
                            },
                            "right": {
                              "type": "BinaryOperation",
                              "operator": "*",
                              "left": {
                                "type": "Identifier",
                                "name": "piBase"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "power"
                              }
                            }
                          }
                        ],
                        "isArray": false
                      }
                    }
                  }
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "findPi4",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "pi4",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint8"
                    },
                    "name": "power",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "4",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "pi",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "3141592",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "piBase",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "6",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "rationalBase",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "36",
                  "subdenomination": null
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "pi4"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "BinaryOperation",
                      "operator": "**",
                      "left": {
                        "type": "Identifier",
                        "name": "pi"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "power"
                      }
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "**",
                      "left": {
                        "type": "NumberLiteral",
                        "number": "10",
                        "subdenomination": null
                      },
                      "right": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "-",
                            "left": {
                              "type": "Identifier",
                              "name": "rationalBase"
                            },
                            "right": {
                              "type": "BinaryOperation",
                              "operator": "*",
                              "left": {
                                "type": "Identifier",
                                "name": "piBase"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "power"
                              }
                            }
                          }
                        ],
                        "isArray": false
                      }
                    }
                  }
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "findPi5",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "pi5",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint8"
                    },
                    "name": "power",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "5",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "pi",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "3141592",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "piBase",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "6",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "rationalBase",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "36",
                  "subdenomination": null
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "pi5"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "BinaryOperation",
                      "operator": "**",
                      "left": {
                        "type": "Identifier",
                        "name": "pi"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "power"
                      }
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "**",
                      "left": {
                        "type": "NumberLiteral",
                        "number": "10",
                        "subdenomination": null
                      },
                      "right": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "-",
                            "left": {
                              "type": "Identifier",
                              "name": "rationalBase"
                            },
                            "right": {
                              "type": "BinaryOperation",
                              "operator": "*",
                              "left": {
                                "type": "Identifier",
                                "name": "piBase"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "power"
                              }
                            }
                          }
                        ],
                        "isArray": false
                      }
                    }
                  }
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "findPi6",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "pi6",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint8"
                    },
                    "name": "power",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "6",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "pi",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "3141592",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "piBase",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "6",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "rationalBase",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "36",
                  "subdenomination": null
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "pi6"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "BinaryOperation",
                      "operator": "**",
                      "left": {
                        "type": "Identifier",
                        "name": "pi"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "power"
                      }
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "**",
                      "left": {
                        "type": "NumberLiteral",
                        "number": "10",
                        "subdenomination": null
                      },
                      "right": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "-",
                            "left": {
                              "type": "Identifier",
                              "name": "rationalBase"
                            },
                            "right": {
                              "type": "BinaryOperation",
                              "operator": "*",
                              "left": {
                                "type": "Identifier",
                                "name": "piBase"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "power"
                              }
                            }
                          }
                        ],
                        "isArray": false
                      }
                    }
                  }
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "logTransferToSelfCustody",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "selfCustodyAccount",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "token",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "amount",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "UserDefinedTypeName",
                      "namePath": "DragoEventful"
                    },
                    "name": "events",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "DragoEventful"
                  },
                  "arguments": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "getDragoEventful"
                      },
                      "arguments": [],
                      "names": []
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes4"
                    },
                    "name": "methodHash",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "bytes4"
                  },
                  "arguments": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "keccak256"
                      },
                      "arguments": [
                        {
                          "type": "stringLiteral",
                          "value": "transferToSelfCustody(address,address,uint256)"
                        }
                      ],
                      "names": []
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "encodedParams",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "abi"
                    },
                    "memberName": "encode"
                  },
                  "arguments": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "ElementaryTypeName",
                        "name": "address"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "this"
                        }
                      ],
                      "names": []
                    },
                    {
                      "type": "Identifier",
                      "name": "selfCustodyAccount"
                    },
                    {
                      "type": "Identifier",
                      "name": "token"
                    },
                    {
                      "type": "Identifier",
                      "name": "amount"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "events"
                        },
                        "memberName": "customDragoLog"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "methodHash"
                        },
                        {
                          "type": "Identifier",
                          "name": "encodedParams"
                        }
                      ],
                      "names": []
                    },
                    {
                      "type": "stringLiteral",
                      "value": "ISSUE_IN_EVENTFUL"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "BooleanLiteral",
                "value": true
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "transferToSelfCustodyInternal",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address",
                  "stateMutability": "payable"
                },
                "name": "selfCustodyAccount",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "token",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "amount",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": "success",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                    "type": "Identifier",
                    "name": "token"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "address"
                    },
                    "arguments": [
                      {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      }
                    ],
                    "names": []
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "selfCustodyAccount"
                          },
                          "memberName": "transfer"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "amount"
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "success"
                        },
                        "right": {
                          "type": "BooleanLiteral",
                          "value": true
                        }
                      }
                    }
                  ]
                },
                "FalseBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "_safeTransfer"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "token"
                          },
                          {
                            "type": "Identifier",
                            "name": "selfCustodyAccount"
                          },
                          {
                            "type": "Identifier",
                            "name": "amount"
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "success"
                        },
                        "right": {
                          "type": "BooleanLiteral",
                          "value": true
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "success"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "_safeTransfer",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "token",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "to",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "value",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "name": "success",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bool"
                    },
                    "isStateVar": false,
                    "isIndexed": false,
                    "decl": "[738 727 663 620 600 426 325 305 196]"
                  },
                  {
                    "type": "VariableDeclaration",
                    "name": "data",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "isStateVar": false,
                    "isIndexed": false,
                    "decl": "[742 727 663 620 600 426 325 305 196]"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "token"
                    },
                    "memberName": "call"
                  },
                  "arguments": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "abi"
                        },
                        "memberName": "encodeWithSelector"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "SELECTOR"
                        },
                        {
                          "type": "Identifier",
                          "name": "to"
                        },
                        {
                          "type": "Identifier",
                          "name": "value"
                        }
                      ],
                      "names": []
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "&&",
                      "left": {
                        "type": "Identifier",
                        "name": "success"
                      },
                      "right": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "||",
                            "left": {
                              "type": "BinaryOperation",
                              "operator": "==",
                              "left": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "data"
                                },
                                "memberName": "length"
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "0",
                                "subdenomination": null
                              }
                            },
                            "right": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "abi"
                                },
                                "memberName": "decode"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "data"
                                },
                                {
                                  "type": "TupleExpression",
                                  "components": [
                                    {
                                      "type": "ElementaryTypeName",
                                      "name": "bool"
                                    }
                                  ],
                                  "isArray": false
                                }
                              ],
                              "names": []
                            }
                          }
                        ],
                        "isArray": false
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "RIGOBLOCK_TRANSFER_FAILED"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "private",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "getDragoEventful",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "address"
                    },
                    "name": "dragoEvenfulAddress",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "Drago"
                      },
                      "arguments": [
                        {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "ElementaryTypeName",
                            "name": "address"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "this"
                            }
                          ],
                          "names": []
                        }
                      ],
                      "names": []
                    },
                    "memberName": "getEventful"
                  },
                  "arguments": [],
                  "names": []
                }
              },
              {
                "type": "Identifier",
                "name": "dragoEvenfulAddress"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        }
      ],
      "kind": "contract"
    }
  ]
}