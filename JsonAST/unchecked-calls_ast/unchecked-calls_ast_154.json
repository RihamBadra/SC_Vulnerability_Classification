{
  "type": "SourceUnit",
  "children": [
    {
      "type": "PragmaDirective",
      "name": "solidity",
      "value": "0.5.17"
    },
    {
      "type": "ContractDefinition",
      "name": "SafeMath",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "mul",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "a",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "b",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                    "type": "Identifier",
                    "name": "a"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "c",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                    "type": "Identifier",
                    "name": "a"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "b"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "/",
                        "left": {
                          "type": "Identifier",
                          "name": "c"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "a"
                        }
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "b"
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "Identifier",
                "name": "c"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "div",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "a",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "b",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": ">",
                      "left": {
                        "type": "Identifier",
                        "name": "b"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "c",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "/",
                  "left": {
                    "type": "Identifier",
                    "name": "a"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "b"
                  }
                }
              },
              {
                "type": "Identifier",
                "name": "c"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "sub",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "a",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "b",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<=",
                      "left": {
                        "type": "Identifier",
                        "name": "b"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "a"
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "c",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "-",
                  "left": {
                    "type": "Identifier",
                    "name": "a"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "b"
                  }
                }
              },
              {
                "type": "Identifier",
                "name": "c"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "add",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "a",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "b",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "c",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "Identifier",
                    "name": "a"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "b"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": ">=",
                      "left": {
                        "type": "Identifier",
                        "name": "c"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "a"
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "Identifier",
                "name": "c"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "mod",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "a",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "b",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "!=",
                      "left": {
                        "type": "Identifier",
                        "name": "b"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "BinaryOperation",
                "operator": "%",
                "left": {
                  "type": "Identifier",
                  "name": "a"
                },
                "right": {
                  "type": "Identifier",
                  "name": "b"
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        }
      ],
      "kind": "library"
    },
    {
      "type": "ContractDefinition",
      "name": "SafeMathInt",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "int256"
              },
              "name": "MIN_INT256",
              "expression": {
                "type": "BinaryOperation",
                "operator": "<<",
                "left": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "int256"
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                },
                "right": {
                  "type": "NumberLiteral",
                  "number": "255",
                  "subdenomination": null
                }
              },
              "visibility": "private",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "BinaryOperation",
            "operator": "<<",
            "left": {
              "type": "FunctionCall",
              "expression": {
                "type": "ElementaryTypeName",
                "name": "int256"
              },
              "arguments": [
                {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                }
              ],
              "names": []
            },
            "right": {
              "type": "NumberLiteral",
              "number": "255",
              "subdenomination": null
            }
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "int256"
              },
              "name": "MAX_INT256",
              "expression": {
                "type": "UnaryOperation",
                "operator": "~",
                "subExpression": {
                  "type": "TupleExpression",
                  "components": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<<",
                      "left": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "ElementaryTypeName",
                          "name": "int256"
                        },
                        "arguments": [
                          {
                            "type": "NumberLiteral",
                            "number": "1",
                            "subdenomination": null
                          }
                        ],
                        "names": []
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "255",
                        "subdenomination": null
                      }
                    }
                  ],
                  "isArray": false
                },
                "isPrefix": true
              },
              "visibility": "private",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "UnaryOperation",
            "operator": "~",
            "subExpression": {
              "type": "TupleExpression",
              "components": [
                {
                  "type": "BinaryOperation",
                  "operator": "<<",
                  "left": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "int256"
                    },
                    "arguments": [
                      {
                        "type": "NumberLiteral",
                        "number": "1",
                        "subdenomination": null
                      }
                    ],
                    "names": []
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "255",
                    "subdenomination": null
                  }
                }
              ],
              "isArray": false
            },
            "isPrefix": true
          }
        },
        {
          "type": "FunctionDefinition",
          "name": "mul",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "int256"
                },
                "name": "a",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "int256"
                },
                "name": "b",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "int256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "int256"
                    },
                    "name": "c",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                    "type": "Identifier",
                    "name": "a"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "b"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "||",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "!=",
                        "left": {
                          "type": "Identifier",
                          "name": "c"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "MIN_INT256"
                        }
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "!=",
                        "left": {
                          "type": "TupleExpression",
                          "components": [
                            {
                              "type": "BinaryOperation",
                              "operator": "&",
                              "left": {
                                "type": "Identifier",
                                "name": "a"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "MIN_INT256"
                              }
                            }
                          ],
                          "isArray": false
                        },
                        "right": {
                          "type": "TupleExpression",
                          "components": [
                            {
                              "type": "BinaryOperation",
                              "operator": "&",
                              "left": {
                                "type": "Identifier",
                                "name": "b"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "MIN_INT256"
                              }
                            }
                          ],
                          "isArray": false
                        }
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "||",
                      "left": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "==",
                            "left": {
                              "type": "Identifier",
                              "name": "b"
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "0",
                              "subdenomination": null
                            }
                          }
                        ],
                        "isArray": false
                      },
                      "right": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "==",
                            "left": {
                              "type": "BinaryOperation",
                              "operator": "/",
                              "left": {
                                "type": "Identifier",
                                "name": "c"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "b"
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "a"
                            }
                          }
                        ],
                        "isArray": false
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "Identifier",
                "name": "c"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "div",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "int256"
                },
                "name": "a",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "int256"
                },
                "name": "b",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "int256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "||",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "!=",
                        "left": {
                          "type": "Identifier",
                          "name": "b"
                        },
                        "right": {
                          "type": "UnaryOperation",
                          "operator": "-",
                          "subExpression": {
                            "type": "NumberLiteral",
                            "number": "1",
                            "subdenomination": null
                          },
                          "isPrefix": true
                        }
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "!=",
                        "left": {
                          "type": "Identifier",
                          "name": "a"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "MIN_INT256"
                        }
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "BinaryOperation",
                "operator": "/",
                "left": {
                  "type": "Identifier",
                  "name": "a"
                },
                "right": {
                  "type": "Identifier",
                  "name": "b"
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "sub",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "int256"
                },
                "name": "a",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "int256"
                },
                "name": "b",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "int256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "int256"
                    },
                    "name": "c",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "-",
                  "left": {
                    "type": "Identifier",
                    "name": "a"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "b"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "||",
                      "left": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "&&",
                            "left": {
                              "type": "BinaryOperation",
                              "operator": ">=",
                              "left": {
                                "type": "Identifier",
                                "name": "b"
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "0",
                                "subdenomination": null
                              }
                            },
                            "right": {
                              "type": "BinaryOperation",
                              "operator": "<=",
                              "left": {
                                "type": "Identifier",
                                "name": "c"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "a"
                              }
                            }
                          }
                        ],
                        "isArray": false
                      },
                      "right": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "&&",
                            "left": {
                              "type": "BinaryOperation",
                              "operator": "<",
                              "left": {
                                "type": "Identifier",
                                "name": "b"
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "0",
                                "subdenomination": null
                              }
                            },
                            "right": {
                              "type": "BinaryOperation",
                              "operator": ">",
                              "left": {
                                "type": "Identifier",
                                "name": "c"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "a"
                              }
                            }
                          }
                        ],
                        "isArray": false
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "Identifier",
                "name": "c"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "add",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "int256"
                },
                "name": "a",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "int256"
                },
                "name": "b",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "int256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "int256"
                    },
                    "name": "c",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "Identifier",
                    "name": "a"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "b"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "||",
                      "left": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "&&",
                            "left": {
                              "type": "BinaryOperation",
                              "operator": ">=",
                              "left": {
                                "type": "Identifier",
                                "name": "b"
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "0",
                                "subdenomination": null
                              }
                            },
                            "right": {
                              "type": "BinaryOperation",
                              "operator": ">=",
                              "left": {
                                "type": "Identifier",
                                "name": "c"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "a"
                              }
                            }
                          }
                        ],
                        "isArray": false
                      },
                      "right": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "&&",
                            "left": {
                              "type": "BinaryOperation",
                              "operator": "<",
                              "left": {
                                "type": "Identifier",
                                "name": "b"
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "0",
                                "subdenomination": null
                              }
                            },
                            "right": {
                              "type": "BinaryOperation",
                              "operator": "<",
                              "left": {
                                "type": "Identifier",
                                "name": "c"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "a"
                              }
                            }
                          }
                        ],
                        "isArray": false
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "Identifier",
                "name": "c"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "abs",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "int256"
                },
                "name": "a",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "int256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "!=",
                      "left": {
                        "type": "Identifier",
                        "name": "a"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "MIN_INT256"
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "Conditional",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "a"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "TrueExpression": {
                  "type": "UnaryOperation",
                  "operator": "-",
                  "subExpression": {
                    "type": "Identifier",
                    "name": "a"
                  },
                  "isPrefix": true
                },
                "FalseExpression": {
                  "type": "Identifier",
                  "name": "a"
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        }
      ],
      "kind": "library"
    },
    {
      "type": "ContractDefinition",
      "name": "UInt256Lib",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MAX_INT256",
              "expression": {
                "type": "UnaryOperation",
                "operator": "~",
                "subExpression": {
                  "type": "TupleExpression",
                  "components": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<<",
                      "left": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "ElementaryTypeName",
                          "name": "uint256"
                        },
                        "arguments": [
                          {
                            "type": "NumberLiteral",
                            "number": "1",
                            "subdenomination": null
                          }
                        ],
                        "names": []
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "255",
                        "subdenomination": null
                      }
                    }
                  ],
                  "isArray": false
                },
                "isPrefix": true
              },
              "visibility": "private",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "UnaryOperation",
            "operator": "~",
            "subExpression": {
              "type": "TupleExpression",
              "components": [
                {
                  "type": "BinaryOperation",
                  "operator": "<<",
                  "left": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "arguments": [
                      {
                        "type": "NumberLiteral",
                        "number": "1",
                        "subdenomination": null
                      }
                    ],
                    "names": []
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "255",
                    "subdenomination": null
                  }
                }
              ],
              "isArray": false
            },
            "isPrefix": true
          }
        },
        {
          "type": "FunctionDefinition",
          "name": "toInt256Safe",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "a",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "int256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<=",
                      "left": {
                        "type": "Identifier",
                        "name": "a"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "MAX_INT256"
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "ElementaryTypeName",
                  "name": "int256"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "a"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        }
      ],
      "kind": "library"
    },
    {
      "type": "ContractDefinition",
      "name": "IERC20",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "totalSupply",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "balanceOf",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "who",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "allowance",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "owner",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "spender",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "transfer",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "to",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "value",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "approve",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "spender",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "value",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "transferFrom",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "from",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "to",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "value",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "EventDefinition",
          "name": "Transfer",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "from",
                "isStateVar": false,
                "isIndexed": true
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "to",
                "isStateVar": false,
                "isIndexed": true
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "value",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "Approval",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "owner",
                "isStateVar": false,
                "isIndexed": true
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "spender",
                "isStateVar": false,
                "isIndexed": true
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "value",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "isAnonymous": false
        }
      ],
      "kind": "interface"
    },
    {
      "type": "ContractDefinition",
      "name": "IOracle",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "getData",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "update",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": [],
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        }
      ],
      "kind": "interface"
    },
    {
      "type": "ContractDefinition",
      "name": "Ownable",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address"
              },
              "name": "_owner",
              "expression": null,
              "visibility": "private",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "EventDefinition",
          "name": "OwnershipRenounced",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "previousOwner",
                "isStateVar": false,
                "isIndexed": true
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "OwnershipTransferred",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "previousOwner",
                "isStateVar": false,
                "isIndexed": true
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "newOwner",
                "isStateVar": false,
                "isIndexed": true
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "FunctionDefinition",
          "name": "constructor",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "_owner"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "msg"
                    },
                    "memberName": "sender"
                  }
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [],
          "isConstructor": true,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "owner",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "Identifier",
                "name": "_owner"
              }
            ]
          },
          "visibility": "public",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "ModifierDefinition",
          "name": "onlyOwner",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "isOwner"
                      },
                      "arguments": [],
                      "names": []
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "Identifier",
                  "name": "_"
                }
              }
            ]
          }
        },
        {
          "type": "FunctionDefinition",
          "name": "isOwner",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "Identifier",
                    "name": "msg"
                  },
                  "memberName": "sender"
                },
                "right": {
                  "type": "Identifier",
                  "name": "_owner"
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "renounceOwnership",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "EmitStatement",
                "eventCall": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "OwnershipRenounced"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_owner"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "_owner"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "address"
                    },
                    "arguments": [
                      {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      }
                    ],
                    "names": []
                  }
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyOwner",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "transferOwnership",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "newOwner",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "_transferOwnership"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "newOwner"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyOwner",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "_transferOwnership",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "newOwner",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "!=",
                      "left": {
                        "type": "Identifier",
                        "name": "newOwner"
                      },
                      "right": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "ElementaryTypeName",
                          "name": "address"
                        },
                        "arguments": [
                          {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        ],
                        "names": []
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "EmitStatement",
                "eventCall": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "OwnershipTransferred"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_owner"
                    },
                    {
                      "type": "Identifier",
                      "name": "newOwner"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "_owner"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "newOwner"
                  }
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        }
      ],
      "kind": "contract"
    },
    {
      "type": "PragmaDirective",
      "name": "solidity",
      "value": ">=0.5.0<0.6.0"
    },
    {
      "type": "ContractDefinition",
      "name": "solcChecker",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "f",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "x",
                "storageLocation": "calldata",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "ProvableI",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address"
              },
              "name": "cbAddress",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "FunctionDefinition",
          "name": "setProofType",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes1"
                },
                "name": "_proofType",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "setCustomGasPrice",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasPrice",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "getPrice",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_dsprice",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "public",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "randomDS_getSessionPubKeyHash",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_sessionKeyHash",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "getPrice",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_dsprice",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "public",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "queryN",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_argN",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "public",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "payable"
        },
        {
          "type": "FunctionDefinition",
          "name": "query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "calldata",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_arg",
                "storageLocation": "calldata",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "payable"
        },
        {
          "type": "FunctionDefinition",
          "name": "query2",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_arg1",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_arg2",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "public",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "payable"
        },
        {
          "type": "FunctionDefinition",
          "name": "query_withGasLimit",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "calldata",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_arg",
                "storageLocation": "calldata",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "payable"
        },
        {
          "type": "FunctionDefinition",
          "name": "queryN_withGasLimit",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "calldata",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_argN",
                "storageLocation": "calldata",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "payable"
        },
        {
          "type": "FunctionDefinition",
          "name": "query2_withGasLimit",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "calldata",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_arg1",
                "storageLocation": "calldata",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_arg2",
                "storageLocation": "calldata",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "payable"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "OracleAddrResolverI",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "getAddress",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "_address",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "public",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "Buffer",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "StructDefinition",
          "name": "buffer",
          "members": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes"
              },
              "name": "buf",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "capacity",
              "storageLocation": null
            }
          ]
        },
        {
          "type": "FunctionDefinition",
          "name": "init",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "buffer"
                },
                "name": "_buf",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_capacity",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "capacity",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "Identifier",
                  "name": "_capacity"
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "!=",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "%",
                    "left": {
                      "type": "Identifier",
                      "name": "capacity"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "32",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "+=",
                        "left": {
                          "type": "Identifier",
                          "name": "capacity"
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": "-",
                          "left": {
                            "type": "NumberLiteral",
                            "number": "32",
                            "subdenomination": null
                          },
                          "right": {
                            "type": "TupleExpression",
                            "components": [
                              {
                                "type": "BinaryOperation",
                                "operator": "%",
                                "left": {
                                  "type": "Identifier",
                                  "name": "capacity"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "32",
                                  "subdenomination": null
                                }
                              }
                            ],
                            "isArray": false
                          }
                        }
                      }
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "_buf"
                    },
                    "memberName": "capacity"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "capacity"
                  }
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "ptr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "HexNumber",
                            "value": "0x40"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "_buf",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "ptr",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "ptr",
                          "arguments": []
                        },
                        {
                          "type": "DecimalNumber",
                          "value": "0"
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "HexNumber",
                          "value": "0x40"
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "ptr",
                              "arguments": []
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "capacity",
                              "arguments": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "resize",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "buffer"
                },
                "name": "_buf",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_capacity",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "oldbuf",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "Identifier",
                    "name": "_buf"
                  },
                  "memberName": "buf"
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "init"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_buf"
                    },
                    {
                      "type": "Identifier",
                      "name": "_capacity"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "append"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_buf"
                    },
                    {
                      "type": "Identifier",
                      "name": "oldbuf"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "private",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "max",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_a",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_b",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_max",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "Identifier",
                    "name": "_a"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "_b"
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "Identifier",
                      "name": "_a"
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "Identifier",
                "name": "_b"
              }
            ]
          },
          "visibility": "private",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "append",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "buffer"
                },
                "name": "_buf",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_data",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "buffer"
                },
                "name": "_buffer",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "_data"
                      },
                      "memberName": "length"
                    },
                    "right": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "_buf"
                        },
                        "memberName": "buf"
                      },
                      "memberName": "length"
                    }
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "_buf"
                    },
                    "memberName": "capacity"
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "resize"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "_buf"
                          },
                          {
                            "type": "BinaryOperation",
                            "operator": "*",
                            "left": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "Identifier",
                                "name": "max"
                              },
                              "arguments": [
                                {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "_buf"
                                  },
                                  "memberName": "capacity"
                                },
                                {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "_data"
                                  },
                                  "memberName": "length"
                                }
                              ],
                              "names": []
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "2",
                              "subdenomination": null
                            }
                          }
                        ],
                        "names": []
                      }
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "dest",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "src",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "len",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "Identifier",
                    "name": "_data"
                  },
                  "memberName": "length"
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "bufptr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "_buf",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "buflen"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "bufptr",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "dest"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "bufptr",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "buflen",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "DecimalNumber",
                            "value": "32"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "bufptr",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "buflen",
                              "arguments": []
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "mload",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "_data",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "src"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "_data",
                            "arguments": []
                          },
                          {
                            "type": "DecimalNumber",
                            "value": "32"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "ForStatement",
                "initExpression": null,
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": ">=",
                  "left": {
                    "type": "Identifier",
                    "name": "len"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "32",
                    "subdenomination": null
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryOperation",
                    "operator": "-=",
                    "left": {
                      "type": "Identifier",
                      "name": "len"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "32",
                      "subdenomination": null
                    }
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "InLineAssemblyStatement",
                      "language": null,
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "dest",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mload",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "src",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "+=",
                        "left": {
                          "type": "Identifier",
                          "name": "dest"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "32",
                          "subdenomination": null
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "+=",
                        "left": {
                          "type": "Identifier",
                          "name": "src"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "32",
                          "subdenomination": null
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "mask",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "-",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "**",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "256",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "TupleExpression",
                      "components": [
                        {
                          "type": "BinaryOperation",
                          "operator": "-",
                          "left": {
                            "type": "NumberLiteral",
                            "number": "32",
                            "subdenomination": null
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "len"
                          }
                        }
                      ],
                      "isArray": false
                    }
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "srcpart"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "and",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mload",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "src",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "not",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mask",
                                "arguments": []
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "destpart"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "and",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mload",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "dest",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mask",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "dest",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "or",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "destpart",
                              "arguments": []
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "srcpart",
                              "arguments": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "_buf"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "append",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "buffer"
                },
                "name": "_buf",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint8"
                },
                "name": "_data",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "_buf"
                        },
                        "memberName": "buf"
                      },
                      "memberName": "length"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "_buf"
                    },
                    "memberName": "capacity"
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "resize"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "_buf"
                          },
                          {
                            "type": "BinaryOperation",
                            "operator": "*",
                            "left": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "_buf"
                              },
                              "memberName": "capacity"
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "2",
                              "subdenomination": null
                            }
                          }
                        ],
                        "names": []
                      }
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "bufptr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "_buf",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "buflen"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "bufptr",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "dest"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "bufptr",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "buflen",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "DecimalNumber",
                            "value": "32"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore8",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "dest",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "_data",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "bufptr",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "buflen",
                              "arguments": []
                            },
                            {
                              "type": "DecimalNumber",
                              "value": "1"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "appendInt",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "buffer"
                },
                "name": "_buf",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_data",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_len",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "buffer"
                },
                "name": "_buffer",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "Identifier",
                      "name": "_len"
                    },
                    "right": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "_buf"
                        },
                        "memberName": "buf"
                      },
                      "memberName": "length"
                    }
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "_buf"
                    },
                    "memberName": "capacity"
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "resize"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "_buf"
                          },
                          {
                            "type": "BinaryOperation",
                            "operator": "*",
                            "left": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "Identifier",
                                "name": "max"
                              },
                              "arguments": [
                                {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "_buf"
                                  },
                                  "memberName": "capacity"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "_len"
                                }
                              ],
                              "names": []
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "2",
                              "subdenomination": null
                            }
                          }
                        ],
                        "names": []
                      }
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "mask",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "-",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "**",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "256",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "_len"
                    }
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "bufptr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "_buf",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "buflen"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "bufptr",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "dest"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "bufptr",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "buflen",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "_len",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "dest",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "or",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "and",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mload",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "dest",
                                      "arguments": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "not",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mask",
                                      "arguments": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "_data",
                              "arguments": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "bufptr",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "buflen",
                              "arguments": []
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "_len",
                              "arguments": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "_buf"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        }
      ],
      "kind": "library"
    },
    {
      "type": "ContractDefinition",
      "name": "CBOR",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "UsingForDeclaration",
          "typeName": {
            "type": "UserDefinedTypeName",
            "namePath": "Buffer.buffer"
          },
          "libraryName": "Buffer"
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint8"
              },
              "name": "MAJOR_TYPE_INT",
              "expression": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
              },
              "visibility": "private",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint8"
              },
              "name": "MAJOR_TYPE_MAP",
              "expression": {
                "type": "NumberLiteral",
                "number": "5",
                "subdenomination": null
              },
              "visibility": "private",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "5",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint8"
              },
              "name": "MAJOR_TYPE_BYTES",
              "expression": {
                "type": "NumberLiteral",
                "number": "2",
                "subdenomination": null
              },
              "visibility": "private",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "2",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint8"
              },
              "name": "MAJOR_TYPE_ARRAY",
              "expression": {
                "type": "NumberLiteral",
                "number": "4",
                "subdenomination": null
              },
              "visibility": "private",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "4",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint8"
              },
              "name": "MAJOR_TYPE_STRING",
              "expression": {
                "type": "NumberLiteral",
                "number": "3",
                "subdenomination": null
              },
              "visibility": "private",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "3",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint8"
              },
              "name": "MAJOR_TYPE_NEGATIVE_INT",
              "expression": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
              },
              "visibility": "private",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint8"
              },
              "name": "MAJOR_TYPE_CONTENT_FREE",
              "expression": {
                "type": "NumberLiteral",
                "number": "7",
                "subdenomination": null
              },
              "visibility": "private",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "7",
            "subdenomination": null
          }
        },
        {
          "type": "FunctionDefinition",
          "name": "encodeType",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "Buffer.buffer"
                },
                "name": "_buf",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint8"
                },
                "name": "_major",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_value",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "<=",
                  "left": {
                    "type": "Identifier",
                    "name": "_value"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "23",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "_buf"
                          },
                          "memberName": "append"
                        },
                        "arguments": [
                          {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "ElementaryTypeName",
                              "name": "uint8"
                            },
                            "arguments": [
                              {
                                "type": "BinaryOperation",
                                "operator": "|",
                                "left": {
                                  "type": "TupleExpression",
                                  "components": [
                                    {
                                      "type": "BinaryOperation",
                                      "operator": "<<",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "_major"
                                      },
                                      "right": {
                                        "type": "NumberLiteral",
                                        "number": "5",
                                        "subdenomination": null
                                      }
                                    }
                                  ],
                                  "isArray": false
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "_value"
                                }
                              }
                            ],
                            "names": []
                          }
                        ],
                        "names": []
                      }
                    }
                  ]
                },
                "FalseBody": {
                  "type": "IfStatement",
                  "condition": {
                    "type": "BinaryOperation",
                    "operator": "<=",
                    "left": {
                      "type": "Identifier",
                      "name": "_value"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "0xFF",
                      "subdenomination": null
                    }
                  },
                  "TrueBody": {
                    "type": "Block",
                    "statements": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "_buf"
                            },
                            "memberName": "append"
                          },
                          "arguments": [
                            {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "ElementaryTypeName",
                                "name": "uint8"
                              },
                              "arguments": [
                                {
                                  "type": "BinaryOperation",
                                  "operator": "|",
                                  "left": {
                                    "type": "TupleExpression",
                                    "components": [
                                      {
                                        "type": "BinaryOperation",
                                        "operator": "<<",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "_major"
                                        },
                                        "right": {
                                          "type": "NumberLiteral",
                                          "number": "5",
                                          "subdenomination": null
                                        }
                                      }
                                    ],
                                    "isArray": false
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "24",
                                    "subdenomination": null
                                  }
                                }
                              ],
                              "names": []
                            }
                          ],
                          "names": []
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "_buf"
                            },
                            "memberName": "appendInt"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "_value"
                            },
                            {
                              "type": "NumberLiteral",
                              "number": "1",
                              "subdenomination": null
                            }
                          ],
                          "names": []
                        }
                      }
                    ]
                  },
                  "FalseBody": {
                    "type": "IfStatement",
                    "condition": {
                      "type": "BinaryOperation",
                      "operator": "<=",
                      "left": {
                        "type": "Identifier",
                        "name": "_value"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "0xFFFF",
                        "subdenomination": null
                      }
                    },
                    "TrueBody": {
                      "type": "Block",
                      "statements": [
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "_buf"
                              },
                              "memberName": "append"
                            },
                            "arguments": [
                              {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "ElementaryTypeName",
                                  "name": "uint8"
                                },
                                "arguments": [
                                  {
                                    "type": "BinaryOperation",
                                    "operator": "|",
                                    "left": {
                                      "type": "TupleExpression",
                                      "components": [
                                        {
                                          "type": "BinaryOperation",
                                          "operator": "<<",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "_major"
                                          },
                                          "right": {
                                            "type": "NumberLiteral",
                                            "number": "5",
                                            "subdenomination": null
                                          }
                                        }
                                      ],
                                      "isArray": false
                                    },
                                    "right": {
                                      "type": "NumberLiteral",
                                      "number": "25",
                                      "subdenomination": null
                                    }
                                  }
                                ],
                                "names": []
                              }
                            ],
                            "names": []
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "_buf"
                              },
                              "memberName": "appendInt"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "_value"
                              },
                              {
                                "type": "NumberLiteral",
                                "number": "2",
                                "subdenomination": null
                              }
                            ],
                            "names": []
                          }
                        }
                      ]
                    },
                    "FalseBody": {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": "<=",
                        "left": {
                          "type": "Identifier",
                          "name": "_value"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0xFFFFFFFF",
                          "subdenomination": null
                        }
                      },
                      "TrueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "_buf"
                                },
                                "memberName": "append"
                              },
                              "arguments": [
                                {
                                  "type": "FunctionCall",
                                  "expression": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                  },
                                  "arguments": [
                                    {
                                      "type": "BinaryOperation",
                                      "operator": "|",
                                      "left": {
                                        "type": "TupleExpression",
                                        "components": [
                                          {
                                            "type": "BinaryOperation",
                                            "operator": "<<",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "_major"
                                            },
                                            "right": {
                                              "type": "NumberLiteral",
                                              "number": "5",
                                              "subdenomination": null
                                            }
                                          }
                                        ],
                                        "isArray": false
                                      },
                                      "right": {
                                        "type": "NumberLiteral",
                                        "number": "26",
                                        "subdenomination": null
                                      }
                                    }
                                  ],
                                  "names": []
                                }
                              ],
                              "names": []
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "_buf"
                                },
                                "memberName": "appendInt"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "_value"
                                },
                                {
                                  "type": "NumberLiteral",
                                  "number": "4",
                                  "subdenomination": null
                                }
                              ],
                              "names": []
                            }
                          }
                        ]
                      },
                      "FalseBody": {
                        "type": "IfStatement",
                        "condition": {
                          "type": "BinaryOperation",
                          "operator": "<=",
                          "left": {
                            "type": "Identifier",
                            "name": "_value"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "0xFFFFFFFFFFFFFFFF",
                            "subdenomination": null
                          }
                        },
                        "TrueBody": {
                          "type": "Block",
                          "statements": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "_buf"
                                  },
                                  "memberName": "append"
                                },
                                "arguments": [
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "ElementaryTypeName",
                                      "name": "uint8"
                                    },
                                    "arguments": [
                                      {
                                        "type": "BinaryOperation",
                                        "operator": "|",
                                        "left": {
                                          "type": "TupleExpression",
                                          "components": [
                                            {
                                              "type": "BinaryOperation",
                                              "operator": "<<",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "_major"
                                              },
                                              "right": {
                                                "type": "NumberLiteral",
                                                "number": "5",
                                                "subdenomination": null
                                              }
                                            }
                                          ],
                                          "isArray": false
                                        },
                                        "right": {
                                          "type": "NumberLiteral",
                                          "number": "27",
                                          "subdenomination": null
                                        }
                                      }
                                    ],
                                    "names": []
                                  }
                                ],
                                "names": []
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "_buf"
                                  },
                                  "memberName": "appendInt"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "_value"
                                  },
                                  {
                                    "type": "NumberLiteral",
                                    "number": "8",
                                    "subdenomination": null
                                  }
                                ],
                                "names": []
                              }
                            }
                          ]
                        },
                        "FalseBody": null
                      }
                    }
                  }
                }
              }
            ]
          },
          "visibility": "private",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "encodeIndefiniteLengthType",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "Buffer.buffer"
                },
                "name": "_buf",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint8"
                },
                "name": "_major",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "_buf"
                    },
                    "memberName": "append"
                  },
                  "arguments": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "ElementaryTypeName",
                        "name": "uint8"
                      },
                      "arguments": [
                        {
                          "type": "BinaryOperation",
                          "operator": "|",
                          "left": {
                            "type": "TupleExpression",
                            "components": [
                              {
                                "type": "BinaryOperation",
                                "operator": "<<",
                                "left": {
                                  "type": "Identifier",
                                  "name": "_major"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "5",
                                  "subdenomination": null
                                }
                              }
                            ],
                            "isArray": false
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "31",
                            "subdenomination": null
                          }
                        }
                      ],
                      "names": []
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "private",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "encodeUInt",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "Buffer.buffer"
                },
                "name": "_buf",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_value",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "encodeType"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_buf"
                    },
                    {
                      "type": "Identifier",
                      "name": "MAJOR_TYPE_INT"
                    },
                    {
                      "type": "Identifier",
                      "name": "_value"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "encodeInt",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "Buffer.buffer"
                },
                "name": "_buf",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "int256"
                },
                "name": "_value",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">=",
                  "left": {
                    "type": "Identifier",
                    "name": "_value"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "encodeType"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "_buf"
                          },
                          {
                            "type": "Identifier",
                            "name": "MAJOR_TYPE_INT"
                          },
                          {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "ElementaryTypeName",
                              "name": "uint256"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "_value"
                              }
                            ],
                            "names": []
                          }
                        ],
                        "names": []
                      }
                    }
                  ]
                },
                "FalseBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "encodeType"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "_buf"
                          },
                          {
                            "type": "Identifier",
                            "name": "MAJOR_TYPE_NEGATIVE_INT"
                          },
                          {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "ElementaryTypeName",
                              "name": "uint256"
                            },
                            "arguments": [
                              {
                                "type": "BinaryOperation",
                                "operator": "-",
                                "left": {
                                  "type": "UnaryOperation",
                                  "operator": "-",
                                  "subExpression": {
                                    "type": "NumberLiteral",
                                    "number": "1",
                                    "subdenomination": null
                                  },
                                  "isPrefix": true
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "_value"
                                }
                              }
                            ],
                            "names": []
                          }
                        ],
                        "names": []
                      }
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "encodeBytes",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "Buffer.buffer"
                },
                "name": "_buf",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_value",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "encodeType"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_buf"
                    },
                    {
                      "type": "Identifier",
                      "name": "MAJOR_TYPE_BYTES"
                    },
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "_value"
                      },
                      "memberName": "length"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "_buf"
                    },
                    "memberName": "append"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_value"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "encodeString",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "Buffer.buffer"
                },
                "name": "_buf",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_value",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "encodeType"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_buf"
                    },
                    {
                      "type": "Identifier",
                      "name": "MAJOR_TYPE_STRING"
                    },
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "ElementaryTypeName",
                          "name": "bytes"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "_value"
                          }
                        ],
                        "names": []
                      },
                      "memberName": "length"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "_buf"
                    },
                    "memberName": "append"
                  },
                  "arguments": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "_value"
                        }
                      ],
                      "names": []
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "startArray",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "Buffer.buffer"
                },
                "name": "_buf",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "encodeIndefiniteLengthType"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_buf"
                    },
                    {
                      "type": "Identifier",
                      "name": "MAJOR_TYPE_ARRAY"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "startMap",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "Buffer.buffer"
                },
                "name": "_buf",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "encodeIndefiniteLengthType"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_buf"
                    },
                    {
                      "type": "Identifier",
                      "name": "MAJOR_TYPE_MAP"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "endSequence",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "Buffer.buffer"
                },
                "name": "_buf",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "encodeIndefiniteLengthType"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_buf"
                    },
                    {
                      "type": "Identifier",
                      "name": "MAJOR_TYPE_CONTENT_FREE"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        }
      ],
      "kind": "library"
    },
    {
      "type": "ContractDefinition",
      "name": "usingProvable",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "UsingForDeclaration",
          "typeName": {
            "type": "UserDefinedTypeName",
            "namePath": "Buffer.buffer"
          },
          "libraryName": "CBOR"
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "ProvableI"
              },
              "name": "provable",
              "expression": null,
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "OracleAddrResolverI"
              },
              "name": "OAR",
              "expression": null,
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "day",
              "expression": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                    "type": "NumberLiteral",
                    "number": "60",
                    "subdenomination": null
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "60",
                    "subdenomination": null
                  }
                },
                "right": {
                  "type": "NumberLiteral",
                  "number": "24",
                  "subdenomination": null
                }
              },
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "BinaryOperation",
            "operator": "*",
            "left": {
              "type": "BinaryOperation",
              "operator": "*",
              "left": {
                "type": "NumberLiteral",
                "number": "60",
                "subdenomination": null
              },
              "right": {
                "type": "NumberLiteral",
                "number": "60",
                "subdenomination": null
              }
            },
            "right": {
              "type": "NumberLiteral",
              "number": "24",
              "subdenomination": null
            }
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "week",
              "expression": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "60",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "60",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "24",
                    "subdenomination": null
                  }
                },
                "right": {
                  "type": "NumberLiteral",
                  "number": "7",
                  "subdenomination": null
                }
              },
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "BinaryOperation",
            "operator": "*",
            "left": {
              "type": "BinaryOperation",
              "operator": "*",
              "left": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                  "type": "NumberLiteral",
                  "number": "60",
                  "subdenomination": null
                },
                "right": {
                  "type": "NumberLiteral",
                  "number": "60",
                  "subdenomination": null
                }
              },
              "right": {
                "type": "NumberLiteral",
                "number": "24",
                "subdenomination": null
              }
            },
            "right": {
              "type": "NumberLiteral",
              "number": "7",
              "subdenomination": null
            }
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "month",
              "expression": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "60",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "60",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "24",
                    "subdenomination": null
                  }
                },
                "right": {
                  "type": "NumberLiteral",
                  "number": "30",
                  "subdenomination": null
                }
              },
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "BinaryOperation",
            "operator": "*",
            "left": {
              "type": "BinaryOperation",
              "operator": "*",
              "left": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                  "type": "NumberLiteral",
                  "number": "60",
                  "subdenomination": null
                },
                "right": {
                  "type": "NumberLiteral",
                  "number": "60",
                  "subdenomination": null
                }
              },
              "right": {
                "type": "NumberLiteral",
                "number": "24",
                "subdenomination": null
              }
            },
            "right": {
              "type": "NumberLiteral",
              "number": "30",
              "subdenomination": null
            }
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes1"
              },
              "name": "proofType_NONE",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x00",
                "subdenomination": null
              },
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x00",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes1"
              },
              "name": "proofType_Ledger",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x30",
                "subdenomination": null
              },
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x30",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes1"
              },
              "name": "proofType_Native",
              "expression": {
                "type": "NumberLiteral",
                "number": "0xF0",
                "subdenomination": null
              },
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0xF0",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes1"
              },
              "name": "proofStorage_IPFS",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x01",
                "subdenomination": null
              },
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x01",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes1"
              },
              "name": "proofType_Android",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x40",
                "subdenomination": null
              },
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x40",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes1"
              },
              "name": "proofType_TLSNotary",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x10",
                "subdenomination": null
              },
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x10",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "string"
              },
              "name": "provable_network_name",
              "expression": null,
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint8"
              },
              "name": "networkID_auto",
              "expression": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
              },
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint8"
              },
              "name": "networkID_morden",
              "expression": {
                "type": "NumberLiteral",
                "number": "2",
                "subdenomination": null
              },
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "2",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint8"
              },
              "name": "networkID_mainnet",
              "expression": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
              },
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint8"
              },
              "name": "networkID_testnet",
              "expression": {
                "type": "NumberLiteral",
                "number": "2",
                "subdenomination": null
              },
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "2",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint8"
              },
              "name": "networkID_consensys",
              "expression": {
                "type": "NumberLiteral",
                "number": "161",
                "subdenomination": null
              },
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "161",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "Mapping",
                "keyType": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "valueType": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                }
              },
              "name": "provable_randomDS_args",
              "expression": null,
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "Mapping",
                "keyType": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "valueType": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                }
              },
              "name": "provable_randomDS_sessionKeysHashVerified",
              "expression": null,
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "ModifierDefinition",
          "name": "provableAPI",
          "parameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "||",
                  "left": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "BinaryOperation",
                        "operator": "==",
                        "left": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "ElementaryTypeName",
                            "name": "address"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "OAR"
                            }
                          ],
                          "names": []
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "ElementaryTypeName",
                            "name": "address"
                          },
                          "arguments": [
                            {
                              "type": "NumberLiteral",
                              "number": "0",
                              "subdenomination": null
                            }
                          ],
                          "names": []
                        }
                      }
                    ],
                    "isArray": false
                  },
                  "right": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "BinaryOperation",
                        "operator": "==",
                        "left": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "getCodeSize"
                          },
                          "arguments": [
                            {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "ElementaryTypeName",
                                "name": "address"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "OAR"
                                }
                              ],
                              "names": []
                            }
                          ],
                          "names": []
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      }
                    ],
                    "isArray": false
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "provable_setNetwork"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "networkID_auto"
                          }
                        ],
                        "names": []
                      }
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "!=",
                  "left": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "address"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "provable"
                      }
                    ],
                    "names": []
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "OAR"
                      },
                      "memberName": "getAddress"
                    },
                    "arguments": [],
                    "names": []
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "provable"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "ProvableI"
                          },
                          "arguments": [
                            {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "OAR"
                                },
                                "memberName": "getAddress"
                              },
                              "arguments": [],
                              "names": []
                            }
                          ],
                          "names": []
                        }
                      }
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "Identifier",
                  "name": "_"
                }
              }
            ]
          }
        },
        {
          "type": "ModifierDefinition",
          "name": "provable_randomDS_proofVerify",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_queryId",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_result",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_proof",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "&&",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "&&",
                        "left": {
                          "type": "TupleExpression",
                          "components": [
                            {
                              "type": "BinaryOperation",
                              "operator": "==",
                              "left": {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "Identifier",
                                  "name": "_proof"
                                },
                                "index": {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                }
                              },
                              "right": {
                                "type": "stringLiteral",
                                "value": "L"
                              }
                            }
                          ],
                          "isArray": false
                        },
                        "right": {
                          "type": "TupleExpression",
                          "components": [
                            {
                              "type": "BinaryOperation",
                              "operator": "==",
                              "left": {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "Identifier",
                                  "name": "_proof"
                                },
                                "index": {
                                  "type": "NumberLiteral",
                                  "number": "1",
                                  "subdenomination": null
                                }
                              },
                              "right": {
                                "type": "stringLiteral",
                                "value": "P"
                              }
                            }
                          ],
                          "isArray": false
                        }
                      },
                      "right": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "==",
                            "left": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "ElementaryTypeName",
                                "name": "uint8"
                              },
                              "arguments": [
                                {
                                  "type": "IndexAccess",
                                  "base": {
                                    "type": "Identifier",
                                    "name": "_proof"
                                  },
                                  "index": {
                                    "type": "NumberLiteral",
                                    "number": "2",
                                    "subdenomination": null
                                  }
                                }
                              ],
                              "names": []
                            },
                            "right": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "ElementaryTypeName",
                                "name": "uint8"
                              },
                              "arguments": [
                                {
                                  "type": "NumberLiteral",
                                  "number": "1",
                                  "subdenomination": null
                                }
                              ],
                              "names": []
                            }
                          }
                        ],
                        "isArray": false
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bool"
                    },
                    "name": "proofVerified",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "provable_randomDS_proofVerify__main"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_proof"
                    },
                    {
                      "type": "Identifier",
                      "name": "_queryId"
                    },
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "_result"
                        }
                      ],
                      "names": []
                    },
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "provable_getNetworkName"
                      },
                      "arguments": [],
                      "names": []
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "proofVerified"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "Identifier",
                  "name": "_"
                }
              }
            ]
          }
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_setNetwork",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint8"
                },
                "name": "_networkID",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": "_networkSet",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "Identifier",
                  "name": "_networkID"
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_setNetwork"
                },
                "arguments": [],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_setNetworkName",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_network_name",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "provable_network_name"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "_network_name"
                  }
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_getNetworkName",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_networkName",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "Identifier",
                "name": "provable_network_name"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_setNetwork",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": "_networkSet",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "getCodeSize"
                    },
                    "arguments": [
                      {
                        "type": "NumberLiteral",
                        "number": "0x1d3B2638a7cC9f2CB3D298A3DA7a90B67E5506ed",
                        "subdenomination": null
                      }
                    ],
                    "names": []
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "OAR"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "OracleAddrResolverI"
                          },
                          "arguments": [
                            {
                              "type": "NumberLiteral",
                              "number": "0x1d3B2638a7cC9f2CB3D298A3DA7a90B67E5506ed",
                              "subdenomination": null
                            }
                          ],
                          "names": []
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "provable_setNetworkName"
                        },
                        "arguments": [
                          {
                            "type": "stringLiteral",
                            "value": "eth_mainnet"
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "BooleanLiteral",
                      "value": true
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "getCodeSize"
                    },
                    "arguments": [
                      {
                        "type": "NumberLiteral",
                        "number": "0xc03A2615D5efaf5F49F60B7BB6583eaec212fdf1",
                        "subdenomination": null
                      }
                    ],
                    "names": []
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "OAR"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "OracleAddrResolverI"
                          },
                          "arguments": [
                            {
                              "type": "NumberLiteral",
                              "number": "0xc03A2615D5efaf5F49F60B7BB6583eaec212fdf1",
                              "subdenomination": null
                            }
                          ],
                          "names": []
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "provable_setNetworkName"
                        },
                        "arguments": [
                          {
                            "type": "stringLiteral",
                            "value": "eth_ropsten3"
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "BooleanLiteral",
                      "value": true
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "getCodeSize"
                    },
                    "arguments": [
                      {
                        "type": "NumberLiteral",
                        "number": "0xB7A07BcF2Ba2f2703b24C0691b5278999C59AC7e",
                        "subdenomination": null
                      }
                    ],
                    "names": []
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "OAR"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "OracleAddrResolverI"
                          },
                          "arguments": [
                            {
                              "type": "NumberLiteral",
                              "number": "0xB7A07BcF2Ba2f2703b24C0691b5278999C59AC7e",
                              "subdenomination": null
                            }
                          ],
                          "names": []
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "provable_setNetworkName"
                        },
                        "arguments": [
                          {
                            "type": "stringLiteral",
                            "value": "eth_kovan"
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "BooleanLiteral",
                      "value": true
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "getCodeSize"
                    },
                    "arguments": [
                      {
                        "type": "NumberLiteral",
                        "number": "0x146500cfd35B22E4A392Fe0aDc06De1a1368Ed48",
                        "subdenomination": null
                      }
                    ],
                    "names": []
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "OAR"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "OracleAddrResolverI"
                          },
                          "arguments": [
                            {
                              "type": "NumberLiteral",
                              "number": "0x146500cfd35B22E4A392Fe0aDc06De1a1368Ed48",
                              "subdenomination": null
                            }
                          ],
                          "names": []
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "provable_setNetworkName"
                        },
                        "arguments": [
                          {
                            "type": "stringLiteral",
                            "value": "eth_rinkeby"
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "BooleanLiteral",
                      "value": true
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "getCodeSize"
                    },
                    "arguments": [
                      {
                        "type": "NumberLiteral",
                        "number": "0xa2998EFD205FB9D4B4963aFb70778D6354ad3A41",
                        "subdenomination": null
                      }
                    ],
                    "names": []
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "OAR"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "OracleAddrResolverI"
                          },
                          "arguments": [
                            {
                              "type": "NumberLiteral",
                              "number": "0xa2998EFD205FB9D4B4963aFb70778D6354ad3A41",
                              "subdenomination": null
                            }
                          ],
                          "names": []
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "provable_setNetworkName"
                        },
                        "arguments": [
                          {
                            "type": "stringLiteral",
                            "value": "eth_goerli"
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "BooleanLiteral",
                      "value": true
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "getCodeSize"
                    },
                    "arguments": [
                      {
                        "type": "NumberLiteral",
                        "number": "0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475",
                        "subdenomination": null
                      }
                    ],
                    "names": []
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "OAR"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "OracleAddrResolverI"
                          },
                          "arguments": [
                            {
                              "type": "NumberLiteral",
                              "number": "0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475",
                              "subdenomination": null
                            }
                          ],
                          "names": []
                        }
                      }
                    },
                    {
                      "type": "BooleanLiteral",
                      "value": true
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "getCodeSize"
                    },
                    "arguments": [
                      {
                        "type": "NumberLiteral",
                        "number": "0x20e12A1F859B3FeaE5Fb2A0A32C18F5a65555bBF",
                        "subdenomination": null
                      }
                    ],
                    "names": []
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "OAR"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "OracleAddrResolverI"
                          },
                          "arguments": [
                            {
                              "type": "NumberLiteral",
                              "number": "0x20e12A1F859B3FeaE5Fb2A0A32C18F5a65555bBF",
                              "subdenomination": null
                            }
                          ],
                          "names": []
                        }
                      }
                    },
                    {
                      "type": "BooleanLiteral",
                      "value": true
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "getCodeSize"
                    },
                    "arguments": [
                      {
                        "type": "NumberLiteral",
                        "number": "0x51efaF4c8B3C9AfBD5aB9F4bbC82784Ab6ef8fAA",
                        "subdenomination": null
                      }
                    ],
                    "names": []
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "OAR"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "OracleAddrResolverI"
                          },
                          "arguments": [
                            {
                              "type": "NumberLiteral",
                              "number": "0x51efaF4c8B3C9AfBD5aB9F4bbC82784Ab6ef8fAA",
                              "subdenomination": null
                            }
                          ],
                          "names": []
                        }
                      }
                    },
                    {
                      "type": "BooleanLiteral",
                      "value": true
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "BooleanLiteral",
                "value": false
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "__callback",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_myid",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_result",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "__callback"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_myid"
                    },
                    {
                      "type": "Identifier",
                      "name": "_result"
                    },
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "NewExpression",
                        "typeName": {
                          "type": "ElementaryTypeName",
                          "name": "bytes"
                        }
                      },
                      "arguments": [
                        {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      ],
                      "names": []
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "__callback",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_myid",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_result",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_proof",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "Identifier",
                  "name": "_myid"
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "Identifier",
                  "name": "_result"
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "Identifier",
                  "name": "_proof"
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "provable_randomDS_args"
                    },
                    "index": {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "ElementaryTypeName",
                        "name": "bytes32"
                      },
                      "arguments": [
                        {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      ],
                      "names": []
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "bytes32"
                    },
                    "arguments": [
                      {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      }
                    ],
                    "names": []
                  }
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_getPrice",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_queryPrice",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "Identifier",
                    "name": "provable"
                  },
                  "memberName": "getPrice"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_getPrice",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_queryPrice",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "Identifier",
                    "name": "provable"
                  },
                  "memberName": "getPrice"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "_gasLimit"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_arg",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "price",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "provable"
                    },
                    "memberName": "getPrice"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_datasource"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "Identifier",
                    "name": "price"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": "ether"
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "*",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "tx"
                        },
                        "memberName": "gasprice"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "200000",
                        "subdenomination": null
                      }
                    }
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "provable"
                      },
                      "memberName": "query"
                    },
                    "memberName": "value"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "price"
                    }
                  ],
                  "names": []
                },
                "arguments": [
                  {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "_arg"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_arg",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "price",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "provable"
                    },
                    "memberName": "getPrice"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_datasource"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "Identifier",
                    "name": "price"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": "ether"
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "*",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "tx"
                        },
                        "memberName": "gasprice"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "200000",
                        "subdenomination": null
                      }
                    }
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "provable"
                      },
                      "memberName": "query"
                    },
                    "memberName": "value"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "price"
                    }
                  ],
                  "names": []
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_timestamp"
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "_arg"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_arg",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "price",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "provable"
                    },
                    "memberName": "getPrice"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_datasource"
                    },
                    {
                      "type": "Identifier",
                      "name": "_gasLimit"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "Identifier",
                    "name": "price"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": "ether"
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "*",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "tx"
                        },
                        "memberName": "gasprice"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "_gasLimit"
                      }
                    }
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "provable"
                      },
                      "memberName": "query_withGasLimit"
                    },
                    "memberName": "value"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "price"
                    }
                  ],
                  "names": []
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_timestamp"
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "_arg"
                  },
                  {
                    "type": "Identifier",
                    "name": "_gasLimit"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_arg",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "price",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "provable"
                    },
                    "memberName": "getPrice"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_datasource"
                    },
                    {
                      "type": "Identifier",
                      "name": "_gasLimit"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "Identifier",
                    "name": "price"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": "ether"
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "*",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "tx"
                        },
                        "memberName": "gasprice"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "_gasLimit"
                      }
                    }
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "provable"
                      },
                      "memberName": "query_withGasLimit"
                    },
                    "memberName": "value"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "price"
                    }
                  ],
                  "names": []
                },
                "arguments": [
                  {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "_arg"
                  },
                  {
                    "type": "Identifier",
                    "name": "_gasLimit"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_arg1",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_arg2",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "price",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "provable"
                    },
                    "memberName": "getPrice"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_datasource"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "Identifier",
                    "name": "price"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": "ether"
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "*",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "tx"
                        },
                        "memberName": "gasprice"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "200000",
                        "subdenomination": null
                      }
                    }
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "provable"
                      },
                      "memberName": "query2"
                    },
                    "memberName": "value"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "price"
                    }
                  ],
                  "names": []
                },
                "arguments": [
                  {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "_arg1"
                  },
                  {
                    "type": "Identifier",
                    "name": "_arg2"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_arg1",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_arg2",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "price",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "provable"
                    },
                    "memberName": "getPrice"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_datasource"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "Identifier",
                    "name": "price"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": "ether"
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "*",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "tx"
                        },
                        "memberName": "gasprice"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "200000",
                        "subdenomination": null
                      }
                    }
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "provable"
                      },
                      "memberName": "query2"
                    },
                    "memberName": "value"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "price"
                    }
                  ],
                  "names": []
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_timestamp"
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "_arg1"
                  },
                  {
                    "type": "Identifier",
                    "name": "_arg2"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_arg1",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_arg2",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "price",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "provable"
                    },
                    "memberName": "getPrice"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_datasource"
                    },
                    {
                      "type": "Identifier",
                      "name": "_gasLimit"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "Identifier",
                    "name": "price"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": "ether"
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "*",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "tx"
                        },
                        "memberName": "gasprice"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "_gasLimit"
                      }
                    }
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "provable"
                      },
                      "memberName": "query2_withGasLimit"
                    },
                    "memberName": "value"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "price"
                    }
                  ],
                  "names": []
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_timestamp"
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "_arg1"
                  },
                  {
                    "type": "Identifier",
                    "name": "_arg2"
                  },
                  {
                    "type": "Identifier",
                    "name": "_gasLimit"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_arg1",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_arg2",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "price",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "provable"
                    },
                    "memberName": "getPrice"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_datasource"
                    },
                    {
                      "type": "Identifier",
                      "name": "_gasLimit"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "Identifier",
                    "name": "price"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": "ether"
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "*",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "tx"
                        },
                        "memberName": "gasprice"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "_gasLimit"
                      }
                    }
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "provable"
                      },
                      "memberName": "query2_withGasLimit"
                    },
                    "memberName": "value"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "price"
                    }
                  ],
                  "names": []
                },
                "arguments": [
                  {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "_arg1"
                  },
                  {
                    "type": "Identifier",
                    "name": "_arg2"
                  },
                  {
                    "type": "Identifier",
                    "name": "_gasLimit"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "string"
                  },
                  "length": null
                },
                "name": "_argN",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "price",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "provable"
                    },
                    "memberName": "getPrice"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_datasource"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "Identifier",
                    "name": "price"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": "ether"
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "*",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "tx"
                        },
                        "memberName": "gasprice"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "200000",
                        "subdenomination": null
                      }
                    }
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "args",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "stra2cbor"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_argN"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "provable"
                      },
                      "memberName": "queryN"
                    },
                    "memberName": "value"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "price"
                    }
                  ],
                  "names": []
                },
                "arguments": [
                  {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "args"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "string"
                  },
                  "length": null
                },
                "name": "_argN",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "price",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "provable"
                    },
                    "memberName": "getPrice"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_datasource"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "Identifier",
                    "name": "price"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": "ether"
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "*",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "tx"
                        },
                        "memberName": "gasprice"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "200000",
                        "subdenomination": null
                      }
                    }
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "args",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "stra2cbor"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_argN"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "provable"
                      },
                      "memberName": "queryN"
                    },
                    "memberName": "value"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "price"
                    }
                  ],
                  "names": []
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_timestamp"
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "args"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "string"
                  },
                  "length": null
                },
                "name": "_argN",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "price",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "provable"
                    },
                    "memberName": "getPrice"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_datasource"
                    },
                    {
                      "type": "Identifier",
                      "name": "_gasLimit"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "Identifier",
                    "name": "price"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": "ether"
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "*",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "tx"
                        },
                        "memberName": "gasprice"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "_gasLimit"
                      }
                    }
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "args",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "stra2cbor"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_argN"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "provable"
                      },
                      "memberName": "queryN_withGasLimit"
                    },
                    "memberName": "value"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "price"
                    }
                  ],
                  "names": []
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_timestamp"
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "args"
                  },
                  {
                    "type": "Identifier",
                    "name": "_gasLimit"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "string"
                  },
                  "length": null
                },
                "name": "_argN",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "price",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "provable"
                    },
                    "memberName": "getPrice"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_datasource"
                    },
                    {
                      "type": "Identifier",
                      "name": "_gasLimit"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "Identifier",
                    "name": "price"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": "ether"
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "*",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "tx"
                        },
                        "memberName": "gasprice"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "_gasLimit"
                      }
                    }
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "args",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "stra2cbor"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_argN"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "provable"
                      },
                      "memberName": "queryN_withGasLimit"
                    },
                    "memberName": "value"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "price"
                    }
                  ],
                  "names": []
                },
                "arguments": [
                  {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "args"
                  },
                  {
                    "type": "Identifier",
                    "name": "_gasLimit"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "string"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "string"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_timestamp"
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "string"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_timestamp"
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  },
                  {
                    "type": "Identifier",
                    "name": "_gasLimit"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "string"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  },
                  {
                    "type": "Identifier",
                    "name": "_gasLimit"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "string"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "2",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "string"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "2",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_timestamp"
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "string"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "2",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_timestamp"
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  },
                  {
                    "type": "Identifier",
                    "name": "_gasLimit"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "string"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "2",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  },
                  {
                    "type": "Identifier",
                    "name": "_gasLimit"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "string"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "3",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "string"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "3",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_timestamp"
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "string"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "3",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_timestamp"
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  },
                  {
                    "type": "Identifier",
                    "name": "_gasLimit"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "string"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "3",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  },
                  {
                    "type": "Identifier",
                    "name": "_gasLimit"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "string"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "4",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "string"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "4",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_timestamp"
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "string"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "4",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_timestamp"
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  },
                  {
                    "type": "Identifier",
                    "name": "_gasLimit"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "string"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "4",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  },
                  {
                    "type": "Identifier",
                    "name": "_gasLimit"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "string"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "5",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "5",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "4",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "4",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "string"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "5",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "5",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "4",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "4",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_timestamp"
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "string"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "5",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "5",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "4",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "4",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_timestamp"
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  },
                  {
                    "type": "Identifier",
                    "name": "_gasLimit"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "string"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "5",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "string"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "5",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "4",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "4",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  },
                  {
                    "type": "Identifier",
                    "name": "_gasLimit"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "length": null
                },
                "name": "_argN",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "price",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "provable"
                    },
                    "memberName": "getPrice"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_datasource"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "Identifier",
                    "name": "price"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": "ether"
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "*",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "tx"
                        },
                        "memberName": "gasprice"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "200000",
                        "subdenomination": null
                      }
                    }
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "args",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "ba2cbor"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_argN"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "provable"
                      },
                      "memberName": "queryN"
                    },
                    "memberName": "value"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "price"
                    }
                  ],
                  "names": []
                },
                "arguments": [
                  {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "args"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "length": null
                },
                "name": "_argN",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "price",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "provable"
                    },
                    "memberName": "getPrice"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_datasource"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "Identifier",
                    "name": "price"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": "ether"
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "*",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "tx"
                        },
                        "memberName": "gasprice"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "200000",
                        "subdenomination": null
                      }
                    }
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "args",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "ba2cbor"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_argN"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "provable"
                      },
                      "memberName": "queryN"
                    },
                    "memberName": "value"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "price"
                    }
                  ],
                  "names": []
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_timestamp"
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "args"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "length": null
                },
                "name": "_argN",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "price",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "provable"
                    },
                    "memberName": "getPrice"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_datasource"
                    },
                    {
                      "type": "Identifier",
                      "name": "_gasLimit"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "Identifier",
                    "name": "price"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": "ether"
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "*",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "tx"
                        },
                        "memberName": "gasprice"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "_gasLimit"
                      }
                    }
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "args",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "ba2cbor"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_argN"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "provable"
                      },
                      "memberName": "queryN_withGasLimit"
                    },
                    "memberName": "value"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "price"
                    }
                  ],
                  "names": []
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_timestamp"
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "args"
                  },
                  {
                    "type": "Identifier",
                    "name": "_gasLimit"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "length": null
                },
                "name": "_argN",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "price",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "provable"
                    },
                    "memberName": "getPrice"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_datasource"
                    },
                    {
                      "type": "Identifier",
                      "name": "_gasLimit"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "Identifier",
                    "name": "price"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": "ether"
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "*",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "tx"
                        },
                        "memberName": "gasprice"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "_gasLimit"
                      }
                    }
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "args",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "ba2cbor"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_argN"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "provable"
                      },
                      "memberName": "queryN_withGasLimit"
                    },
                    "memberName": "value"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "price"
                    }
                  ],
                  "names": []
                },
                "arguments": [
                  {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "args"
                  },
                  {
                    "type": "Identifier",
                    "name": "_gasLimit"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_timestamp"
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_timestamp"
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  },
                  {
                    "type": "Identifier",
                    "name": "_gasLimit"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  },
                  {
                    "type": "Identifier",
                    "name": "_gasLimit"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "2",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "2",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_timestamp"
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "2",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_timestamp"
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  },
                  {
                    "type": "Identifier",
                    "name": "_gasLimit"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "2",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  },
                  {
                    "type": "Identifier",
                    "name": "_gasLimit"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "3",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "3",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_timestamp"
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "3",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_timestamp"
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  },
                  {
                    "type": "Identifier",
                    "name": "_gasLimit"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "3",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  },
                  {
                    "type": "Identifier",
                    "name": "_gasLimit"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "4",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "4",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_timestamp"
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "4",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_timestamp"
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  },
                  {
                    "type": "Identifier",
                    "name": "_gasLimit"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "4",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  },
                  {
                    "type": "Identifier",
                    "name": "_gasLimit"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "5",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "5",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "4",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "4",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "5",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "5",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "4",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "4",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_timestamp"
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "5",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "5",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "4",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "4",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_timestamp"
                  },
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  },
                  {
                    "type": "Identifier",
                    "name": "_gasLimit"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_query",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_datasource",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "5",
                    "subdenomination": null
                  }
                },
                "name": "_args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_id",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    },
                    "name": "dynargs",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "5",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "dynargs"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "4",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "_args"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "4",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "provable_query"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_datasource"
                  },
                  {
                    "type": "Identifier",
                    "name": "dynargs"
                  },
                  {
                    "type": "Identifier",
                    "name": "_gasLimit"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_setProof",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes1"
                },
                "name": "_proofP",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "Identifier",
                    "name": "provable"
                  },
                  "memberName": "setProofType"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_proofP"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_cbAddress",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "_callbackAddress",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "Identifier",
                    "name": "provable"
                  },
                  "memberName": "cbAddress"
                },
                "arguments": [],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "getCodeSize",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "_addr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_size",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "_size"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "extcodesize",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "_addr",
                            "arguments": []
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_setCustomGasPrice",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_gasPrice",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "Identifier",
                    "name": "provable"
                  },
                  "memberName": "setCustomGasPrice"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_gasPrice"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_randomDS_getSessionPubKeyHash",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_sessionKeyHash",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "Identifier",
                    "name": "provable"
                  },
                  "memberName": "randomDS_getSessionPubKeyHash"
                },
                "arguments": [],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "provableAPI",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "parseAddr",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_a",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "_parsedAddress",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "tmp",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_a"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint160"
                    },
                    "name": "iaddr",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint160"
                    },
                    "name": "b1",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint160"
                    },
                    "name": "b2",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "2",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "*",
                      "left": {
                        "type": "NumberLiteral",
                        "number": "2",
                        "subdenomination": null
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "20",
                        "subdenomination": null
                      }
                    }
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryOperation",
                    "operator": "+=",
                    "left": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "*=",
                        "left": {
                          "type": "Identifier",
                          "name": "iaddr"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "256",
                          "subdenomination": null
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "b1"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "ElementaryTypeName",
                            "name": "uint160"
                          },
                          "arguments": [
                            {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "ElementaryTypeName",
                                "name": "uint8"
                              },
                              "arguments": [
                                {
                                  "type": "IndexAccess",
                                  "base": {
                                    "type": "Identifier",
                                    "name": "tmp"
                                  },
                                  "index": {
                                    "type": "Identifier",
                                    "name": "i"
                                  }
                                }
                              ],
                              "names": []
                            }
                          ],
                          "names": []
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "b2"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "ElementaryTypeName",
                            "name": "uint160"
                          },
                          "arguments": [
                            {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "ElementaryTypeName",
                                "name": "uint8"
                              },
                              "arguments": [
                                {
                                  "type": "IndexAccess",
                                  "base": {
                                    "type": "Identifier",
                                    "name": "tmp"
                                  },
                                  "index": {
                                    "type": "BinaryOperation",
                                    "operator": "+",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "i"
                                    },
                                    "right": {
                                      "type": "NumberLiteral",
                                      "number": "1",
                                      "subdenomination": null
                                    }
                                  }
                                }
                              ],
                              "names": []
                            }
                          ],
                          "names": []
                        }
                      }
                    },
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": "&&",
                        "left": {
                          "type": "TupleExpression",
                          "components": [
                            {
                              "type": "BinaryOperation",
                              "operator": ">=",
                              "left": {
                                "type": "Identifier",
                                "name": "b1"
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "97",
                                "subdenomination": null
                              }
                            }
                          ],
                          "isArray": false
                        },
                        "right": {
                          "type": "TupleExpression",
                          "components": [
                            {
                              "type": "BinaryOperation",
                              "operator": "<=",
                              "left": {
                                "type": "Identifier",
                                "name": "b1"
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "102",
                                "subdenomination": null
                              }
                            }
                          ],
                          "isArray": false
                        }
                      },
                      "TrueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "-=",
                              "left": {
                                "type": "Identifier",
                                "name": "b1"
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "87",
                                "subdenomination": null
                              }
                            }
                          }
                        ]
                      },
                      "FalseBody": {
                        "type": "IfStatement",
                        "condition": {
                          "type": "BinaryOperation",
                          "operator": "&&",
                          "left": {
                            "type": "TupleExpression",
                            "components": [
                              {
                                "type": "BinaryOperation",
                                "operator": ">=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "b1"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "65",
                                  "subdenomination": null
                                }
                              }
                            ],
                            "isArray": false
                          },
                          "right": {
                            "type": "TupleExpression",
                            "components": [
                              {
                                "type": "BinaryOperation",
                                "operator": "<=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "b1"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "70",
                                  "subdenomination": null
                                }
                              }
                            ],
                            "isArray": false
                          }
                        },
                        "TrueBody": {
                          "type": "Block",
                          "statements": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "BinaryOperation",
                                "operator": "-=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "b1"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "55",
                                  "subdenomination": null
                                }
                              }
                            }
                          ]
                        },
                        "FalseBody": {
                          "type": "IfStatement",
                          "condition": {
                            "type": "BinaryOperation",
                            "operator": "&&",
                            "left": {
                              "type": "TupleExpression",
                              "components": [
                                {
                                  "type": "BinaryOperation",
                                  "operator": ">=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "b1"
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "48",
                                    "subdenomination": null
                                  }
                                }
                              ],
                              "isArray": false
                            },
                            "right": {
                              "type": "TupleExpression",
                              "components": [
                                {
                                  "type": "BinaryOperation",
                                  "operator": "<=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "b1"
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "57",
                                    "subdenomination": null
                                  }
                                }
                              ],
                              "isArray": false
                            }
                          },
                          "TrueBody": {
                            "type": "Block",
                            "statements": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "BinaryOperation",
                                  "operator": "-=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "b1"
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "48",
                                    "subdenomination": null
                                  }
                                }
                              }
                            ]
                          },
                          "FalseBody": null
                        }
                      }
                    },
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": "&&",
                        "left": {
                          "type": "TupleExpression",
                          "components": [
                            {
                              "type": "BinaryOperation",
                              "operator": ">=",
                              "left": {
                                "type": "Identifier",
                                "name": "b2"
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "97",
                                "subdenomination": null
                              }
                            }
                          ],
                          "isArray": false
                        },
                        "right": {
                          "type": "TupleExpression",
                          "components": [
                            {
                              "type": "BinaryOperation",
                              "operator": "<=",
                              "left": {
                                "type": "Identifier",
                                "name": "b2"
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "102",
                                "subdenomination": null
                              }
                            }
                          ],
                          "isArray": false
                        }
                      },
                      "TrueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "-=",
                              "left": {
                                "type": "Identifier",
                                "name": "b2"
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "87",
                                "subdenomination": null
                              }
                            }
                          }
                        ]
                      },
                      "FalseBody": {
                        "type": "IfStatement",
                        "condition": {
                          "type": "BinaryOperation",
                          "operator": "&&",
                          "left": {
                            "type": "TupleExpression",
                            "components": [
                              {
                                "type": "BinaryOperation",
                                "operator": ">=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "b2"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "65",
                                  "subdenomination": null
                                }
                              }
                            ],
                            "isArray": false
                          },
                          "right": {
                            "type": "TupleExpression",
                            "components": [
                              {
                                "type": "BinaryOperation",
                                "operator": "<=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "b2"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "70",
                                  "subdenomination": null
                                }
                              }
                            ],
                            "isArray": false
                          }
                        },
                        "TrueBody": {
                          "type": "Block",
                          "statements": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "BinaryOperation",
                                "operator": "-=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "b2"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "55",
                                  "subdenomination": null
                                }
                              }
                            }
                          ]
                        },
                        "FalseBody": {
                          "type": "IfStatement",
                          "condition": {
                            "type": "BinaryOperation",
                            "operator": "&&",
                            "left": {
                              "type": "TupleExpression",
                              "components": [
                                {
                                  "type": "BinaryOperation",
                                  "operator": ">=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "b2"
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "48",
                                    "subdenomination": null
                                  }
                                }
                              ],
                              "isArray": false
                            },
                            "right": {
                              "type": "TupleExpression",
                              "components": [
                                {
                                  "type": "BinaryOperation",
                                  "operator": "<=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "b2"
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "57",
                                    "subdenomination": null
                                  }
                                }
                              ],
                              "isArray": false
                            }
                          },
                          "TrueBody": {
                            "type": "Block",
                            "statements": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "BinaryOperation",
                                  "operator": "-=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "b2"
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "48",
                                    "subdenomination": null
                                  }
                                }
                              }
                            ]
                          },
                          "FalseBody": null
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "+=",
                        "left": {
                          "type": "Identifier",
                          "name": "iaddr"
                        },
                        "right": {
                          "type": "TupleExpression",
                          "components": [
                            {
                              "type": "BinaryOperation",
                              "operator": "+",
                              "left": {
                                "type": "BinaryOperation",
                                "operator": "*",
                                "left": {
                                  "type": "Identifier",
                                  "name": "b1"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "16",
                                  "subdenomination": null
                                }
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "b2"
                              }
                            }
                          ],
                          "isArray": false
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "iaddr"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "strCompare",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_a",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_b",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "int256"
                },
                "name": "_returnCode",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "a",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_a"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "b",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_b"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "minLength",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "Identifier",
                    "name": "a"
                  },
                  "memberName": "length"
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "b"
                    },
                    "memberName": "length"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "minLength"
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "minLength"
                        },
                        "right": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "b"
                          },
                          "memberName": "length"
                        }
                      }
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "minLength"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": "<",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "a"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "i"
                          }
                        },
                        "right": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "b"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "i"
                          }
                        }
                      },
                      "TrueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "UnaryOperation",
                            "operator": "-",
                            "subExpression": {
                              "type": "NumberLiteral",
                              "number": "1",
                              "subdenomination": null
                            },
                            "isPrefix": true
                          }
                        ]
                      },
                      "FalseBody": {
                        "type": "IfStatement",
                        "condition": {
                          "type": "BinaryOperation",
                          "operator": ">",
                          "left": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "a"
                            },
                            "index": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          },
                          "right": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "b"
                            },
                            "index": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          }
                        },
                        "TrueBody": {
                          "type": "Block",
                          "statements": [
                            {
                              "type": "NumberLiteral",
                              "number": "1",
                              "subdenomination": null
                            }
                          ]
                        },
                        "FalseBody": null
                      }
                    }
                  ]
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "a"
                    },
                    "memberName": "length"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "b"
                    },
                    "memberName": "length"
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "UnaryOperation",
                      "operator": "-",
                      "subExpression": {
                        "type": "NumberLiteral",
                        "number": "1",
                        "subdenomination": null
                      },
                      "isPrefix": true
                    }
                  ]
                },
                "FalseBody": {
                  "type": "IfStatement",
                  "condition": {
                    "type": "BinaryOperation",
                    "operator": ">",
                    "left": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "a"
                      },
                      "memberName": "length"
                    },
                    "right": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "b"
                      },
                      "memberName": "length"
                    }
                  },
                  "TrueBody": {
                    "type": "Block",
                    "statements": [
                      {
                        "type": "NumberLiteral",
                        "number": "1",
                        "subdenomination": null
                      }
                    ]
                  },
                  "FalseBody": {
                    "type": "Block",
                    "statements": [
                      {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      }
                    ]
                  }
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "indexOf",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_haystack",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_needle",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "int256"
                },
                "name": "_returnCode",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "h",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_haystack"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "n",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_needle"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "||",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "||",
                    "left": {
                      "type": "BinaryOperation",
                      "operator": "<",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "h"
                        },
                        "memberName": "length"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "1",
                        "subdenomination": null
                      }
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "<",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "n"
                        },
                        "memberName": "length"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "1",
                        "subdenomination": null
                      }
                    }
                  },
                  "right": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "BinaryOperation",
                        "operator": ">",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "n"
                          },
                          "memberName": "length"
                        },
                        "right": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "h"
                          },
                          "memberName": "length"
                        }
                      }
                    ],
                    "isArray": false
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "UnaryOperation",
                      "operator": "-",
                      "subExpression": {
                        "type": "NumberLiteral",
                        "number": "1",
                        "subdenomination": null
                      },
                      "isPrefix": true
                    }
                  ]
                },
                "FalseBody": {
                  "type": "IfStatement",
                  "condition": {
                    "type": "BinaryOperation",
                    "operator": ">",
                    "left": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "h"
                      },
                      "memberName": "length"
                    },
                    "right": {
                      "type": "TupleExpression",
                      "components": [
                        {
                          "type": "BinaryOperation",
                          "operator": "-",
                          "left": {
                            "type": "BinaryOperation",
                            "operator": "**",
                            "left": {
                              "type": "NumberLiteral",
                              "number": "2",
                              "subdenomination": null
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "128",
                              "subdenomination": null
                            }
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "1",
                            "subdenomination": null
                          }
                        }
                      ],
                      "isArray": false
                    }
                  },
                  "TrueBody": {
                    "type": "Block",
                    "statements": [
                      {
                        "type": "UnaryOperation",
                        "operator": "-",
                        "subExpression": {
                          "type": "NumberLiteral",
                          "number": "1",
                          "subdenomination": null
                        },
                        "isPrefix": true
                      }
                    ]
                  },
                  "FalseBody": {
                    "type": "Block",
                    "statements": [
                      {
                        "type": "VariableDeclarationStatement",
                        "variables": [
                          {
                            "type": "VariableDeclaration",
                            "typeName": {
                              "type": "ElementaryTypeName",
                              "name": "uint256"
                            },
                            "name": "subindex",
                            "storageLocation": null
                          }
                        ],
                        "initialValue": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      },
                      {
                        "type": "ForStatement",
                        "initExpression": {
                          "type": "VariableDeclarationStatement",
                          "variables": [
                            {
                              "type": "VariableDeclaration",
                              "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                              },
                              "name": "i",
                              "storageLocation": null
                            }
                          ],
                          "initialValue": {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        },
                        "conditionExpression": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                            "type": "Identifier",
                            "name": "i"
                          },
                          "right": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "h"
                            },
                            "memberName": "length"
                          }
                        },
                        "loopExpression": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "UnaryOperation",
                            "operator": "++",
                            "subExpression": {
                              "type": "Identifier",
                              "name": "i"
                            },
                            "isPrefix": false
                          }
                        },
                        "body": {
                          "type": "Block",
                          "statements": [
                            {
                              "type": "IfStatement",
                              "condition": {
                                "type": "BinaryOperation",
                                "operator": "==",
                                "left": {
                                  "type": "IndexAccess",
                                  "base": {
                                    "type": "Identifier",
                                    "name": "h"
                                  },
                                  "index": {
                                    "type": "Identifier",
                                    "name": "i"
                                  }
                                },
                                "right": {
                                  "type": "IndexAccess",
                                  "base": {
                                    "type": "Identifier",
                                    "name": "n"
                                  },
                                  "index": {
                                    "type": "NumberLiteral",
                                    "number": "0",
                                    "subdenomination": null
                                  }
                                }
                              },
                              "TrueBody": {
                                "type": "Block",
                                "statements": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "BinaryOperation",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "subindex"
                                      },
                                      "right": {
                                        "type": "NumberLiteral",
                                        "number": "1",
                                        "subdenomination": null
                                      }
                                    }
                                  },
                                  {
                                    "type": "WhileStatement",
                                    "condition": {
                                      "type": "BinaryOperation",
                                      "operator": "&&",
                                      "left": {
                                        "type": "BinaryOperation",
                                        "operator": "&&",
                                        "left": {
                                          "type": "BinaryOperation",
                                          "operator": "<",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "subindex"
                                          },
                                          "right": {
                                            "type": "MemberAccess",
                                            "expression": {
                                              "type": "Identifier",
                                              "name": "n"
                                            },
                                            "memberName": "length"
                                          }
                                        },
                                        "right": {
                                          "type": "BinaryOperation",
                                          "operator": "<",
                                          "left": {
                                            "type": "TupleExpression",
                                            "components": [
                                              {
                                                "type": "BinaryOperation",
                                                "operator": "+",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "i"
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "subindex"
                                                }
                                              }
                                            ],
                                            "isArray": false
                                          },
                                          "right": {
                                            "type": "MemberAccess",
                                            "expression": {
                                              "type": "Identifier",
                                              "name": "h"
                                            },
                                            "memberName": "length"
                                          }
                                        }
                                      },
                                      "right": {
                                        "type": "BinaryOperation",
                                        "operator": "==",
                                        "left": {
                                          "type": "IndexAccess",
                                          "base": {
                                            "type": "Identifier",
                                            "name": "h"
                                          },
                                          "index": {
                                            "type": "BinaryOperation",
                                            "operator": "+",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "i"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "subindex"
                                            }
                                          }
                                        },
                                        "right": {
                                          "type": "IndexAccess",
                                          "base": {
                                            "type": "Identifier",
                                            "name": "n"
                                          },
                                          "index": {
                                            "type": "Identifier",
                                            "name": "subindex"
                                          }
                                        }
                                      }
                                    },
                                    "body": {
                                      "type": "Block",
                                      "statements": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "UnaryOperation",
                                            "operator": "++",
                                            "subExpression": {
                                              "type": "Identifier",
                                              "name": "subindex"
                                            },
                                            "isPrefix": false
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "IfStatement",
                                    "condition": {
                                      "type": "BinaryOperation",
                                      "operator": "==",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "subindex"
                                      },
                                      "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "n"
                                        },
                                        "memberName": "length"
                                      }
                                    },
                                    "TrueBody": {
                                      "type": "Block",
                                      "statements": [
                                        {
                                          "type": "FunctionCall",
                                          "expression": {
                                            "type": "ElementaryTypeName",
                                            "name": "int256"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "i"
                                            }
                                          ],
                                          "names": []
                                        }
                                      ]
                                    },
                                    "FalseBody": null
                                  }
                                ]
                              },
                              "FalseBody": null
                            }
                          ]
                        }
                      },
                      {
                        "type": "UnaryOperation",
                        "operator": "-",
                        "subExpression": {
                          "type": "NumberLiteral",
                          "number": "1",
                          "subdenomination": null
                        },
                        "isPrefix": true
                      }
                    ]
                  }
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "strConcat",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_a",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_b",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_concatenatedString",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "strConcat"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_a"
                  },
                  {
                    "type": "Identifier",
                    "name": "_b"
                  },
                  {
                    "type": "stringLiteral",
                    "value": ""
                  },
                  {
                    "type": "stringLiteral",
                    "value": ""
                  },
                  {
                    "type": "stringLiteral",
                    "value": ""
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "strConcat",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_a",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_b",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_c",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_concatenatedString",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "strConcat"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_a"
                  },
                  {
                    "type": "Identifier",
                    "name": "_b"
                  },
                  {
                    "type": "Identifier",
                    "name": "_c"
                  },
                  {
                    "type": "stringLiteral",
                    "value": ""
                  },
                  {
                    "type": "stringLiteral",
                    "value": ""
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "strConcat",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_a",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_b",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_c",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_d",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_concatenatedString",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "strConcat"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_a"
                  },
                  {
                    "type": "Identifier",
                    "name": "_b"
                  },
                  {
                    "type": "Identifier",
                    "name": "_c"
                  },
                  {
                    "type": "Identifier",
                    "name": "_d"
                  },
                  {
                    "type": "stringLiteral",
                    "value": ""
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "strConcat",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_a",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_b",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_c",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_d",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_e",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_concatenatedString",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "_ba",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_a"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "_bb",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_b"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "_bc",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_c"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "_bd",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_d"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "_be",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_e"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "string"
                    },
                    "name": "abcde",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "string"
                    }
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "BinaryOperation",
                            "operator": "+",
                            "left": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "_ba"
                              },
                              "memberName": "length"
                            },
                            "right": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "_bb"
                              },
                              "memberName": "length"
                            }
                          },
                          "right": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "_bc"
                            },
                            "memberName": "length"
                          }
                        },
                        "right": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "_bd"
                          },
                          "memberName": "length"
                        }
                      },
                      "right": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "_be"
                        },
                        "memberName": "length"
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "babcde",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "abcde"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "k",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "i",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "_ba"
                    },
                    "memberName": "length"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "babcde"
                          },
                          "index": {
                            "type": "UnaryOperation",
                            "operator": "++",
                            "subExpression": {
                              "type": "Identifier",
                              "name": "k"
                            },
                            "isPrefix": false
                          }
                        },
                        "right": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "_ba"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "i"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "_bb"
                    },
                    "memberName": "length"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "babcde"
                          },
                          "index": {
                            "type": "UnaryOperation",
                            "operator": "++",
                            "subExpression": {
                              "type": "Identifier",
                              "name": "k"
                            },
                            "isPrefix": false
                          }
                        },
                        "right": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "_bb"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "i"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "_bc"
                    },
                    "memberName": "length"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "babcde"
                          },
                          "index": {
                            "type": "UnaryOperation",
                            "operator": "++",
                            "subExpression": {
                              "type": "Identifier",
                              "name": "k"
                            },
                            "isPrefix": false
                          }
                        },
                        "right": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "_bc"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "i"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "_bd"
                    },
                    "memberName": "length"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "babcde"
                          },
                          "index": {
                            "type": "UnaryOperation",
                            "operator": "++",
                            "subExpression": {
                              "type": "Identifier",
                              "name": "k"
                            },
                            "isPrefix": false
                          }
                        },
                        "right": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "_bd"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "i"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "_be"
                    },
                    "memberName": "length"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "babcde"
                          },
                          "index": {
                            "type": "UnaryOperation",
                            "operator": "++",
                            "subExpression": {
                              "type": "Identifier",
                              "name": "k"
                            },
                            "isPrefix": false
                          }
                        },
                        "right": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "_be"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "i"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "babcde"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "safeParseInt",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_a",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_parsedInt",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "safeParseInt"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_a"
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "safeParseInt",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_a",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_b",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_parsedInt",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "bresult",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_a"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "mint",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bool"
                    },
                    "name": "decimals",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BooleanLiteral",
                  "value": false
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "bresult"
                    },
                    "memberName": "length"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": "&&",
                        "left": {
                          "type": "TupleExpression",
                          "components": [
                            {
                              "type": "BinaryOperation",
                              "operator": ">=",
                              "left": {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "ElementaryTypeName",
                                  "name": "uint256"
                                },
                                "arguments": [
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "ElementaryTypeName",
                                      "name": "uint8"
                                    },
                                    "arguments": [
                                      {
                                        "type": "IndexAccess",
                                        "base": {
                                          "type": "Identifier",
                                          "name": "bresult"
                                        },
                                        "index": {
                                          "type": "Identifier",
                                          "name": "i"
                                        }
                                      }
                                    ],
                                    "names": []
                                  }
                                ],
                                "names": []
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "48",
                                "subdenomination": null
                              }
                            }
                          ],
                          "isArray": false
                        },
                        "right": {
                          "type": "TupleExpression",
                          "components": [
                            {
                              "type": "BinaryOperation",
                              "operator": "<=",
                              "left": {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "ElementaryTypeName",
                                  "name": "uint256"
                                },
                                "arguments": [
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "ElementaryTypeName",
                                      "name": "uint8"
                                    },
                                    "arguments": [
                                      {
                                        "type": "IndexAccess",
                                        "base": {
                                          "type": "Identifier",
                                          "name": "bresult"
                                        },
                                        "index": {
                                          "type": "Identifier",
                                          "name": "i"
                                        }
                                      }
                                    ],
                                    "names": []
                                  }
                                ],
                                "names": []
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "57",
                                "subdenomination": null
                              }
                            }
                          ],
                          "isArray": false
                        }
                      },
                      "TrueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "IfStatement",
                            "condition": {
                              "type": "Identifier",
                              "name": "decimals"
                            },
                            "TrueBody": {
                              "type": "Block",
                              "statements": [
                                {
                                  "type": "IfStatement",
                                  "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "==",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "_b"
                                    },
                                    "right": {
                                      "type": "NumberLiteral",
                                      "number": "0",
                                      "subdenomination": null
                                    }
                                  },
                                  "TrueBody": ";",
                                  "FalseBody": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "UnaryOperation",
                                      "operator": "--",
                                      "subExpression": {
                                        "type": "Identifier",
                                        "name": "_b"
                                      },
                                      "isPrefix": false
                                    }
                                  }
                                }
                              ]
                            },
                            "FalseBody": null
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "*=",
                              "left": {
                                "type": "Identifier",
                                "name": "mint"
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "10",
                                "subdenomination": null
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "+=",
                              "left": {
                                "type": "Identifier",
                                "name": "mint"
                              },
                              "right": {
                                "type": "BinaryOperation",
                                "operator": "-",
                                "left": {
                                  "type": "FunctionCall",
                                  "expression": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                  },
                                  "arguments": [
                                    {
                                      "type": "FunctionCall",
                                      "expression": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint8"
                                      },
                                      "arguments": [
                                        {
                                          "type": "IndexAccess",
                                          "base": {
                                            "type": "Identifier",
                                            "name": "bresult"
                                          },
                                          "index": {
                                            "type": "Identifier",
                                            "name": "i"
                                          }
                                        }
                                      ],
                                      "names": []
                                    }
                                  ],
                                  "names": []
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "48",
                                  "subdenomination": null
                                }
                              }
                            }
                          }
                        ]
                      },
                      "FalseBody": {
                        "type": "IfStatement",
                        "condition": {
                          "type": "BinaryOperation",
                          "operator": "==",
                          "left": {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "ElementaryTypeName",
                              "name": "uint256"
                            },
                            "arguments": [
                              {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "ElementaryTypeName",
                                  "name": "uint8"
                                },
                                "arguments": [
                                  {
                                    "type": "IndexAccess",
                                    "base": {
                                      "type": "Identifier",
                                      "name": "bresult"
                                    },
                                    "index": {
                                      "type": "Identifier",
                                      "name": "i"
                                    }
                                  }
                                ],
                                "names": []
                              }
                            ],
                            "names": []
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "46",
                            "subdenomination": null
                          }
                        },
                        "TrueBody": {
                          "type": "Block",
                          "statements": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "require"
                                },
                                "arguments": [
                                  {
                                    "type": "UnaryOperation",
                                    "operator": "!",
                                    "subExpression": {
                                      "type": "Identifier",
                                      "name": "decimals"
                                    },
                                    "isPrefix": true
                                  },
                                  {
                                    "type": "stringLiteral",
                                    "value": "More than one decimal encountered in string!"
                                  }
                                ],
                                "names": []
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "BinaryOperation",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "decimals"
                                },
                                "right": {
                                  "type": "BooleanLiteral",
                                  "value": true
                                }
                              }
                            }
                          ]
                        },
                        "FalseBody": {
                          "type": "Block",
                          "statements": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "revert"
                                },
                                "arguments": [
                                  {
                                    "type": "stringLiteral",
                                    "value": "Non-numeral character encountered in string!"
                                  }
                                ],
                                "names": []
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "Identifier",
                    "name": "_b"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "*=",
                        "left": {
                          "type": "Identifier",
                          "name": "mint"
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": "**",
                          "left": {
                            "type": "NumberLiteral",
                            "number": "10",
                            "subdenomination": null
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "_b"
                          }
                        }
                      }
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "Identifier",
                "name": "mint"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "parseInt",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_a",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_parsedInt",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "parseInt"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_a"
                  },
                  {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "parseInt",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_a",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_b",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_parsedInt",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "bresult",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_a"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "mint",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bool"
                    },
                    "name": "decimals",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BooleanLiteral",
                  "value": false
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "bresult"
                    },
                    "memberName": "length"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": "&&",
                        "left": {
                          "type": "TupleExpression",
                          "components": [
                            {
                              "type": "BinaryOperation",
                              "operator": ">=",
                              "left": {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "ElementaryTypeName",
                                  "name": "uint256"
                                },
                                "arguments": [
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "ElementaryTypeName",
                                      "name": "uint8"
                                    },
                                    "arguments": [
                                      {
                                        "type": "IndexAccess",
                                        "base": {
                                          "type": "Identifier",
                                          "name": "bresult"
                                        },
                                        "index": {
                                          "type": "Identifier",
                                          "name": "i"
                                        }
                                      }
                                    ],
                                    "names": []
                                  }
                                ],
                                "names": []
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "48",
                                "subdenomination": null
                              }
                            }
                          ],
                          "isArray": false
                        },
                        "right": {
                          "type": "TupleExpression",
                          "components": [
                            {
                              "type": "BinaryOperation",
                              "operator": "<=",
                              "left": {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "ElementaryTypeName",
                                  "name": "uint256"
                                },
                                "arguments": [
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "ElementaryTypeName",
                                      "name": "uint8"
                                    },
                                    "arguments": [
                                      {
                                        "type": "IndexAccess",
                                        "base": {
                                          "type": "Identifier",
                                          "name": "bresult"
                                        },
                                        "index": {
                                          "type": "Identifier",
                                          "name": "i"
                                        }
                                      }
                                    ],
                                    "names": []
                                  }
                                ],
                                "names": []
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "57",
                                "subdenomination": null
                              }
                            }
                          ],
                          "isArray": false
                        }
                      },
                      "TrueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "IfStatement",
                            "condition": {
                              "type": "Identifier",
                              "name": "decimals"
                            },
                            "TrueBody": {
                              "type": "Block",
                              "statements": [
                                {
                                  "type": "IfStatement",
                                  "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "==",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "_b"
                                    },
                                    "right": {
                                      "type": "NumberLiteral",
                                      "number": "0",
                                      "subdenomination": null
                                    }
                                  },
                                  "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                      ";"
                                    ]
                                  },
                                  "FalseBody": {
                                    "type": "Block",
                                    "statements": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "UnaryOperation",
                                          "operator": "--",
                                          "subExpression": {
                                            "type": "Identifier",
                                            "name": "_b"
                                          },
                                          "isPrefix": false
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "FalseBody": null
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "*=",
                              "left": {
                                "type": "Identifier",
                                "name": "mint"
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "10",
                                "subdenomination": null
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "+=",
                              "left": {
                                "type": "Identifier",
                                "name": "mint"
                              },
                              "right": {
                                "type": "BinaryOperation",
                                "operator": "-",
                                "left": {
                                  "type": "FunctionCall",
                                  "expression": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                  },
                                  "arguments": [
                                    {
                                      "type": "FunctionCall",
                                      "expression": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint8"
                                      },
                                      "arguments": [
                                        {
                                          "type": "IndexAccess",
                                          "base": {
                                            "type": "Identifier",
                                            "name": "bresult"
                                          },
                                          "index": {
                                            "type": "Identifier",
                                            "name": "i"
                                          }
                                        }
                                      ],
                                      "names": []
                                    }
                                  ],
                                  "names": []
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "48",
                                  "subdenomination": null
                                }
                              }
                            }
                          }
                        ]
                      },
                      "FalseBody": {
                        "type": "IfStatement",
                        "condition": {
                          "type": "BinaryOperation",
                          "operator": "==",
                          "left": {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "ElementaryTypeName",
                              "name": "uint256"
                            },
                            "arguments": [
                              {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "ElementaryTypeName",
                                  "name": "uint8"
                                },
                                "arguments": [
                                  {
                                    "type": "IndexAccess",
                                    "base": {
                                      "type": "Identifier",
                                      "name": "bresult"
                                    },
                                    "index": {
                                      "type": "Identifier",
                                      "name": "i"
                                    }
                                  }
                                ],
                                "names": []
                              }
                            ],
                            "names": []
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "46",
                            "subdenomination": null
                          }
                        },
                        "TrueBody": {
                          "type": "Block",
                          "statements": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "BinaryOperation",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "decimals"
                                },
                                "right": {
                                  "type": "BooleanLiteral",
                                  "value": true
                                }
                              }
                            }
                          ]
                        },
                        "FalseBody": null
                      }
                    }
                  ]
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "Identifier",
                    "name": "_b"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "*=",
                        "left": {
                          "type": "Identifier",
                          "name": "mint"
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": "**",
                          "left": {
                            "type": "NumberLiteral",
                            "number": "10",
                            "subdenomination": null
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "_b"
                          }
                        }
                      }
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "Identifier",
                "name": "mint"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "uint2str",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_i",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_uintAsString",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                    "type": "Identifier",
                    "name": "_i"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "stringLiteral",
                      "value": "0"
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "j",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "Identifier",
                  "name": "_i"
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "len",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "WhileStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "!=",
                  "left": {
                    "type": "Identifier",
                    "name": "j"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "UnaryOperation",
                        "operator": "++",
                        "subExpression": {
                          "type": "Identifier",
                          "name": "len"
                        },
                        "isPrefix": false
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "/=",
                        "left": {
                          "type": "Identifier",
                          "name": "j"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "10",
                          "subdenomination": null
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "bstr",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "len"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "k",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "-",
                  "left": {
                    "type": "Identifier",
                    "name": "len"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "WhileStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "!=",
                  "left": {
                    "type": "Identifier",
                    "name": "_i"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "bstr"
                          },
                          "index": {
                            "type": "UnaryOperation",
                            "operator": "--",
                            "subExpression": {
                              "type": "Identifier",
                              "name": "k"
                            },
                            "isPrefix": false
                          }
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "ElementaryTypeName",
                            "name": "bytes1"
                          },
                          "arguments": [
                            {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "ElementaryTypeName",
                                "name": "uint8"
                              },
                              "arguments": [
                                {
                                  "type": "BinaryOperation",
                                  "operator": "+",
                                  "left": {
                                    "type": "NumberLiteral",
                                    "number": "48",
                                    "subdenomination": null
                                  },
                                  "right": {
                                    "type": "TupleExpression",
                                    "components": [
                                      {
                                        "type": "BinaryOperation",
                                        "operator": "%",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "_i"
                                        },
                                        "right": {
                                          "type": "NumberLiteral",
                                          "number": "10",
                                          "subdenomination": null
                                        }
                                      }
                                    ],
                                    "isArray": false
                                  }
                                }
                              ],
                              "names": []
                            }
                          ],
                          "names": []
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "/=",
                        "left": {
                          "type": "Identifier",
                          "name": "_i"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "10",
                          "subdenomination": null
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "bstr"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "stra2cbor",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "string"
                  },
                  "length": null
                },
                "name": "_arr",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_cborEncoding",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "safeMemoryCleaner"
                  },
                  "arguments": [],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "UserDefinedTypeName",
                      "namePath": "Buffer.buffer"
                    },
                    "name": "buf",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": null
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "Buffer"
                    },
                    "memberName": "init"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    {
                      "type": "NumberLiteral",
                      "number": "1024",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "memberName": "startArray"
                  },
                  "arguments": [],
                  "names": []
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "_arr"
                    },
                    "memberName": "length"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "buf"
                          },
                          "memberName": "encodeString"
                        },
                        "arguments": [
                          {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "_arr"
                            },
                            "index": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          }
                        ],
                        "names": []
                      }
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "memberName": "endSequence"
                  },
                  "arguments": [],
                  "names": []
                }
              },
              {
                "type": "MemberAccess",
                "expression": {
                  "type": "Identifier",
                  "name": "buf"
                },
                "memberName": "buf"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "ba2cbor",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "bytes"
                  },
                  "length": null
                },
                "name": "_arr",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_cborEncoding",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "safeMemoryCleaner"
                  },
                  "arguments": [],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "UserDefinedTypeName",
                      "namePath": "Buffer.buffer"
                    },
                    "name": "buf",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": null
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "Buffer"
                    },
                    "memberName": "init"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    {
                      "type": "NumberLiteral",
                      "number": "1024",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "memberName": "startArray"
                  },
                  "arguments": [],
                  "names": []
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "_arr"
                    },
                    "memberName": "length"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "buf"
                          },
                          "memberName": "encodeBytes"
                        },
                        "arguments": [
                          {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "_arr"
                            },
                            "index": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          }
                        ],
                        "names": []
                      }
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "memberName": "endSequence"
                  },
                  "arguments": [],
                  "names": []
                }
              },
              {
                "type": "MemberAccess",
                "expression": {
                  "type": "Identifier",
                  "name": "buf"
                },
                "memberName": "buf"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_newRandomDSQuery",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_delay",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_nbytes",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_customGasLimit",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_queryId",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "&&",
                      "left": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": ">",
                            "left": {
                              "type": "Identifier",
                              "name": "_nbytes"
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "0",
                              "subdenomination": null
                            }
                          }
                        ],
                        "isArray": false
                      },
                      "right": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "<=",
                            "left": {
                              "type": "Identifier",
                              "name": "_nbytes"
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "32",
                              "subdenomination": null
                            }
                          }
                        ],
                        "isArray": false
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "*=",
                  "left": {
                    "type": "Identifier",
                    "name": "_delay"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "10",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "nbytes",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "nbytes"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "bytes1"
                    },
                    "arguments": [
                      {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "ElementaryTypeName",
                          "name": "uint8"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "_nbytes"
                          }
                        ],
                        "names": []
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "unonce",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "32",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "sessionKeyHash",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "32",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes32"
                    },
                    "name": "sessionKeyHash_bytes32",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "provable_randomDS_getSessionPubKeyHash"
                  },
                  "arguments": [],
                  "names": []
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "unonce",
                          "arguments": []
                        },
                        {
                          "type": "HexNumber",
                          "value": "0x20"
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "unonce",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x20"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "xor",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "blockhash",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "sub",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "number",
                                      "arguments": []
                                    },
                                    {
                                      "type": "DecimalNumber",
                                      "value": "1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "xor",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "coinbase",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "timestamp",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "sessionKeyHash",
                          "arguments": []
                        },
                        {
                          "type": "HexNumber",
                          "value": "0x20"
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "sessionKeyHash",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x20"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "sessionKeyHash_bytes32",
                          "arguments": []
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "delay",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "32",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "delay",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x20"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "_delay",
                          "arguments": []
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "delay_bytes8",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "8",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "copyBytes"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "delay"
                    },
                    {
                      "type": "NumberLiteral",
                      "number": "24",
                      "subdenomination": null
                    },
                    {
                      "type": "NumberLiteral",
                      "number": "8",
                      "subdenomination": null
                    },
                    {
                      "type": "Identifier",
                      "name": "delay_bytes8"
                    },
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "length": {
                        "type": "NumberLiteral",
                        "number": "4",
                        "subdenomination": null
                      }
                    },
                    "name": "args",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "TupleExpression",
                  "components": [
                    {
                      "type": "Identifier",
                      "name": "unonce"
                    },
                    {
                      "type": "Identifier",
                      "name": "nbytes"
                    },
                    {
                      "type": "Identifier",
                      "name": "sessionKeyHash"
                    },
                    {
                      "type": "Identifier",
                      "name": "delay"
                    }
                  ],
                  "isArray": true
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes32"
                    },
                    "name": "queryId",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "provable_query"
                  },
                  "arguments": [
                    {
                      "type": "stringLiteral",
                      "value": "random"
                    },
                    {
                      "type": "Identifier",
                      "name": "args"
                    },
                    {
                      "type": "Identifier",
                      "name": "_customGasLimit"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "delay_bytes8_left",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "8",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "x"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "delay_bytes8",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x20"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore8",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "delay_bytes8_left",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x27"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "div",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "x",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x100000000000000000000000000000000000000000000000000000000000000"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore8",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "delay_bytes8_left",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x26"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "div",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "x",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x1000000000000000000000000000000000000000000000000000000000000"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore8",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "delay_bytes8_left",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x25"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "div",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "x",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x10000000000000000000000000000000000000000000000000000000000"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore8",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "delay_bytes8_left",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x24"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "div",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "x",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x100000000000000000000000000000000000000000000000000000000"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore8",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "delay_bytes8_left",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x23"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "div",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "x",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x1000000000000000000000000000000000000000000000000000000"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore8",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "delay_bytes8_left",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x22"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "div",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "x",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x10000000000000000000000000000000000000000000000000000"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore8",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "delay_bytes8_left",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x21"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "div",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "x",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x100000000000000000000000000000000000000000000000000"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore8",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "delay_bytes8_left",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x20"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "div",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "x",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x1000000000000000000000000000000000000000000000000"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "provable_randomDS_setCommitment"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "queryId"
                    },
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "keccak256"
                      },
                      "arguments": [
                        {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "abi"
                            },
                            "memberName": "encodePacked"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "delay_bytes8_left"
                            },
                            {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "args"
                              },
                              "index": {
                                "type": "NumberLiteral",
                                "number": "1",
                                "subdenomination": null
                              }
                            },
                            {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "Identifier",
                                "name": "sha256"
                              },
                              "arguments": [
                                {
                                  "type": "IndexAccess",
                                  "base": {
                                    "type": "Identifier",
                                    "name": "args"
                                  },
                                  "index": {
                                    "type": "NumberLiteral",
                                    "number": "0",
                                    "subdenomination": null
                                  }
                                }
                              ],
                              "names": []
                            },
                            {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "args"
                              },
                              "index": {
                                "type": "NumberLiteral",
                                "number": "2",
                                "subdenomination": null
                              }
                            }
                          ],
                          "names": []
                        }
                      ],
                      "names": []
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "Identifier",
                "name": "queryId"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_randomDS_setCommitment",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_queryId",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_commitment",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "provable_randomDS_args"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "_queryId"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "_commitment"
                  }
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "verifySig",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_tosignh",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_dersig",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_pubkey",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": "_sigVerified",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bool"
                    },
                    "name": "sigok",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "address"
                    },
                    "name": "signer",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes32"
                    },
                    "name": "sigr",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes32"
                    },
                    "name": "sigs",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "sigr_",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "32",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "offset",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  },
                  "right": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "BinaryOperation",
                        "operator": "-",
                        "left": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "ElementaryTypeName",
                            "name": "uint256"
                          },
                          "arguments": [
                            {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "ElementaryTypeName",
                                "name": "uint8"
                              },
                              "arguments": [
                                {
                                  "type": "IndexAccess",
                                  "base": {
                                    "type": "Identifier",
                                    "name": "_dersig"
                                  },
                                  "index": {
                                    "type": "NumberLiteral",
                                    "number": "3",
                                    "subdenomination": null
                                  }
                                }
                              ],
                              "names": []
                            }
                          ],
                          "names": []
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0x20",
                          "subdenomination": null
                        }
                      }
                    ],
                    "isArray": false
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "sigr_"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "copyBytes"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "_dersig"
                      },
                      {
                        "type": "Identifier",
                        "name": "offset"
                      },
                      {
                        "type": "NumberLiteral",
                        "number": "32",
                        "subdenomination": null
                      },
                      {
                        "type": "Identifier",
                        "name": "sigr_"
                      },
                      {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "sigs_",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "32",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "+=",
                  "left": {
                    "type": "Identifier",
                    "name": "offset"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "32",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "sigs_"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "copyBytes"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "_dersig"
                      },
                      {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                          "type": "Identifier",
                          "name": "offset"
                        },
                        "right": {
                          "type": "TupleExpression",
                          "components": [
                            {
                              "type": "BinaryOperation",
                              "operator": "-",
                              "left": {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "ElementaryTypeName",
                                  "name": "uint256"
                                },
                                "arguments": [
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "ElementaryTypeName",
                                      "name": "uint8"
                                    },
                                    "arguments": [
                                      {
                                        "type": "IndexAccess",
                                        "base": {
                                          "type": "Identifier",
                                          "name": "_dersig"
                                        },
                                        "index": {
                                          "type": "BinaryOperation",
                                          "operator": "-",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "offset"
                                          },
                                          "right": {
                                            "type": "NumberLiteral",
                                            "number": "1",
                                            "subdenomination": null
                                          }
                                        }
                                      }
                                    ],
                                    "names": []
                                  }
                                ],
                                "names": []
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "0x20",
                                "subdenomination": null
                              }
                            }
                          ],
                          "isArray": false
                        }
                      },
                      {
                        "type": "NumberLiteral",
                        "number": "32",
                        "subdenomination": null
                      },
                      {
                        "type": "Identifier",
                        "name": "sigs_"
                      },
                      {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "sigr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "sigr_",
                                "arguments": []
                              },
                              {
                                "type": "DecimalNumber",
                                "value": "32"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "sigs"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "sigs_",
                                "arguments": []
                              },
                              {
                                "type": "DecimalNumber",
                                "value": "32"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "Identifier",
                        "name": "sigok"
                      },
                      {
                        "type": "Identifier",
                        "name": "signer"
                      }
                    ],
                    "isArray": false
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "safer_ecrecover"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "_tosignh"
                      },
                      {
                        "type": "NumberLiteral",
                        "number": "27",
                        "subdenomination": null
                      },
                      {
                        "type": "Identifier",
                        "name": "sigr"
                      },
                      {
                        "type": "Identifier",
                        "name": "sigs"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "address"
                    },
                    "arguments": [
                      {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "ElementaryTypeName",
                          "name": "uint160"
                        },
                        "arguments": [
                          {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "ElementaryTypeName",
                              "name": "uint256"
                            },
                            "arguments": [
                              {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "keccak256"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "_pubkey"
                                  }
                                ],
                                "names": []
                              }
                            ],
                            "names": []
                          }
                        ],
                        "names": []
                      }
                    ],
                    "names": []
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "signer"
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "BooleanLiteral",
                      "value": true
                    }
                  ]
                },
                "FalseBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "TupleExpression",
                          "components": [
                            {
                              "type": "Identifier",
                              "name": "sigok"
                            },
                            {
                              "type": "Identifier",
                              "name": "signer"
                            }
                          ],
                          "isArray": false
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "safer_ecrecover"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "_tosignh"
                            },
                            {
                              "type": "NumberLiteral",
                              "number": "28",
                              "subdenomination": null
                            },
                            {
                              "type": "Identifier",
                              "name": "sigr"
                            },
                            {
                              "type": "Identifier",
                              "name": "sigs"
                            }
                          ],
                          "names": []
                        }
                      }
                    },
                    {
                      "type": "TupleExpression",
                      "components": [
                        {
                          "type": "BinaryOperation",
                          "operator": "==",
                          "left": {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "ElementaryTypeName",
                              "name": "address"
                            },
                            "arguments": [
                              {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "ElementaryTypeName",
                                  "name": "uint160"
                                },
                                "arguments": [
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "ElementaryTypeName",
                                      "name": "uint256"
                                    },
                                    "arguments": [
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "keccak256"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "_pubkey"
                                          }
                                        ],
                                        "names": []
                                      }
                                    ],
                                    "names": []
                                  }
                                ],
                                "names": []
                              }
                            ],
                            "names": []
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "signer"
                          }
                        }
                      ],
                      "isArray": false
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_randomDS_proofVerify__sessionKeyValidity",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_proof",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_sig2offset",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": "_proofVerified",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bool"
                    },
                    "name": "sigok",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "sig2",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    }
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "ElementaryTypeName",
                          "name": "uint256"
                        },
                        "arguments": [
                          {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "ElementaryTypeName",
                              "name": "uint8"
                            },
                            "arguments": [
                              {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "Identifier",
                                  "name": "_proof"
                                },
                                "index": {
                                  "type": "BinaryOperation",
                                  "operator": "+",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "_sig2offset"
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "1",
                                    "subdenomination": null
                                  }
                                }
                              }
                            ],
                            "names": []
                          }
                        ],
                        "names": []
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "2",
                        "subdenomination": null
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "copyBytes"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_proof"
                    },
                    {
                      "type": "Identifier",
                      "name": "_sig2offset"
                    },
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "sig2"
                      },
                      "memberName": "length"
                    },
                    {
                      "type": "Identifier",
                      "name": "sig2"
                    },
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "appkey1_pubkey",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "64",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "copyBytes"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_proof"
                    },
                    {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "NumberLiteral",
                        "number": "3",
                        "subdenomination": null
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "1",
                        "subdenomination": null
                      }
                    },
                    {
                      "type": "NumberLiteral",
                      "number": "64",
                      "subdenomination": null
                    },
                    {
                      "type": "Identifier",
                      "name": "appkey1_pubkey"
                    },
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "tosign2",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    }
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                          "type": "NumberLiteral",
                          "number": "1",
                          "subdenomination": null
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "65",
                          "subdenomination": null
                        }
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "32",
                        "subdenomination": null
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "tosign2"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "bytes1"
                    },
                    "arguments": [
                      {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "ElementaryTypeName",
                          "name": "uint8"
                        },
                        "arguments": [
                          {
                            "type": "NumberLiteral",
                            "number": "1",
                            "subdenomination": null
                          }
                        ],
                        "names": []
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "copyBytes"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_proof"
                    },
                    {
                      "type": "BinaryOperation",
                      "operator": "-",
                      "left": {
                        "type": "Identifier",
                        "name": "_sig2offset"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "65",
                        "subdenomination": null
                      }
                    },
                    {
                      "type": "NumberLiteral",
                      "number": "65",
                      "subdenomination": null
                    },
                    {
                      "type": "Identifier",
                      "name": "tosign2"
                    },
                    {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "CODEHASH",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "hexLiteral",
                  "value": "hex\"fd94fa71bc0ba10d39d464d0d8f465efeef0a2764e3887fcc9df41ded20f505c\""
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "copyBytes"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "CODEHASH"
                    },
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    },
                    {
                      "type": "NumberLiteral",
                      "number": "32",
                      "subdenomination": null
                    },
                    {
                      "type": "Identifier",
                      "name": "tosign2"
                    },
                    {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "NumberLiteral",
                        "number": "1",
                        "subdenomination": null
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "65",
                        "subdenomination": null
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "sigok"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "verifySig"
                    },
                    "arguments": [
                      {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "sha256"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "tosign2"
                          }
                        ],
                        "names": []
                      },
                      {
                        "type": "Identifier",
                        "name": "sig2"
                      },
                      {
                        "type": "Identifier",
                        "name": "appkey1_pubkey"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "UnaryOperation",
                  "operator": "!",
                  "subExpression": {
                    "type": "Identifier",
                    "name": "sigok"
                  },
                  "isPrefix": true
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "BooleanLiteral",
                      "value": false
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "LEDGERKEY",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "hexLiteral",
                  "value": "hex\"7fb956469c5c9b89840d55b43537e66a98dd4811ea0a27224272c2e5622911e8537a2f8e86a46baec82864e98dd01e9ccc2f8bc5dfc9cbe5a91a290498dd96e4\""
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "tosign3",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    }
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "NumberLiteral",
                        "number": "1",
                        "subdenomination": null
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "65",
                        "subdenomination": null
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "tosign3"
                    },
                    "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0xFE",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "copyBytes"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_proof"
                    },
                    {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    },
                    {
                      "type": "NumberLiteral",
                      "number": "65",
                      "subdenomination": null
                    },
                    {
                      "type": "Identifier",
                      "name": "tosign3"
                    },
                    {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "sig3",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    }
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "ElementaryTypeName",
                          "name": "uint256"
                        },
                        "arguments": [
                          {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "ElementaryTypeName",
                              "name": "uint8"
                            },
                            "arguments": [
                              {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "Identifier",
                                  "name": "_proof"
                                },
                                "index": {
                                  "type": "BinaryOperation",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryOperation",
                                    "operator": "+",
                                    "left": {
                                      "type": "NumberLiteral",
                                      "number": "3",
                                      "subdenomination": null
                                    },
                                    "right": {
                                      "type": "NumberLiteral",
                                      "number": "65",
                                      "subdenomination": null
                                    }
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "1",
                                    "subdenomination": null
                                  }
                                }
                              }
                            ],
                            "names": []
                          }
                        ],
                        "names": []
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "2",
                        "subdenomination": null
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "copyBytes"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_proof"
                    },
                    {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "NumberLiteral",
                        "number": "3",
                        "subdenomination": null
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "65",
                        "subdenomination": null
                      }
                    },
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "sig3"
                      },
                      "memberName": "length"
                    },
                    {
                      "type": "Identifier",
                      "name": "sig3"
                    },
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "sigok"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "verifySig"
                    },
                    "arguments": [
                      {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "sha256"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "tosign3"
                          }
                        ],
                        "names": []
                      },
                      {
                        "type": "Identifier",
                        "name": "sig3"
                      },
                      {
                        "type": "Identifier",
                        "name": "LEDGERKEY"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "Identifier",
                "name": "sigok"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_randomDS_proofVerify__returnCode",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_queryId",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_result",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_proof",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint8"
                },
                "name": "_returnCode",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "||",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "||",
                    "left": {
                      "type": "TupleExpression",
                      "components": [
                        {
                          "type": "BinaryOperation",
                          "operator": "!=",
                          "left": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "_proof"
                            },
                            "index": {
                              "type": "NumberLiteral",
                              "number": "0",
                              "subdenomination": null
                            }
                          },
                          "right": {
                            "type": "stringLiteral",
                            "value": "L"
                          }
                        }
                      ],
                      "isArray": false
                    },
                    "right": {
                      "type": "TupleExpression",
                      "components": [
                        {
                          "type": "BinaryOperation",
                          "operator": "!=",
                          "left": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "_proof"
                            },
                            "index": {
                              "type": "NumberLiteral",
                              "number": "1",
                              "subdenomination": null
                            }
                          },
                          "right": {
                            "type": "stringLiteral",
                            "value": "P"
                          }
                        }
                      ],
                      "isArray": false
                    }
                  },
                  "right": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "BinaryOperation",
                        "operator": "!=",
                        "left": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "ElementaryTypeName",
                            "name": "uint8"
                          },
                          "arguments": [
                            {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "_proof"
                              },
                              "index": {
                                "type": "NumberLiteral",
                                "number": "2",
                                "subdenomination": null
                              }
                            }
                          ],
                          "names": []
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "ElementaryTypeName",
                            "name": "uint8"
                          },
                          "arguments": [
                            {
                              "type": "NumberLiteral",
                              "number": "1",
                              "subdenomination": null
                            }
                          ],
                          "names": []
                        }
                      }
                    ],
                    "isArray": false
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bool"
                    },
                    "name": "proofVerified",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "provable_randomDS_proofVerify__main"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_proof"
                    },
                    {
                      "type": "Identifier",
                      "name": "_queryId"
                    },
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "_result"
                        }
                      ],
                      "names": []
                    },
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "provable_getNetworkName"
                      },
                      "arguments": [],
                      "names": []
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "UnaryOperation",
                  "operator": "!",
                  "subExpression": {
                    "type": "Identifier",
                    "name": "proofVerified"
                  },
                  "isPrefix": true
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "matchBytes32Prefix",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_content",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_prefix",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_nRandomBytes",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": "_matchesPrefix",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bool"
                    },
                    "name": "match_",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BooleanLiteral",
                  "value": true
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "_prefix"
                        },
                        "memberName": "length"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "_nRandomBytes"
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "_nRandomBytes"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": "!=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "_content"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "i"
                          }
                        },
                        "right": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "_prefix"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "i"
                          }
                        }
                      },
                      "TrueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "match_"
                              },
                              "right": {
                                "type": "BooleanLiteral",
                                "value": false
                              }
                            }
                          }
                        ]
                      },
                      "FalseBody": null
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "match_"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "provable_randomDS_proofVerify__main",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_proof",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_queryId",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_result",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_contextName",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": "_proofVerified",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "ledgerProofLength",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "NumberLiteral",
                        "number": "3",
                        "subdenomination": null
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "65",
                        "subdenomination": null
                      }
                    },
                    "right": {
                      "type": "TupleExpression",
                      "components": [
                        {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "ElementaryTypeName",
                              "name": "uint256"
                            },
                            "arguments": [
                              {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "ElementaryTypeName",
                                  "name": "uint8"
                                },
                                "arguments": [
                                  {
                                    "type": "IndexAccess",
                                    "base": {
                                      "type": "Identifier",
                                      "name": "_proof"
                                    },
                                    "index": {
                                      "type": "BinaryOperation",
                                      "operator": "+",
                                      "left": {
                                        "type": "BinaryOperation",
                                        "operator": "+",
                                        "left": {
                                          "type": "NumberLiteral",
                                          "number": "3",
                                          "subdenomination": null
                                        },
                                        "right": {
                                          "type": "NumberLiteral",
                                          "number": "65",
                                          "subdenomination": null
                                        }
                                      },
                                      "right": {
                                        "type": "NumberLiteral",
                                        "number": "1",
                                        "subdenomination": null
                                      }
                                    }
                                  }
                                ],
                                "names": []
                              }
                            ],
                            "names": []
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "2",
                            "subdenomination": null
                          }
                        }
                      ],
                      "isArray": false
                    }
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "32",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "keyhash",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "32",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "copyBytes"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_proof"
                    },
                    {
                      "type": "Identifier",
                      "name": "ledgerProofLength"
                    },
                    {
                      "type": "NumberLiteral",
                      "number": "32",
                      "subdenomination": null
                    },
                    {
                      "type": "Identifier",
                      "name": "keyhash"
                    },
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "UnaryOperation",
                  "operator": "!",
                  "subExpression": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "BinaryOperation",
                        "operator": "==",
                        "left": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "keccak256"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "keyhash"
                            }
                          ],
                          "names": []
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "keccak256"
                          },
                          "arguments": [
                            {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "abi"
                                },
                                "memberName": "encodePacked"
                              },
                              "arguments": [
                                {
                                  "type": "FunctionCall",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "sha256"
                                  },
                                  "arguments": [
                                    {
                                      "type": "FunctionCall",
                                      "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "abi"
                                        },
                                        "memberName": "encodePacked"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "_contextName"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "_queryId"
                                        }
                                      ],
                                      "names": []
                                    }
                                  ],
                                  "names": []
                                }
                              ],
                              "names": []
                            }
                          ],
                          "names": []
                        }
                      }
                    ],
                    "isArray": false
                  },
                  "isPrefix": true
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "BooleanLiteral",
                      "value": false
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "sig1",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    }
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "ElementaryTypeName",
                          "name": "uint256"
                        },
                        "arguments": [
                          {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "ElementaryTypeName",
                              "name": "uint8"
                            },
                            "arguments": [
                              {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "Identifier",
                                  "name": "_proof"
                                },
                                "index": {
                                  "type": "BinaryOperation",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryOperation",
                                    "operator": "+",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "ledgerProofLength"
                                    },
                                    "right": {
                                      "type": "TupleExpression",
                                      "components": [
                                        {
                                          "type": "BinaryOperation",
                                          "operator": "+",
                                          "left": {
                                            "type": "BinaryOperation",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryOperation",
                                              "operator": "+",
                                              "left": {
                                                "type": "NumberLiteral",
                                                "number": "32",
                                                "subdenomination": null
                                              },
                                              "right": {
                                                "type": "NumberLiteral",
                                                "number": "8",
                                                "subdenomination": null
                                              }
                                            },
                                            "right": {
                                              "type": "NumberLiteral",
                                              "number": "1",
                                              "subdenomination": null
                                            }
                                          },
                                          "right": {
                                            "type": "NumberLiteral",
                                            "number": "32",
                                            "subdenomination": null
                                          }
                                        }
                                      ],
                                      "isArray": false
                                    }
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "1",
                                    "subdenomination": null
                                  }
                                }
                              }
                            ],
                            "names": []
                          }
                        ],
                        "names": []
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "2",
                        "subdenomination": null
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "copyBytes"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_proof"
                    },
                    {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "Identifier",
                        "name": "ledgerProofLength"
                      },
                      "right": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "+",
                            "left": {
                              "type": "BinaryOperation",
                              "operator": "+",
                              "left": {
                                "type": "BinaryOperation",
                                "operator": "+",
                                "left": {
                                  "type": "NumberLiteral",
                                  "number": "32",
                                  "subdenomination": null
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "8",
                                  "subdenomination": null
                                }
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "1",
                                "subdenomination": null
                              }
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "32",
                              "subdenomination": null
                            }
                          }
                        ],
                        "isArray": false
                      }
                    },
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "sig1"
                      },
                      "memberName": "length"
                    },
                    {
                      "type": "Identifier",
                      "name": "sig1"
                    },
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "UnaryOperation",
                  "operator": "!",
                  "subExpression": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "matchBytes32Prefix"
                    },
                    "arguments": [
                      {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "sha256"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "sig1"
                          }
                        ],
                        "names": []
                      },
                      {
                        "type": "Identifier",
                        "name": "_result"
                      },
                      {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "ElementaryTypeName",
                          "name": "uint256"
                        },
                        "arguments": [
                          {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "ElementaryTypeName",
                              "name": "uint8"
                            },
                            "arguments": [
                              {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "Identifier",
                                  "name": "_proof"
                                },
                                "index": {
                                  "type": "BinaryOperation",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryOperation",
                                    "operator": "+",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "ledgerProofLength"
                                    },
                                    "right": {
                                      "type": "NumberLiteral",
                                      "number": "32",
                                      "subdenomination": null
                                    }
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "8",
                                    "subdenomination": null
                                  }
                                }
                              }
                            ],
                            "names": []
                          }
                        ],
                        "names": []
                      }
                    ],
                    "names": []
                  },
                  "isPrefix": true
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "BooleanLiteral",
                      "value": false
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "commitmentSlice1",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    }
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                          "type": "NumberLiteral",
                          "number": "8",
                          "subdenomination": null
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "1",
                          "subdenomination": null
                        }
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "32",
                        "subdenomination": null
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "copyBytes"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_proof"
                    },
                    {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "Identifier",
                        "name": "ledgerProofLength"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "32",
                        "subdenomination": null
                      }
                    },
                    {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                          "type": "NumberLiteral",
                          "number": "8",
                          "subdenomination": null
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "1",
                          "subdenomination": null
                        }
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "32",
                        "subdenomination": null
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "commitmentSlice1"
                    },
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "sessionPubkey",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "64",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "sig2offset",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                          "type": "Identifier",
                          "name": "ledgerProofLength"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "32",
                          "subdenomination": null
                        }
                      },
                      "right": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "+",
                            "left": {
                              "type": "BinaryOperation",
                              "operator": "+",
                              "left": {
                                "type": "NumberLiteral",
                                "number": "8",
                                "subdenomination": null
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "1",
                                "subdenomination": null
                              }
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "32",
                              "subdenomination": null
                            }
                          }
                        ],
                        "isArray": false
                      }
                    },
                    "right": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "sig1"
                      },
                      "memberName": "length"
                    }
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "65",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "copyBytes"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_proof"
                    },
                    {
                      "type": "BinaryOperation",
                      "operator": "-",
                      "left": {
                        "type": "Identifier",
                        "name": "sig2offset"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "64",
                        "subdenomination": null
                      }
                    },
                    {
                      "type": "NumberLiteral",
                      "number": "64",
                      "subdenomination": null
                    },
                    {
                      "type": "Identifier",
                      "name": "sessionPubkey"
                    },
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes32"
                    },
                    "name": "sessionPubkeyHash",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "sha256"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "sessionPubkey"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "provable_randomDS_args"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "_queryId"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "keccak256"
                    },
                    "arguments": [
                      {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "abi"
                          },
                          "memberName": "encodePacked"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "commitmentSlice1"
                          },
                          {
                            "type": "Identifier",
                            "name": "sessionPubkeyHash"
                          }
                        ],
                        "names": []
                      }
                    ],
                    "names": []
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "UnaryOperation",
                        "operator": "delete",
                        "subExpression": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "provable_randomDS_args"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "_queryId"
                          }
                        },
                        "isPrefix": true
                      }
                    }
                  ]
                },
                "FalseBody": {
                  "type": "BooleanLiteral",
                  "value": false
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "tosign1",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    }
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "NumberLiteral",
                            "number": "32",
                            "subdenomination": null
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "8",
                            "subdenomination": null
                          }
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "1",
                          "subdenomination": null
                        }
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "32",
                        "subdenomination": null
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "copyBytes"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_proof"
                    },
                    {
                      "type": "Identifier",
                      "name": "ledgerProofLength"
                    },
                    {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "NumberLiteral",
                            "number": "32",
                            "subdenomination": null
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "8",
                            "subdenomination": null
                          }
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "1",
                          "subdenomination": null
                        }
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "32",
                        "subdenomination": null
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "tosign1"
                    },
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "UnaryOperation",
                  "operator": "!",
                  "subExpression": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "verifySig"
                    },
                    "arguments": [
                      {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "sha256"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "tosign1"
                          }
                        ],
                        "names": []
                      },
                      {
                        "type": "Identifier",
                        "name": "sig1"
                      },
                      {
                        "type": "Identifier",
                        "name": "sessionPubkey"
                      }
                    ],
                    "names": []
                  },
                  "isPrefix": true
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "BooleanLiteral",
                      "value": false
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "UnaryOperation",
                  "operator": "!",
                  "subExpression": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "provable_randomDS_sessionKeysHashVerified"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "sessionPubkeyHash"
                    }
                  },
                  "isPrefix": true
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "provable_randomDS_sessionKeysHashVerified"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "sessionPubkeyHash"
                          }
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "provable_randomDS_proofVerify__sessionKeyValidity"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "_proof"
                            },
                            {
                              "type": "Identifier",
                              "name": "sig2offset"
                            }
                          ],
                          "names": []
                        }
                      }
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "IndexAccess",
                "base": {
                  "type": "Identifier",
                  "name": "provable_randomDS_sessionKeysHashVerified"
                },
                "index": {
                  "type": "Identifier",
                  "name": "sessionPubkeyHash"
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "copyBytes",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_from",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_fromOffset",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_length",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_to",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_toOffset",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_copiedBytes",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "minLength",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "Identifier",
                    "name": "_length"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "_toOffset"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": ">=",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "_to"
                        },
                        "memberName": "length"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "minLength"
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "i",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "NumberLiteral",
                    "number": "32",
                    "subdenomination": null
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "_fromOffset"
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "j",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "NumberLiteral",
                    "number": "32",
                    "subdenomination": null
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "_toOffset"
                  }
                }
              },
              {
                "type": "WhileStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "NumberLiteral",
                            "number": "32",
                            "subdenomination": null
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "_fromOffset"
                          }
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "_length"
                        }
                      }
                    ],
                    "isArray": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "InLineAssemblyStatement",
                      "language": null,
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "tmp"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mload",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "_from",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "i",
                                      "arguments": []
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "_to",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "j",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "tmp",
                                "arguments": []
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "+=",
                        "left": {
                          "type": "Identifier",
                          "name": "i"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "32",
                          "subdenomination": null
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "+=",
                        "left": {
                          "type": "Identifier",
                          "name": "j"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "32",
                          "subdenomination": null
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "_to"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "safer_ecrecover",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_hash",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint8"
                },
                "name": "_v",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_r",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_s",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": "_success",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "_recoveredAddress",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bool"
                    },
                    "name": "ret",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "address"
                    },
                    "name": "addr",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "size"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "HexNumber",
                            "value": "0x40"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "size",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "_hash",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "size",
                              "arguments": []
                            },
                            {
                              "type": "DecimalNumber",
                              "value": "32"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "_v",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "size",
                              "arguments": []
                            },
                            {
                              "type": "DecimalNumber",
                              "value": "64"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "_r",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "size",
                              "arguments": []
                            },
                            {
                              "type": "DecimalNumber",
                              "value": "96"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "_s",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "ret"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "call",
                        "arguments": [
                          {
                            "type": "DecimalNumber",
                            "value": "3000"
                          },
                          {
                            "type": "DecimalNumber",
                            "value": "1"
                          },
                          {
                            "type": "DecimalNumber",
                            "value": "0"
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "size",
                            "arguments": []
                          },
                          {
                            "type": "DecimalNumber",
                            "value": "128"
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "size",
                            "arguments": []
                          },
                          {
                            "type": "DecimalNumber",
                            "value": "32"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "addr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "size",
                            "arguments": []
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "TupleExpression",
                "components": [
                  {
                    "type": "Identifier",
                    "name": "ret"
                  },
                  {
                    "type": "Identifier",
                    "name": "addr"
                  }
                ],
                "isArray": false
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "ecrecovery",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_hash",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "_sig",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": "_success",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "_recoveredAddress",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes32"
                    },
                    "name": "r",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes32"
                    },
                    "name": "s",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint8"
                    },
                    "name": "v",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "!=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "_sig"
                    },
                    "memberName": "length"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "65",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "TupleExpression",
                      "components": [
                        {
                          "type": "BooleanLiteral",
                          "value": false
                        },
                        {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "ElementaryTypeName",
                            "name": "address"
                          },
                          "arguments": [
                            {
                              "type": "NumberLiteral",
                              "number": "0",
                              "subdenomination": null
                            }
                          ],
                          "names": []
                        }
                      ],
                      "isArray": false
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "r"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "_sig",
                                "arguments": []
                              },
                              {
                                "type": "DecimalNumber",
                                "value": "32"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "s"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "_sig",
                                "arguments": []
                              },
                              {
                                "type": "DecimalNumber",
                                "value": "64"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "v"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "byte",
                        "arguments": [
                          {
                            "type": "DecimalNumber",
                            "value": "0"
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mload",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "_sig",
                                    "arguments": []
                                  },
                                  {
                                    "type": "DecimalNumber",
                                    "value": "96"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "v"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "27",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "+=",
                        "left": {
                          "type": "Identifier",
                          "name": "v"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "27",
                          "subdenomination": null
                        }
                      }
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "&&",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "!=",
                    "left": {
                      "type": "Identifier",
                      "name": "v"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "27",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "!=",
                    "left": {
                      "type": "Identifier",
                      "name": "v"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "28",
                      "subdenomination": null
                    }
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "TupleExpression",
                      "components": [
                        {
                          "type": "BooleanLiteral",
                          "value": false
                        },
                        {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "ElementaryTypeName",
                            "name": "address"
                          },
                          "arguments": [
                            {
                              "type": "NumberLiteral",
                              "number": "0",
                              "subdenomination": null
                            }
                          ],
                          "names": []
                        }
                      ],
                      "isArray": false
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "safer_ecrecover"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "_hash"
                  },
                  {
                    "type": "Identifier",
                    "name": "v"
                  },
                  {
                    "type": "Identifier",
                    "name": "r"
                  },
                  {
                    "type": "Identifier",
                    "name": "s"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "safeMemoryCleaner",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "fmem"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "HexNumber",
                            "value": "0x40"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "codecopy",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "fmem",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "codesize",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "sub",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "msize",
                              "arguments": []
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "fmem",
                              "arguments": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "IVAMP",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "totalSupply",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "rebase",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "int256"
                },
                "name": "supplyDelta",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        }
      ],
      "kind": "interface"
    },
    {
      "type": "ContractDefinition",
      "name": "VAMPRebaser",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "usingProvable"
          },
          "arguments": null
        },
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "Ownable"
          },
          "arguments": null
        }
      ],
      "subNodes": [
        {
          "type": "UsingForDeclaration",
          "typeName": {
            "type": "ElementaryTypeName",
            "name": "uint256"
          },
          "libraryName": "SafeMath"
        },
        {
          "type": "UsingForDeclaration",
          "typeName": {
            "type": "ElementaryTypeName",
            "name": "int256"
          },
          "libraryName": "SafeMathInt"
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "BASE",
              "expression": {
                "type": "BinaryOperation",
                "operator": "**",
                "left": {
                  "type": "NumberLiteral",
                  "number": "10",
                  "subdenomination": null
                },
                "right": {
                  "type": "NumberLiteral",
                  "number": "18",
                  "subdenomination": null
                }
              },
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "BinaryOperation",
            "operator": "**",
            "left": {
              "type": "NumberLiteral",
              "number": "10",
              "subdenomination": null
            },
            "right": {
              "type": "NumberLiteral",
              "number": "18",
              "subdenomination": null
            }
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "minRebaseTimeIntervalSec",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "lastRebaseTimestampSec",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "rebaseWindowOffsetSec",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "rebaseWindowLengthSec",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "epoch",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "rebaseDelay",
              "expression": {
                "type": "NumberLiteral",
                "number": "12",
                "subdenomination": "hours"
              },
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "12",
            "subdenomination": "hours"
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "rebaseActivatedTime",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "bool"
              },
              "name": "rebasePrepared",
              "expression": {
                "type": "BooleanLiteral",
                "value": false
              },
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "BooleanLiteral",
            "value": false
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "priceCumulativeLast",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address"
              },
              "name": "gov",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address"
              },
              "name": "pendingGov",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address"
              },
              "name": "VAMPAddress",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address"
              },
              "name": "reserveToken",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address"
              },
              "name": "uniswap_pair",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint32"
              },
              "name": "blockTimestampLast",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "int256"
              },
              "name": "rebaserMultiplier",
              "expression": {
                "type": "NumberLiteral",
                "number": "10",
                "subdenomination": null
              },
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "10",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "bool"
              },
              "name": "isToken0",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "bool"
              },
              "name": "rebasingActive",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "rebaseFloor",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "rebaseCeiling",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "int256"
              },
              "name": "rebaseUpPriceUpVolRate",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "int256"
              },
              "name": "rebaseUpPriceDownVolRate",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "int256"
              },
              "name": "rebaseDownPriceUpVolRate",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "int256"
              },
              "name": "rebaseDownPriceDownVolRate",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "int256"
              },
              "name": "twapUp",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "int256"
              },
              "name": "twapDown",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "IVAMP"
              },
              "name": "VAMP",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "IOracle"
              },
              "name": "marketOracle",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "currentVolumeUsd",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "lastVolumeUsd",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "lastTwapPrice",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "currentTwapPrice",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "EventDefinition",
          "name": "NewPendingGov",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "oldPendingGov",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "newPendingGov",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "NewGov",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "oldGov",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "newGov",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "RebaseStatus",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "timestap",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": "rebasing",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "twap",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "floor",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "ceiling",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "RebaseCompleted",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "int256"
                },
                "name": "rebaseAmount",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "int256"
                },
                "name": "rebaseRate",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "lastVolume",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "lastPrice",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "LogNewUsdVolume",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "newVolume",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "RebasePrepared",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "newVolume",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "currentTwapPrice",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "ModifierDefinition",
          "name": "onlyGov",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "msg"
                        },
                        "memberName": "sender"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "gov"
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "Identifier",
                  "name": "_"
                }
              }
            ]
          }
        },
        {
          "type": "FunctionDefinition",
          "name": "constructor",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "VAMPAddress_",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "VAMP"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "IVAMP"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "VAMPAddress_"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "gov"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "msg"
                    },
                    "memberName": "sender"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "rebaseFloor"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "96",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "**",
                      "left": {
                        "type": "NumberLiteral",
                        "number": "10",
                        "subdenomination": null
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "16",
                        "subdenomination": null
                      }
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "rebaseCeiling"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "106",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "**",
                      "left": {
                        "type": "NumberLiteral",
                        "number": "10",
                        "subdenomination": null
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "16",
                        "subdenomination": null
                      }
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "rebaseUpPriceUpVolRate"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "5",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "**",
                      "left": {
                        "type": "NumberLiteral",
                        "number": "10",
                        "subdenomination": null
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "15",
                        "subdenomination": null
                      }
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "rebaseUpPriceDownVolRate"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "25",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "**",
                      "left": {
                        "type": "NumberLiteral",
                        "number": "10",
                        "subdenomination": null
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "14",
                        "subdenomination": null
                      }
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "rebaseDownPriceUpVolRate"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "12",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "**",
                      "left": {
                        "type": "NumberLiteral",
                        "number": "10",
                        "subdenomination": null
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "14",
                        "subdenomination": null
                      }
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "rebaseDownPriceDownVolRate"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "UnaryOperation",
                      "operator": "-",
                      "subExpression": {
                        "type": "NumberLiteral",
                        "number": "5",
                        "subdenomination": null
                      },
                      "isPrefix": true
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "**",
                      "left": {
                        "type": "NumberLiteral",
                        "number": "10",
                        "subdenomination": null
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "15",
                        "subdenomination": null
                      }
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "twapUp"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "25",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "**",
                      "left": {
                        "type": "NumberLiteral",
                        "number": "10",
                        "subdenomination": null
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "14",
                        "subdenomination": null
                      }
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "twapDown"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "UnaryOperation",
                      "operator": "-",
                      "subExpression": {
                        "type": "NumberLiteral",
                        "number": "25",
                        "subdenomination": null
                      },
                      "isPrefix": true
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "**",
                      "left": {
                        "type": "NumberLiteral",
                        "number": "10",
                        "subdenomination": null
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "14",
                        "subdenomination": null
                      }
                    }
                  }
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [],
          "isConstructor": true,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "setMarketOracle",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "IOracle"
                },
                "name": "marketOracle_",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "marketOracle"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "marketOracle_"
                  }
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyOwner",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "setRebaserMultiplier",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "int256"
                },
                "name": "_amount",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "rebaserMultiplier"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "_amount"
                  }
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyOwner",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "activate_rebasing",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "_volume",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "rebasingActive"
                  },
                  "right": {
                    "type": "BooleanLiteral",
                    "value": true
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "lastTwapPrice"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "marketOracle"
                      },
                      "memberName": "getData"
                    },
                    "arguments": [],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "rebaseActivatedTime"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "now"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "marketOracle"
                    },
                    "memberName": "update"
                  },
                  "arguments": [],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "lastVolumeUsd"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "_volume"
                  }
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyOwner",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "__callback",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "_myid",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "_result",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "msg"
                        },
                        "memberName": "sender"
                      },
                      "right": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "provable_cbAddress"
                        },
                        "arguments": [],
                        "names": []
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Revert at callback"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "currentVolumeUsd"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "parseInt"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "_result"
                      },
                      {
                        "type": "NumberLiteral",
                        "number": "4",
                        "subdenomination": null
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "rebasePrepared"
                  },
                  "right": {
                    "type": "BooleanLiteral",
                    "value": true
                  }
                }
              },
              {
                "type": "EmitStatement",
                "eventCall": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "RebasePrepared"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_result"
                    },
                    {
                      "type": "Identifier",
                      "name": "currentTwapPrice"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "calcRebaseAmount",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": "posPriceChange",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": "posVolChange",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "totalSupply",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "int256"
                },
                "name": "rebaseAmount",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "int256"
                },
                "name": "rebaseRate",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                    "type": "Identifier",
                    "name": "currentVolumeUsd"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "Identifier",
                        "name": "posPriceChange"
                      },
                      "TrueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "rebaseRate"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "twapUp"
                              }
                            }
                          }
                        ]
                      },
                      "FalseBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "rebaseRate"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "twapDown"
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                },
                "FalseBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": "&&",
                        "left": {
                          "type": "Identifier",
                          "name": "posPriceChange"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "posVolChange"
                        }
                      },
                      "TrueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "rebaseRate"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "rebaseUpPriceUpVolRate"
                              }
                            }
                          }
                        ]
                      },
                      "FalseBody": {
                        "type": "IfStatement",
                        "condition": {
                          "type": "BinaryOperation",
                          "operator": "&&",
                          "left": {
                            "type": "Identifier",
                            "name": "posPriceChange"
                          },
                          "right": {
                            "type": "UnaryOperation",
                            "operator": "!",
                            "subExpression": {
                              "type": "Identifier",
                              "name": "posVolChange"
                            },
                            "isPrefix": true
                          }
                        },
                        "TrueBody": {
                          "type": "Block",
                          "statements": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "BinaryOperation",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "rebaseRate"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "rebaseUpPriceDownVolRate"
                                }
                              }
                            }
                          ]
                        },
                        "FalseBody": {
                          "type": "IfStatement",
                          "condition": {
                            "type": "BinaryOperation",
                            "operator": "&&",
                            "left": {
                              "type": "UnaryOperation",
                              "operator": "!",
                              "subExpression": {
                                "type": "Identifier",
                                "name": "posPriceChange"
                              },
                              "isPrefix": true
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "posVolChange"
                            }
                          },
                          "TrueBody": {
                            "type": "Block",
                            "statements": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "BinaryOperation",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "rebaseRate"
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "rebaseDownPriceUpVolRate"
                                  }
                                }
                              }
                            ]
                          },
                          "FalseBody": {
                            "type": "IfStatement",
                            "condition": {
                              "type": "BinaryOperation",
                              "operator": "&&",
                              "left": {
                                "type": "UnaryOperation",
                                "operator": "!",
                                "subExpression": {
                                  "type": "Identifier",
                                  "name": "posPriceChange"
                                },
                                "isPrefix": true
                              },
                              "right": {
                                "type": "UnaryOperation",
                                "operator": "!",
                                "subExpression": {
                                  "type": "Identifier",
                                  "name": "posVolChange"
                                },
                                "isPrefix": true
                              }
                            },
                            "TrueBody": {
                              "type": "Block",
                              "statements": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "rebaseRate"
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "rebaseDownPriceDownVolRate"
                                    }
                                  }
                                }
                              ]
                            },
                            "FalseBody": {
                              "type": "Block",
                              "statements": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "rebaseRate"
                                    },
                                    "right": {
                                      "type": "NumberLiteral",
                                      "number": "0",
                                      "subdenomination": null
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "rebaseAmount"
                                    },
                                    "right": {
                                      "type": "NumberLiteral",
                                      "number": "0",
                                      "subdenomination": null
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "rebaseAmount"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "rebaseRate"
                          },
                          "memberName": "mul"
                        },
                        "arguments": [
                          {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "ElementaryTypeName",
                              "name": "int256"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "totalSupply"
                              }
                            ],
                            "names": []
                          }
                        ],
                        "names": []
                      },
                      "memberName": "div"
                    },
                    "arguments": [
                      {
                        "type": "BinaryOperation",
                        "operator": "**",
                        "left": {
                          "type": "NumberLiteral",
                          "number": "10",
                          "subdenomination": null
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "18",
                          "subdenomination": null
                        }
                      }
                    ],
                    "names": []
                  }
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "_doRebase",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "int256"
                    },
                    "name": "changeInVol",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "int256"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "-",
                      "left": {
                        "type": "Identifier",
                        "name": "currentVolumeUsd"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "lastVolumeUsd"
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bool"
                    },
                    "name": "posVolChange",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "Identifier",
                    "name": "changeInVol"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "int256"
                    },
                    "name": "changeInPrice",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "int256"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "-",
                      "left": {
                        "type": "Identifier",
                        "name": "currentTwapPrice"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "lastTwapPrice"
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bool"
                    },
                    "name": "posPriceChange",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "Identifier",
                    "name": "changeInPrice"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "name": "rebaseAmount",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "int256"
                    },
                    "isStateVar": false,
                    "isIndexed": false,
                    "decl": "[738 727 663 620 600 426 325 305 196]"
                  },
                  {
                    "type": "VariableDeclaration",
                    "name": "rebaseRate",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "int256"
                    },
                    "isStateVar": false,
                    "isIndexed": false,
                    "decl": "[742 727 663 620 600 426 325 305 196]"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "calcRebaseAmount"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "posVolChange"
                    },
                    {
                      "type": "Identifier",
                      "name": "posPriceChange"
                    },
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "VAMP"
                        },
                        "memberName": "totalSupply"
                      },
                      "arguments": [],
                      "names": []
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "VAMP"
                    },
                    "memberName": "rebase"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "rebaseAmount"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "marketOracle"
                    },
                    "memberName": "update"
                  },
                  "arguments": [],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "lastVolumeUsd"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "currentVolumeUsd"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "lastTwapPrice"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "currentTwapPrice"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "lastRebaseTimestampSec"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "block"
                    },
                    "memberName": "timestamp"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "currentTwapPrice"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "rebasePrepared"
                  },
                  "right": {
                    "type": "BooleanLiteral",
                    "value": false
                  }
                }
              },
              {
                "type": "EmitStatement",
                "eventCall": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "RebaseCompleted"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "rebaseAmount"
                    },
                    {
                      "type": "Identifier",
                      "name": "rebaseRate"
                    },
                    {
                      "type": "Identifier",
                      "name": "lastVolumeUsd"
                    },
                    {
                      "type": "Identifier",
                      "name": "lastTwapPrice"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "rebase",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "tx"
                        },
                        "memberName": "origin"
                      },
                      "right": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "msg"
                        },
                        "memberName": "sender"
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": ">",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "block"
                        },
                        "memberName": "timestamp"
                      },
                      "right": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "rebaseActivatedTime"
                          },
                          "memberName": "add"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "rebaseDelay"
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Must wait one period after activating rebase"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": ">",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "block"
                        },
                        "memberName": "timestamp"
                      },
                      "right": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "lastRebaseTimestampSec"
                          },
                          "memberName": "add"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "rebaseDelay"
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Must wait for rebase cooldown"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "&&",
                      "left": {
                        "type": "Identifier",
                        "name": "rebasingActive"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "rebasePrepared"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Rebasing is disabled or not prepared"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "epoch"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "epoch"
                      },
                      "memberName": "add"
                    },
                    "arguments": [
                      {
                        "type": "NumberLiteral",
                        "number": "1",
                        "subdenomination": null
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "&&",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "<",
                    "left": {
                      "type": "Identifier",
                      "name": "rebaseFloor"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "currentTwapPrice"
                    }
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "<",
                    "left": {
                      "type": "Identifier",
                      "name": "currentTwapPrice"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "rebaseCeiling"
                    }
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "EmitStatement",
                      "eventCall": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "RebaseStatus"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "now"
                          },
                          {
                            "type": "BooleanLiteral",
                            "value": false
                          },
                          {
                            "type": "Identifier",
                            "name": "currentTwapPrice"
                          },
                          {
                            "type": "Identifier",
                            "name": "rebaseFloor"
                          },
                          {
                            "type": "Identifier",
                            "name": "rebaseCeiling"
                          }
                        ],
                        "names": []
                      }
                    }
                  ]
                },
                "FalseBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "EmitStatement",
                      "eventCall": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "RebaseStatus"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "now"
                          },
                          {
                            "type": "BooleanLiteral",
                            "value": true
                          },
                          {
                            "type": "Identifier",
                            "name": "currentTwapPrice"
                          },
                          {
                            "type": "Identifier",
                            "name": "rebaseFloor"
                          },
                          {
                            "type": "Identifier",
                            "name": "rebaseCeiling"
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "_doRebase"
                        },
                        "arguments": [],
                        "names": []
                      }
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyOwner",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "prepare_rebase",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "currentTwapPrice"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "marketOracle"
                      },
                      "memberName": "getData"
                    },
                    "arguments": [],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "provable_query"
                  },
                  "arguments": [
                    {
                      "type": "stringLiteral",
                      "value": "URL"
                    },
                    {
                      "type": "stringLiteral",
                      "value": "BKm/7gwT7kf+wtshQJpqYkFV3su8/QNzyNR3HTYxaobe20/SqDQ0EWxw05oMXn9M0Vfb1KauBcqGoZLTkI0+mWvKeH4TwDRquo1OLy2l/1/2ZQjkdraciiUgR0aFq4g6rk24AFxwNhHW08U4WwJVkg=="
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyOwner",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "payable"
        }
      ],
      "kind": "contract"
    }
  ]
}