{
  "type": "SourceUnit",
  "children": [
    {
      "type": "PragmaDirective",
      "name": "solidity",
      "value": "^0.8.12"
    },
    {
      "type": "ContractDefinition",
      "name": "GuestlistedLibrary",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "StructDefinition",
          "name": "Venue",
          "members": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "string"
              },
              "name": "name",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "string"
              },
              "name": "location",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "2",
                    "subdenomination": null
                  }
                },
                "length": null
              },
              "name": "indexes",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "length": null
              },
              "name": "colors",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "length": null
              },
              "name": "djIndexes",
              "storageLocation": null
            }
          ]
        },
        {
          "type": "StructDefinition",
          "name": "DJ",
          "members": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "string"
              },
              "name": "firstName",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "string"
              },
              "name": "lastName",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint"
              },
              "name": "fontSize",
              "storageLocation": null
            }
          ]
        },
        {
          "type": "StructDefinition",
          "name": "TokenData",
          "members": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint"
              },
              "name": "tokenId",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint"
              },
              "name": "deterministicNumber",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint"
              },
              "name": "randomNumber",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint"
              },
              "name": "shapeRandomNumber",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint"
              },
              "name": "shapeIndex",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "string"
              },
              "name": "json",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "string"
              },
              "name": "date",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "string"
              },
              "name": "bg",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "string"
              },
              "name": "color",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "string"
              },
              "name": "shape",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "string"
              },
              "name": "attributes",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "string"
              },
              "name": "customMetadata",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "string"
              },
              "name": "djFullName",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "Venue"
              },
              "name": "venue",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "DJ"
              },
              "name": "dj",
              "storageLocation": null
            }
          ]
        },
        {
          "type": "FunctionDefinition",
          "name": "toString",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "value",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": null,
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                    "type": "Identifier",
                    "name": "value"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "stringLiteral",
                      "value": "0"
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "temp",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "Identifier",
                  "name": "value"
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "digits",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "WhileStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "!=",
                  "left": {
                    "type": "Identifier",
                    "name": "temp"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "UnaryOperation",
                        "operator": "++",
                        "subExpression": {
                          "type": "Identifier",
                          "name": "digits"
                        },
                        "isPrefix": false
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "/=",
                        "left": {
                          "type": "Identifier",
                          "name": "temp"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "10",
                          "subdenomination": null
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "buffer",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "digits"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "WhileStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "!=",
                  "left": {
                    "type": "Identifier",
                    "name": "value"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "-=",
                        "left": {
                          "type": "Identifier",
                          "name": "digits"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "1",
                          "subdenomination": null
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "buffer"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "digits"
                          }
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "ElementaryTypeName",
                            "name": "bytes1"
                          },
                          "arguments": [
                            {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "ElementaryTypeName",
                                "name": "uint8"
                              },
                              "arguments": [
                                {
                                  "type": "BinaryOperation",
                                  "operator": "+",
                                  "left": {
                                    "type": "NumberLiteral",
                                    "number": "48",
                                    "subdenomination": null
                                  },
                                  "right": {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "ElementaryTypeName",
                                      "name": "uint"
                                    },
                                    "arguments": [
                                      {
                                        "type": "BinaryOperation",
                                        "operator": "%",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "value"
                                        },
                                        "right": {
                                          "type": "NumberLiteral",
                                          "number": "10",
                                          "subdenomination": null
                                        }
                                      }
                                    ],
                                    "names": []
                                  }
                                }
                              ],
                              "names": []
                            }
                          ],
                          "names": []
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "/=",
                        "left": {
                          "type": "Identifier",
                          "name": "value"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "10",
                          "subdenomination": null
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "buffer"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        }
      ],
      "kind": "library"
    },
    {
      "type": "ContractDefinition",
      "name": "Base64",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes"
              },
              "name": "TABLE",
              "expression": {
                "type": "stringLiteral",
                "value": "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "stringLiteral",
            "value": "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
          }
        },
        {
          "type": "FunctionDefinition",
          "name": "encode",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "data",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": null,
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "len",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "Identifier",
                    "name": "data"
                  },
                  "memberName": "length"
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                    "type": "Identifier",
                    "name": "len"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "stringLiteral",
                  "value": ""
                },
                "FalseBody": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "encodedLen",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  },
                  "right": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "BinaryOperation",
                        "operator": "/",
                        "left": {
                          "type": "TupleExpression",
                          "components": [
                            {
                              "type": "BinaryOperation",
                              "operator": "+",
                              "left": {
                                "type": "Identifier",
                                "name": "len"
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "2",
                                "subdenomination": null
                              }
                            }
                          ],
                          "isArray": false
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "3",
                          "subdenomination": null
                        }
                      }
                    ],
                    "isArray": false
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "result",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "NewExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    }
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "Identifier",
                        "name": "encodedLen"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "32",
                        "subdenomination": null
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "table",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "Identifier",
                  "name": "TABLE"
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "tablePtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "table",
                            "arguments": []
                          },
                          {
                            "type": "DecimalNumber",
                            "value": "1"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "resultPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "result",
                            "arguments": []
                          },
                          {
                            "type": "DecimalNumber",
                            "value": "32"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyFor",
                      "pre": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "i"
                              }
                            ],
                            "expression": {
                              "type": "DecimalNumber",
                              "value": "0"
                            }
                          }
                        ]
                      },
                      "condition": {
                        "type": "AssemblyExpression",
                        "functionName": "lt",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "i",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "len",
                            "arguments": []
                          }
                        ]
                      },
                      "post": {
                        "type": "AssemblyBlock",
                        "operations": []
                      },
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "i"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "i",
                                  "arguments": []
                                },
                                {
                                  "type": "DecimalNumber",
                                  "value": "3"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "input"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "and",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mload",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "add",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "data",
                                          "arguments": []
                                        },
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "i",
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0xffffff"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "out"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mload",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "tablePtr",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "and",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "shr",
                                          "arguments": [
                                            {
                                              "type": "DecimalNumber",
                                              "value": "18"
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "input",
                                              "arguments": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "HexNumber",
                                          "value": "0x3F"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "out"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "shl",
                              "arguments": [
                                {
                                  "type": "DecimalNumber",
                                  "value": "8"
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "out",
                                  "arguments": []
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "out"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "out",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "and",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "tablePtr",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "and",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "shr",
                                                  "arguments": [
                                                    {
                                                      "type": "DecimalNumber",
                                                      "value": "12"
                                                    },
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "input",
                                                      "arguments": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "HexNumber",
                                                  "value": "0x3F"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "HexNumber",
                                      "value": "0xFF"
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "out"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "shl",
                              "arguments": [
                                {
                                  "type": "DecimalNumber",
                                  "value": "8"
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "out",
                                  "arguments": []
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "out"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "out",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "and",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "tablePtr",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "and",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "shr",
                                                  "arguments": [
                                                    {
                                                      "type": "DecimalNumber",
                                                      "value": "6"
                                                    },
                                                    {
                                                      "type": "AssemblyExpression",
                                                      "functionName": "input",
                                                      "arguments": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "HexNumber",
                                                  "value": "0x3F"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "HexNumber",
                                      "value": "0xFF"
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "out"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "shl",
                              "arguments": [
                                {
                                  "type": "DecimalNumber",
                                  "value": "8"
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "out",
                                  "arguments": []
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "out"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "out",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "and",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "mload",
                                      "arguments": [
                                        {
                                          "type": "AssemblyExpression",
                                          "functionName": "add",
                                          "arguments": [
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "tablePtr",
                                              "arguments": []
                                            },
                                            {
                                              "type": "AssemblyExpression",
                                              "functionName": "and",
                                              "arguments": [
                                                {
                                                  "type": "AssemblyExpression",
                                                  "functionName": "input",
                                                  "arguments": []
                                                },
                                                {
                                                  "type": "HexNumber",
                                                  "value": "0x3F"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "HexNumber",
                                      "value": "0xFF"
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "out"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "shl",
                              "arguments": [
                                {
                                  "type": "DecimalNumber",
                                  "value": "224"
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "out",
                                  "arguments": []
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "resultPtr",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "out",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "resultPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "resultPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "DecimalNumber",
                                  "value": "4"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblySwitch",
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "len",
                            "arguments": []
                          },
                          {
                            "type": "DecimalNumber",
                            "value": "3"
                          }
                        ]
                      },
                      "cases": [
                        {
                          "type": "AssemblyCase",
                          "block": {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mstore",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "resultPtr",
                                        "arguments": []
                                      },
                                      {
                                        "type": "DecimalNumber",
                                        "value": "2"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "shl",
                                    "arguments": [
                                      {
                                        "type": "DecimalNumber",
                                        "value": "240"
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x3d3d"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "value": {
                            "type": "DecimalNumber",
                            "value": "1"
                          }
                        },
                        {
                          "type": "AssemblyCase",
                          "block": {
                            "type": "AssemblyBlock",
                            "operations": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mstore",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "resultPtr",
                                        "arguments": []
                                      },
                                      {
                                        "type": "DecimalNumber",
                                        "value": "1"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "shl",
                                    "arguments": [
                                      {
                                        "type": "DecimalNumber",
                                        "value": "248"
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x3d"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "value": {
                            "type": "DecimalNumber",
                            "value": "2"
                          }
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "result",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "encodedLen",
                          "arguments": []
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "result"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        }
      ],
      "kind": "library"
    },
    {
      "type": "PragmaDirective",
      "name": "solidity",
      "value": "^0.8.12"
    },
    {
      "type": "PragmaDirective",
      "name": "experimental",
      "value": "ABIEncoderV2"
    },
    {
      "type": "ContractDefinition",
      "name": "GuestlistedArt",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "draw",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "GuestlistedLibrary.TokenData"
                },
                "name": "tokenData",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": null,
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint"
                    },
                    "name": "rotate",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "%",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "tokenData"
                    },
                    "memberName": "randomNumber"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "360",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint"
                    },
                    "name": "patternSize",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "150",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint"
                    },
                    "name": "dasharray",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "%",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "tokenData"
                    },
                    "memberName": "randomNumber"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "3",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint"
                    },
                    "name": "scale",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "string"
                    },
                    "name": "drawing",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": null
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "tokenData"
                    },
                    "memberName": "shapeIndex"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "rotate"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "scale"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "8",
                          "subdenomination": null
                        }
                      }
                    }
                  ]
                },
                "FalseBody": {
                  "type": "IfStatement",
                  "condition": {
                    "type": "BinaryOperation",
                    "operator": "==",
                    "left": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "tokenData"
                      },
                      "memberName": "shapeIndex"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "TrueBody": {
                    "type": "Block",
                    "statements": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "BinaryOperation",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "scale"
                          },
                          "right": {
                            "type": "BinaryOperation",
                            "operator": "+",
                            "left": {
                              "type": "BinaryOperation",
                              "operator": "%",
                              "left": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "tokenData"
                                },
                                "memberName": "randomNumber"
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "8",
                                "subdenomination": null
                              }
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "4",
                              "subdenomination": null
                            }
                          }
                        }
                      }
                    ]
                  },
                  "FalseBody": {
                    "type": "IfStatement",
                    "condition": {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "tokenData"
                        },
                        "memberName": "shapeIndex"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "2",
                        "subdenomination": null
                      }
                    },
                    "TrueBody": {
                      "type": "Block",
                      "statements": [
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "BinaryOperation",
                            "operator": "=",
                            "left": {
                              "type": "Identifier",
                              "name": "scale"
                            },
                            "right": {
                              "type": "BinaryOperation",
                              "operator": "+",
                              "left": {
                                "type": "BinaryOperation",
                                "operator": "%",
                                "left": {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "tokenData"
                                  },
                                  "memberName": "randomNumber"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "4",
                                  "subdenomination": null
                                }
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "4",
                                "subdenomination": null
                              }
                            }
                          }
                        }
                      ]
                    },
                    "FalseBody": {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": "==",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "tokenData"
                          },
                          "memberName": "shapeIndex"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "3",
                          "subdenomination": null
                        }
                      },
                      "TrueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "scale"
                              },
                              "right": {
                                "type": "BinaryOperation",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryOperation",
                                  "operator": "%",
                                  "left": {
                                    "type": "MemberAccess",
                                    "expression": {
                                      "type": "Identifier",
                                      "name": "tokenData"
                                    },
                                    "memberName": "randomNumber"
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "4",
                                    "subdenomination": null
                                  }
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "3",
                                  "subdenomination": null
                                }
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "patternSize"
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "210",
                                "subdenomination": null
                              }
                            }
                          }
                        ]
                      },
                      "FalseBody": {
                        "type": "IfStatement",
                        "condition": {
                          "type": "BinaryOperation",
                          "operator": "==",
                          "left": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "tokenData"
                            },
                            "memberName": "shapeIndex"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "4",
                            "subdenomination": null
                          }
                        },
                        "TrueBody": {
                          "type": "Block",
                          "statements": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "BinaryOperation",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "scale"
                                },
                                "right": {
                                  "type": "BinaryOperation",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryOperation",
                                    "operator": "%",
                                    "left": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "tokenData"
                                      },
                                      "memberName": "randomNumber"
                                    },
                                    "right": {
                                      "type": "NumberLiteral",
                                      "number": "5",
                                      "subdenomination": null
                                    }
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "1",
                                    "subdenomination": null
                                  }
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "BinaryOperation",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "patternSize"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "50",
                                  "subdenomination": null
                                }
                              }
                            }
                          ]
                        },
                        "FalseBody": null
                      }
                    }
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "string"
                    },
                    "name": "pattern",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "string"
                  },
                  "arguments": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "abi"
                        },
                        "memberName": "encodePacked"
                      },
                      "arguments": [
                        {
                          "type": "stringLiteral",
                          "value": "<pattern id=\"p-"
                        },
                        {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "GuestlistedLibrary"
                            },
                            "memberName": "toString"
                          },
                          "arguments": [
                            {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "tokenData"
                              },
                              "memberName": "tokenId"
                            }
                          ],
                          "names": []
                        },
                        {
                          "type": "stringLiteral",
                          "value": "\" patternUnits=\"userSpaceOnUse\" width=\""
                        },
                        {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "GuestlistedLibrary"
                            },
                            "memberName": "toString"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "patternSize"
                            }
                          ],
                          "names": []
                        },
                        {
                          "type": "stringLiteral",
                          "value": "\" height=\""
                        },
                        {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "GuestlistedLibrary"
                            },
                            "memberName": "toString"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "patternSize"
                            }
                          ],
                          "names": []
                        },
                        {
                          "type": "stringLiteral",
                          "value": "\" patternTransform=\"scale("
                        },
                        {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "GuestlistedLibrary"
                            },
                            "memberName": "toString"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "scale"
                            }
                          ],
                          "names": []
                        },
                        {
                          "type": "stringLiteral",
                          "value": ") rotate("
                        },
                        {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "GuestlistedLibrary"
                            },
                            "memberName": "toString"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "rotate"
                            }
                          ],
                          "names": []
                        },
                        {
                          "type": "stringLiteral",
                          "value": ")\"><rect width=\"100%\" height=\"100%\" fill=\"#"
                        },
                        {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "tokenData"
                          },
                          "memberName": "bg"
                        },
                        {
                          "type": "stringLiteral",
                          "value": "\"/>"
                        }
                      ],
                      "names": []
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "tokenData"
                    },
                    "memberName": "shapeIndex"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint"
                          },
                          "name": "position",
                          "storageLocation": null
                        }
                      ],
                      "initialValue": {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                          "type": "BinaryOperation",
                          "operator": "%",
                          "left": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "tokenData"
                            },
                            "memberName": "randomNumber"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "70",
                            "subdenomination": null
                          }
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "30",
                          "subdenomination": null
                        }
                      }
                    },
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint"
                          },
                          "name": "radius",
                          "storageLocation": null
                        }
                      ],
                      "initialValue": {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                          "type": "BinaryOperation",
                          "operator": "%",
                          "left": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "tokenData"
                            },
                            "memberName": "randomNumber"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "50",
                            "subdenomination": null
                          }
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "20",
                          "subdenomination": null
                        }
                      }
                    },
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "string"
                          },
                          "name": "random",
                          "storageLocation": "memory"
                        }
                      ],
                      "initialValue": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "ElementaryTypeName",
                          "name": "string"
                        },
                        "arguments": [
                          {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "abi"
                              },
                              "memberName": "encodePacked"
                            },
                            "arguments": [
                              {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "GuestlistedLibrary"
                                  },
                                  "memberName": "toString"
                                },
                                "arguments": [
                                  {
                                    "type": "BinaryOperation",
                                    "operator": "%",
                                    "left": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "tokenData"
                                      },
                                      "memberName": "randomNumber"
                                    },
                                    "right": {
                                      "type": "NumberLiteral",
                                      "number": "10",
                                      "subdenomination": null
                                    }
                                  }
                                ],
                                "names": []
                              },
                              {
                                "type": "stringLiteral",
                                "value": ".2"
                              }
                            ],
                            "names": []
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "pattern"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "ElementaryTypeName",
                            "name": "string"
                          },
                          "arguments": [
                            {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "abi"
                                },
                                "memberName": "encodePacked"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "pattern"
                                },
                                {
                                  "type": "stringLiteral",
                                  "value": "<circle cx=\""
                                },
                                {
                                  "type": "FunctionCall",
                                  "expression": {
                                    "type": "MemberAccess",
                                    "expression": {
                                      "type": "Identifier",
                                      "name": "GuestlistedLibrary"
                                    },
                                    "memberName": "toString"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "position"
                                    }
                                  ],
                                  "names": []
                                },
                                {
                                  "type": "stringLiteral",
                                  "value": "\" cy=\""
                                },
                                {
                                  "type": "FunctionCall",
                                  "expression": {
                                    "type": "MemberAccess",
                                    "expression": {
                                      "type": "Identifier",
                                      "name": "GuestlistedLibrary"
                                    },
                                    "memberName": "toString"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "position"
                                    }
                                  ],
                                  "names": []
                                },
                                {
                                  "type": "stringLiteral",
                                  "value": "\" r=\""
                                },
                                {
                                  "type": "FunctionCall",
                                  "expression": {
                                    "type": "MemberAccess",
                                    "expression": {
                                      "type": "Identifier",
                                      "name": "GuestlistedLibrary"
                                    },
                                    "memberName": "toString"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "radius"
                                    }
                                  ],
                                  "names": []
                                },
                                {
                                  "type": "stringLiteral",
                                  "value": "\" fill=\"none\" stroke=\"#"
                                },
                                {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "tokenData"
                                  },
                                  "memberName": "color"
                                },
                                {
                                  "type": "stringLiteral",
                                  "value": "\" stroke-width=\"0.2\"/>"
                                },
                                {
                                  "type": "stringLiteral",
                                  "value": "<circle cx=\""
                                },
                                {
                                  "type": "FunctionCall",
                                  "expression": {
                                    "type": "MemberAccess",
                                    "expression": {
                                      "type": "Identifier",
                                      "name": "GuestlistedLibrary"
                                    },
                                    "memberName": "toString"
                                  },
                                  "arguments": [
                                    {
                                      "type": "BinaryOperation",
                                      "operator": "-",
                                      "left": {
                                        "type": "BinaryOperation",
                                        "operator": "+",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "position"
                                        },
                                        "right": {
                                          "type": "Identifier",
                                          "name": "radius"
                                        }
                                      },
                                      "right": {
                                        "type": "NumberLiteral",
                                        "number": "50",
                                        "subdenomination": null
                                      }
                                    }
                                  ],
                                  "names": []
                                },
                                {
                                  "type": "stringLiteral",
                                  "value": "\" cy=\""
                                },
                                {
                                  "type": "FunctionCall",
                                  "expression": {
                                    "type": "MemberAccess",
                                    "expression": {
                                      "type": "Identifier",
                                      "name": "GuestlistedLibrary"
                                    },
                                    "memberName": "toString"
                                  },
                                  "arguments": [
                                    {
                                      "type": "BinaryOperation",
                                      "operator": "-",
                                      "left": {
                                        "type": "BinaryOperation",
                                        "operator": "+",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "position"
                                        },
                                        "right": {
                                          "type": "Identifier",
                                          "name": "radius"
                                        }
                                      },
                                      "right": {
                                        "type": "NumberLiteral",
                                        "number": "50",
                                        "subdenomination": null
                                      }
                                    }
                                  ],
                                  "names": []
                                },
                                {
                                  "type": "stringLiteral",
                                  "value": "\" r=\""
                                },
                                {
                                  "type": "FunctionCall",
                                  "expression": {
                                    "type": "MemberAccess",
                                    "expression": {
                                      "type": "Identifier",
                                      "name": "GuestlistedLibrary"
                                    },
                                    "memberName": "toString"
                                  },
                                  "arguments": [
                                    {
                                      "type": "BinaryOperation",
                                      "operator": "/",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "radius"
                                      },
                                      "right": {
                                        "type": "NumberLiteral",
                                        "number": "2",
                                        "subdenomination": null
                                      }
                                    }
                                  ],
                                  "names": []
                                },
                                {
                                  "type": "stringLiteral",
                                  "value": "\" fill=\"none\" stroke=\"#"
                                }
                              ],
                              "names": []
                            }
                          ],
                          "names": []
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "pattern"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "ElementaryTypeName",
                            "name": "string"
                          },
                          "arguments": [
                            {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "abi"
                                },
                                "memberName": "encodePacked"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "pattern"
                                },
                                {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "tokenData"
                                  },
                                  "memberName": "color"
                                },
                                {
                                  "type": "stringLiteral",
                                  "value": "\" stroke-width=\"0.2\"><animate attributeName=\"stroke-width\" values=\"0.2;"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "random"
                                },
                                {
                                  "type": "stringLiteral",
                                  "value": ";0.2\" dur=\"20s\" calcMode=\"paced\" repeatCount=\"indefinite\"/></circle>"
                                }
                              ],
                              "names": []
                            }
                          ],
                          "names": []
                        }
                      }
                    }
                  ]
                },
                "FalseBody": {
                  "type": "IfStatement",
                  "condition": {
                    "type": "BinaryOperation",
                    "operator": "==",
                    "left": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "tokenData"
                      },
                      "memberName": "shapeIndex"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "TrueBody": {
                    "type": "Block",
                    "statements": [
                      {
                        "type": "VariableDeclarationStatement",
                        "variables": [
                          {
                            "type": "VariableDeclaration",
                            "typeName": {
                              "type": "ElementaryTypeName",
                              "name": "uint"
                            },
                            "name": "position",
                            "storageLocation": null
                          }
                        ],
                        "initialValue": {
                          "type": "BinaryOperation",
                          "operator": "%",
                          "left": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "tokenData"
                            },
                            "memberName": "randomNumber"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "100",
                            "subdenomination": null
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "BinaryOperation",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "pattern"
                          },
                          "right": {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "ElementaryTypeName",
                              "name": "string"
                            },
                            "arguments": [
                              {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "abi"
                                  },
                                  "memberName": "encodePacked"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "pattern"
                                  },
                                  {
                                    "type": "stringLiteral",
                                    "value": "<polygon points=\"50,16 85,85 15,85 50,16\" fill=\"none\" stroke=\"#"
                                  },
                                  {
                                    "type": "MemberAccess",
                                    "expression": {
                                      "type": "Identifier",
                                      "name": "tokenData"
                                    },
                                    "memberName": "color"
                                  },
                                  {
                                    "type": "stringLiteral",
                                    "value": "\" stroke-width=\"0.3\"/><polygon points=\""
                                  },
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "GuestlistedLibrary"
                                      },
                                      "memberName": "toString"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "position"
                                      }
                                    ],
                                    "names": []
                                  },
                                  {
                                    "type": "stringLiteral",
                                    "value": ",16 85,85 15,85 50,16\" fill=\"none\" stroke=\"#"
                                  },
                                  {
                                    "type": "MemberAccess",
                                    "expression": {
                                      "type": "Identifier",
                                      "name": "tokenData"
                                    },
                                    "memberName": "color"
                                  },
                                  {
                                    "type": "stringLiteral",
                                    "value": "\" stroke-width=\"0.3\"><animate id=\"polygon_animation_1_"
                                  },
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "GuestlistedLibrary"
                                      },
                                      "memberName": "toString"
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "tokenData"
                                        },
                                        "memberName": "tokenId"
                                      }
                                    ],
                                    "names": []
                                  },
                                  {
                                    "type": "stringLiteral",
                                    "value": "\" begin=\"0s;polygon_animation_2_"
                                  },
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "GuestlistedLibrary"
                                      },
                                      "memberName": "toString"
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "tokenData"
                                        },
                                        "memberName": "tokenId"
                                      }
                                    ],
                                    "names": []
                                  },
                                  {
                                    "type": "stringLiteral",
                                    "value": ".end\" attributeName=\"points\"  from=\""
                                  }
                                ],
                                "names": []
                              }
                            ],
                            "names": []
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "BinaryOperation",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "pattern"
                          },
                          "right": {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "ElementaryTypeName",
                              "name": "string"
                            },
                            "arguments": [
                              {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "abi"
                                  },
                                  "memberName": "encodePacked"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "pattern"
                                  },
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "GuestlistedLibrary"
                                      },
                                      "memberName": "toString"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "position"
                                      }
                                    ],
                                    "names": []
                                  },
                                  {
                                    "type": "stringLiteral",
                                    "value": ",16 85,85 15,85 50,16\" to=\""
                                  },
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "GuestlistedLibrary"
                                      },
                                      "memberName": "toString"
                                    },
                                    "arguments": [
                                      {
                                        "type": "BinaryOperation",
                                        "operator": "+",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "position"
                                        },
                                        "right": {
                                          "type": "NumberLiteral",
                                          "number": "50",
                                          "subdenomination": null
                                        }
                                      }
                                    ],
                                    "names": []
                                  },
                                  {
                                    "type": "stringLiteral",
                                    "value": ",16 85,85 15,85 50,16\"  dur=\"60s\" calcMode=\"paced\"/><animate id=\"polygon_animation_2_"
                                  },
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "GuestlistedLibrary"
                                      },
                                      "memberName": "toString"
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "tokenData"
                                        },
                                        "memberName": "tokenId"
                                      }
                                    ],
                                    "names": []
                                  },
                                  {
                                    "type": "stringLiteral",
                                    "value": "\" begin=\"polygon_animation_1_"
                                  },
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "GuestlistedLibrary"
                                      },
                                      "memberName": "toString"
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "tokenData"
                                        },
                                        "memberName": "tokenId"
                                      }
                                    ],
                                    "names": []
                                  },
                                  {
                                    "type": "stringLiteral",
                                    "value": ".end\" attributeName=\"points\" from=\""
                                  },
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "GuestlistedLibrary"
                                      },
                                      "memberName": "toString"
                                    },
                                    "arguments": [
                                      {
                                        "type": "BinaryOperation",
                                        "operator": "+",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "position"
                                        },
                                        "right": {
                                          "type": "NumberLiteral",
                                          "number": "50",
                                          "subdenomination": null
                                        }
                                      }
                                    ],
                                    "names": []
                                  },
                                  {
                                    "type": "stringLiteral",
                                    "value": ",16 85,85 15,85 50,16\" to=\""
                                  },
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "GuestlistedLibrary"
                                      },
                                      "memberName": "toString"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "position"
                                      }
                                    ],
                                    "names": []
                                  },
                                  {
                                    "type": "stringLiteral",
                                    "value": ",16 85,85 15,85 50,16\"  dur=\"60s\" calcMode=\"paced\"/></polygon><line x1=\""
                                  }
                                ],
                                "names": []
                              }
                            ],
                            "names": []
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "BinaryOperation",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "pattern"
                          },
                          "right": {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "ElementaryTypeName",
                              "name": "string"
                            },
                            "arguments": [
                              {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "abi"
                                  },
                                  "memberName": "encodePacked"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "pattern"
                                  },
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "GuestlistedLibrary"
                                      },
                                      "memberName": "toString"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "position"
                                      }
                                    ],
                                    "names": []
                                  },
                                  {
                                    "type": "stringLiteral",
                                    "value": "\" y1=\"16\" x2=\"15\" y2=\"85\" stroke=\"#"
                                  },
                                  {
                                    "type": "MemberAccess",
                                    "expression": {
                                      "type": "Identifier",
                                      "name": "tokenData"
                                    },
                                    "memberName": "color"
                                  },
                                  {
                                    "type": "stringLiteral",
                                    "value": "\" stroke-width=\"0.3\" stroke-dasharray=\""
                                  },
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "GuestlistedLibrary"
                                      },
                                      "memberName": "toString"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "dasharray"
                                      }
                                    ],
                                    "names": []
                                  },
                                  {
                                    "type": "stringLiteral",
                                    "value": "\"><animate id=\"line_animation_1_"
                                  },
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "GuestlistedLibrary"
                                      },
                                      "memberName": "toString"
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "tokenData"
                                        },
                                        "memberName": "tokenId"
                                      }
                                    ],
                                    "names": []
                                  },
                                  {
                                    "type": "stringLiteral",
                                    "value": "\" begin=\"0s;line_animation_2_"
                                  },
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "GuestlistedLibrary"
                                      },
                                      "memberName": "toString"
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "tokenData"
                                        },
                                        "memberName": "tokenId"
                                      }
                                    ],
                                    "names": []
                                  },
                                  {
                                    "type": "stringLiteral",
                                    "value": ".end\" attributeName=\"x1\"  from=\""
                                  },
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "GuestlistedLibrary"
                                      },
                                      "memberName": "toString"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "position"
                                      }
                                    ],
                                    "names": []
                                  }
                                ],
                                "names": []
                              }
                            ],
                            "names": []
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "BinaryOperation",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "pattern"
                          },
                          "right": {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "ElementaryTypeName",
                              "name": "string"
                            },
                            "arguments": [
                              {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "abi"
                                  },
                                  "memberName": "encodePacked"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "pattern"
                                  },
                                  {
                                    "type": "stringLiteral",
                                    "value": "\" to=\""
                                  },
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "GuestlistedLibrary"
                                      },
                                      "memberName": "toString"
                                    },
                                    "arguments": [
                                      {
                                        "type": "BinaryOperation",
                                        "operator": "+",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "position"
                                        },
                                        "right": {
                                          "type": "NumberLiteral",
                                          "number": "50",
                                          "subdenomination": null
                                        }
                                      }
                                    ],
                                    "names": []
                                  },
                                  {
                                    "type": "stringLiteral",
                                    "value": "\"  dur=\"60s\" calcMode=\"paced\"/><animate id=\"line_animation_2_"
                                  },
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "GuestlistedLibrary"
                                      },
                                      "memberName": "toString"
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "tokenData"
                                        },
                                        "memberName": "tokenId"
                                      }
                                    ],
                                    "names": []
                                  },
                                  {
                                    "type": "stringLiteral",
                                    "value": "\" begin=\"line_animation_1_"
                                  },
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "GuestlistedLibrary"
                                      },
                                      "memberName": "toString"
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "tokenData"
                                        },
                                        "memberName": "tokenId"
                                      }
                                    ],
                                    "names": []
                                  },
                                  {
                                    "type": "stringLiteral",
                                    "value": ".end\" attributeName=\"x1\" from=\""
                                  },
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "GuestlistedLibrary"
                                      },
                                      "memberName": "toString"
                                    },
                                    "arguments": [
                                      {
                                        "type": "BinaryOperation",
                                        "operator": "+",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "position"
                                        },
                                        "right": {
                                          "type": "NumberLiteral",
                                          "number": "50",
                                          "subdenomination": null
                                        }
                                      }
                                    ],
                                    "names": []
                                  },
                                  {
                                    "type": "stringLiteral",
                                    "value": "\" to=\""
                                  },
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "GuestlistedLibrary"
                                      },
                                      "memberName": "toString"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "position"
                                      }
                                    ],
                                    "names": []
                                  },
                                  {
                                    "type": "stringLiteral",
                                    "value": "\"  dur=\"60s\" calcMode=\"paced\"/></line>"
                                  }
                                ],
                                "names": []
                              }
                            ],
                            "names": []
                          }
                        }
                      }
                    ]
                  },
                  "FalseBody": {
                    "type": "IfStatement",
                    "condition": {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "tokenData"
                        },
                        "memberName": "shapeIndex"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "2",
                        "subdenomination": null
                      }
                    },
                    "TrueBody": {
                      "type": "Block",
                      "statements": [
                        {
                          "type": "VariableDeclarationStatement",
                          "variables": [
                            {
                              "type": "VariableDeclaration",
                              "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint"
                              },
                              "name": "size",
                              "storageLocation": null
                            }
                          ],
                          "initialValue": {
                            "type": "BinaryOperation",
                            "operator": "+",
                            "left": {
                              "type": "BinaryOperation",
                              "operator": "%",
                              "left": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "tokenData"
                                },
                                "memberName": "randomNumber"
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "100",
                                "subdenomination": null
                              }
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "40",
                              "subdenomination": null
                            }
                          }
                        },
                        {
                          "type": "VariableDeclarationStatement",
                          "variables": [
                            {
                              "type": "VariableDeclaration",
                              "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint"
                              },
                              "name": "random",
                              "storageLocation": null
                            }
                          ],
                          "initialValue": {
                            "type": "BinaryOperation",
                            "operator": "%",
                            "left": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "tokenData"
                              },
                              "memberName": "randomNumber"
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "50",
                              "subdenomination": null
                            }
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "BinaryOperation",
                            "operator": "=",
                            "left": {
                              "type": "Identifier",
                              "name": "pattern"
                            },
                            "right": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "ElementaryTypeName",
                                "name": "string"
                              },
                              "arguments": [
                                {
                                  "type": "FunctionCall",
                                  "expression": {
                                    "type": "MemberAccess",
                                    "expression": {
                                      "type": "Identifier",
                                      "name": "abi"
                                    },
                                    "memberName": "encodePacked"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "pattern"
                                    },
                                    {
                                      "type": "stringLiteral",
                                      "value": "<rect x=\"0\" y=\"0\" width=\""
                                    },
                                    {
                                      "type": "FunctionCall",
                                      "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "GuestlistedLibrary"
                                        },
                                        "memberName": "toString"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "size"
                                        }
                                      ],
                                      "names": []
                                    },
                                    {
                                      "type": "stringLiteral",
                                      "value": "\" height=\""
                                    },
                                    {
                                      "type": "FunctionCall",
                                      "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "GuestlistedLibrary"
                                        },
                                        "memberName": "toString"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "size"
                                        }
                                      ],
                                      "names": []
                                    },
                                    {
                                      "type": "stringLiteral",
                                      "value": "\" fill=\"none\" stroke=\"#"
                                    },
                                    {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "tokenData"
                                      },
                                      "memberName": "color"
                                    },
                                    {
                                      "type": "stringLiteral",
                                      "value": "\" stroke-width=\"0.5\"><animate attributeName=\"x\" values=\"0;50;0\" dur=\"60s\" repeatCount=\"indefinite\" calcMode=\"paced\" /></rect><rect x=\"0\" y=\"0\" width=\""
                                    },
                                    {
                                      "type": "FunctionCall",
                                      "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "GuestlistedLibrary"
                                        },
                                        "memberName": "toString"
                                      },
                                      "arguments": [
                                        {
                                          "type": "BinaryOperation",
                                          "operator": "+",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "size"
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "random"
                                          }
                                        }
                                      ],
                                      "names": []
                                    },
                                    {
                                      "type": "stringLiteral",
                                      "value": "\" height=\""
                                    },
                                    {
                                      "type": "FunctionCall",
                                      "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "GuestlistedLibrary"
                                        },
                                        "memberName": "toString"
                                      },
                                      "arguments": [
                                        {
                                          "type": "BinaryOperation",
                                          "operator": "+",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "size"
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "random"
                                          }
                                        }
                                      ],
                                      "names": []
                                    },
                                    {
                                      "type": "stringLiteral",
                                      "value": "\" fill=\"none\" stroke=\"#"
                                    },
                                    {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "tokenData"
                                      },
                                      "memberName": "color"
                                    },
                                    {
                                      "type": "stringLiteral",
                                      "value": "\" stroke-width=\"0.5\"/>"
                                    }
                                  ],
                                  "names": []
                                }
                              ],
                              "names": []
                            }
                          }
                        }
                      ]
                    },
                    "FalseBody": {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": "==",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "tokenData"
                          },
                          "memberName": "shapeIndex"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "3",
                          "subdenomination": null
                        }
                      },
                      "TrueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "VariableDeclarationStatement",
                            "variables": [
                              {
                                "type": "VariableDeclaration",
                                "typeName": {
                                  "type": "ElementaryTypeName",
                                  "name": "uint"
                                },
                                "name": "size",
                                "storageLocation": null
                              }
                            ],
                            "initialValue": {
                              "type": "BinaryOperation",
                              "operator": "+",
                              "left": {
                                "type": "BinaryOperation",
                                "operator": "%",
                                "left": {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "tokenData"
                                  },
                                  "memberName": "randomNumber"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "100",
                                  "subdenomination": null
                                }
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "50",
                                "subdenomination": null
                              }
                            }
                          },
                          {
                            "type": "VariableDeclarationStatement",
                            "variables": [
                              {
                                "type": "VariableDeclaration",
                                "typeName": {
                                  "type": "ElementaryTypeName",
                                  "name": "uint"
                                },
                                "name": "position",
                                "storageLocation": null
                              }
                            ],
                            "initialValue": {
                              "type": "BinaryOperation",
                              "operator": "+",
                              "left": {
                                "type": "BinaryOperation",
                                "operator": "%",
                                "left": {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "tokenData"
                                  },
                                  "memberName": "randomNumber"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "50",
                                  "subdenomination": null
                                }
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "10",
                                "subdenomination": null
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "pattern"
                              },
                              "right": {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "ElementaryTypeName",
                                  "name": "string"
                                },
                                "arguments": [
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "abi"
                                      },
                                      "memberName": "encodePacked"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "pattern"
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "<rect x=\"0\" y=\"0\" width=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "size"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\" height=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "size"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\" fill=\"none\" stroke=\"#"
                                      },
                                      {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "tokenData"
                                        },
                                        "memberName": "color"
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\" stroke-width=\"0.5\"></rect><rect x=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "position"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\" y=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "position"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\" width=\""
                                      }
                                    ],
                                    "names": []
                                  }
                                ],
                                "names": []
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "pattern"
                              },
                              "right": {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "ElementaryTypeName",
                                  "name": "string"
                                },
                                "arguments": [
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "abi"
                                      },
                                      "memberName": "encodePacked"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "pattern"
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "size"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\" height=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "size"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\" fill=\"none\" stroke=\"#"
                                      },
                                      {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "tokenData"
                                        },
                                        "memberName": "color"
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\" stroke-width=\"0.5\"><animate attributeName=\"x\" values=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "position"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": ";0;"
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "position"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\" dur=\"60s\" repeatCount=\"indefinite\" calcMode=\"paced\" /><animate attributeName=\"y\" values=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "position"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": ";0;"
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "position"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\" dur=\"60s\" repeatCount=\"indefinite\" calcMode=\"paced\" /></rect>"
                                      }
                                    ],
                                    "names": []
                                  }
                                ],
                                "names": []
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "pattern"
                              },
                              "right": {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "ElementaryTypeName",
                                  "name": "string"
                                },
                                "arguments": [
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "abi"
                                      },
                                      "memberName": "encodePacked"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "pattern"
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "<line x1=\"0\" y1=\"0\" x2=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "position"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\" y2=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "position"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\" stroke=\"#"
                                      },
                                      {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "tokenData"
                                        },
                                        "memberName": "color"
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\" stroke-width=\"0.3\" stroke-dasharray=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "dasharray"
                                          }
                                        ],
                                        "names": []
                                      }
                                    ],
                                    "names": []
                                  }
                                ],
                                "names": []
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "pattern"
                              },
                              "right": {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "ElementaryTypeName",
                                  "name": "string"
                                },
                                "arguments": [
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "abi"
                                      },
                                      "memberName": "encodePacked"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "pattern"
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\"><animate attributeName=\"x2\" values=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "position"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": ";0;"
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "position"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\"  dur=\"60s\" repeatCount=\"indefinite\" calcMode=\"paced\"/><animate attributeName=\"y2\" values=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "position"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": ";0;"
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "position"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\"  dur=\"60s\" repeatCount=\"indefinite\" calcMode=\"paced\"/></line>"
                                      }
                                    ],
                                    "names": []
                                  }
                                ],
                                "names": []
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "pattern"
                              },
                              "right": {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "ElementaryTypeName",
                                  "name": "string"
                                },
                                "arguments": [
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "abi"
                                      },
                                      "memberName": "encodePacked"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "pattern"
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "<line x1=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "size"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\" y1=\"0\" x2=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "BinaryOperation",
                                            "operator": "+",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "position"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "size"
                                            }
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\" y2=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "position"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\" stroke=\"#"
                                      },
                                      {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "tokenData"
                                        },
                                        "memberName": "color"
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\" stroke-width=\"0.3\" stroke-dasharray=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "dasharray"
                                          }
                                        ],
                                        "names": []
                                      }
                                    ],
                                    "names": []
                                  }
                                ],
                                "names": []
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "pattern"
                              },
                              "right": {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "ElementaryTypeName",
                                  "name": "string"
                                },
                                "arguments": [
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "abi"
                                      },
                                      "memberName": "encodePacked"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "pattern"
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\">"
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "<animate attributeName=\"x2\" values=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "BinaryOperation",
                                            "operator": "+",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "position"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "size"
                                            }
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": ";"
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "size"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": ";"
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "BinaryOperation",
                                            "operator": "+",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "position"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "size"
                                            }
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\"  dur=\"60s\" repeatCount=\"indefinite\" calcMode=\"paced\"/><animate attributeName=\"y2\" values=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "position"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": ";0;"
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "position"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\"  dur=\"60s\" repeatCount=\"indefinite\" calcMode=\"paced\"/></line>"
                                      }
                                    ],
                                    "names": []
                                  }
                                ],
                                "names": []
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "pattern"
                              },
                              "right": {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "ElementaryTypeName",
                                  "name": "string"
                                },
                                "arguments": [
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "abi"
                                      },
                                      "memberName": "encodePacked"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "pattern"
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "<line x1=\"0\" y1=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "size"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\" x2=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "position"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\" y2=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "BinaryOperation",
                                            "operator": "+",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "position"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "size"
                                            }
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\" stroke=\"#"
                                      },
                                      {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "tokenData"
                                        },
                                        "memberName": "color"
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\" stroke-width=\"0.3\" stroke-dasharray=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "dasharray"
                                          }
                                        ],
                                        "names": []
                                      }
                                    ],
                                    "names": []
                                  }
                                ],
                                "names": []
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "pattern"
                              },
                              "right": {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "ElementaryTypeName",
                                  "name": "string"
                                },
                                "arguments": [
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "abi"
                                      },
                                      "memberName": "encodePacked"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "pattern"
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\"><animate attributeName=\"x2\" values=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "position"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": ";0;"
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "position"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\"  dur=\"60s\" repeatCount=\"indefinite\" calcMode=\"paced\"/><animate attributeName=\"y2\" values=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "BinaryOperation",
                                            "operator": "+",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "position"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "size"
                                            }
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": ";"
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "size"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": ";"
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "BinaryOperation",
                                            "operator": "+",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "position"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "size"
                                            }
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\"  dur=\"60s\" repeatCount=\"indefinite\" calcMode=\"paced\"/></line>"
                                      }
                                    ],
                                    "names": []
                                  }
                                ],
                                "names": []
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "pattern"
                              },
                              "right": {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "ElementaryTypeName",
                                  "name": "string"
                                },
                                "arguments": [
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "abi"
                                      },
                                      "memberName": "encodePacked"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "pattern"
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "<line x1=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "size"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\" y1=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "size"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\" x2=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "BinaryOperation",
                                            "operator": "+",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "position"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "size"
                                            }
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\" y2=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "BinaryOperation",
                                            "operator": "+",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "position"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "size"
                                            }
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\" stroke=\"#"
                                      },
                                      {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "tokenData"
                                        },
                                        "memberName": "color"
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\" stroke-width=\"0.3\" stroke-dasharray=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "dasharray"
                                          }
                                        ],
                                        "names": []
                                      }
                                    ],
                                    "names": []
                                  }
                                ],
                                "names": []
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "pattern"
                              },
                              "right": {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "ElementaryTypeName",
                                  "name": "string"
                                },
                                "arguments": [
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "abi"
                                      },
                                      "memberName": "encodePacked"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "pattern"
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\"><animate attributeName=\"x2\" values=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "BinaryOperation",
                                            "operator": "+",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "position"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "size"
                                            }
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": ";"
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "size"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": ";"
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "BinaryOperation",
                                            "operator": "+",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "position"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "size"
                                            }
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\"  dur=\"60s\" repeatCount=\"indefinite\" calcMode=\"paced\"/><animate attributeName=\"y2\" values=\""
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "BinaryOperation",
                                            "operator": "+",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "position"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "size"
                                            }
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": ";"
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "size"
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": ";"
                                      },
                                      {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "GuestlistedLibrary"
                                          },
                                          "memberName": "toString"
                                        },
                                        "arguments": [
                                          {
                                            "type": "BinaryOperation",
                                            "operator": "+",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "position"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "size"
                                            }
                                          }
                                        ],
                                        "names": []
                                      },
                                      {
                                        "type": "stringLiteral",
                                        "value": "\"  dur=\"60s\" repeatCount=\"indefinite\" calcMode=\"paced\"/></line>"
                                      }
                                    ],
                                    "names": []
                                  }
                                ],
                                "names": []
                              }
                            }
                          }
                        ]
                      },
                      "FalseBody": {
                        "type": "IfStatement",
                        "condition": {
                          "type": "BinaryOperation",
                          "operator": "==",
                          "left": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "tokenData"
                            },
                            "memberName": "shapeIndex"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "4",
                            "subdenomination": null
                          }
                        },
                        "TrueBody": {
                          "type": "Block",
                          "statements": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "BinaryOperation",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "pattern"
                                },
                                "right": {
                                  "type": "FunctionCall",
                                  "expression": {
                                    "type": "ElementaryTypeName",
                                    "name": "string"
                                  },
                                  "arguments": [
                                    {
                                      "type": "FunctionCall",
                                      "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "abi"
                                        },
                                        "memberName": "encodePacked"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "pattern"
                                        },
                                        {
                                          "type": "stringLiteral",
                                          "value": "<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"50\" fill=\"none\" stroke=\"#"
                                        },
                                        {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "tokenData"
                                          },
                                          "memberName": "color"
                                        },
                                        {
                                          "type": "stringLiteral",
                                          "value": "\" stroke-width=\"1\"/>"
                                        }
                                      ],
                                      "names": []
                                    }
                                  ],
                                  "names": []
                                }
                              }
                            }
                          ]
                        },
                        "FalseBody": null
                      }
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "pattern"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "string"
                    },
                    "arguments": [
                      {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "abi"
                          },
                          "memberName": "encodePacked"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "pattern"
                          },
                          {
                            "type": "stringLiteral",
                            "value": "</pattern>"
                          }
                        ],
                        "names": []
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "drawing"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "string"
                    },
                    "arguments": [
                      {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "abi"
                          },
                          "memberName": "encodePacked"
                        },
                        "arguments": [
                          {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "GuestlistedLibrary"
                              },
                              "memberName": "toString"
                            },
                            "arguments": [
                              {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "tokenData"
                                },
                                "memberName": "tokenId"
                              }
                            ],
                            "names": []
                          },
                          {
                            "type": "stringLiteral",
                            "value": ") #"
                          },
                          {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "tokenData"
                            },
                            "memberName": "bg"
                          },
                          {
                            "type": "stringLiteral",
                            "value": ";}.dj, .venue,.id, .location, .date {fill: #"
                          }
                        ],
                        "names": []
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "drawing"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "string"
                    },
                    "arguments": [
                      {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "abi"
                          },
                          "memberName": "encodePacked"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "drawing"
                          },
                          {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "tokenData"
                            },
                            "memberName": "color"
                          },
                          {
                            "type": "stringLiteral",
                            "value": ";font-family:Arial;font-weight:700;}.venue{font-size:60px;}.date{font-size:40px;}.location{font-size:30px;}.id{font-size:20px;}.figure{fill:none;stroke: #"
                          },
                          {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "tokenData"
                            },
                            "memberName": "color"
                          },
                          {
                            "type": "stringLiteral",
                            "value": ";} .bg { transform-origin: center; animation: spin 120s linear infinite; }@keyframes spin{0% { transform: rotate(0deg) scale(1);} 50%{ transform: rotate(180deg) scale(2);} 100%{ transform: rotate(360deg) scale(1);}}</style>"
                          },
                          {
                            "type": "Identifier",
                            "name": "pattern"
                          },
                          {
                            "type": "stringLiteral",
                            "value": "</defs>"
                          }
                        ],
                        "names": []
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "drawing"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "string"
                    },
                    "arguments": [
                      {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "abi"
                          },
                          "memberName": "encodePacked"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "drawing"
                          },
                          {
                            "type": "stringLiteral",
                            "value": "<rect class=\"bg\" x=\"-300\" y=\"-425\" width=\"1200\" height=\"1700\"/><text class=\"id\" x=\"75\" y=\"70\"><tspan x=\"75\" dy=\"0\">#"
                          },
                          {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "GuestlistedLibrary"
                              },
                              "memberName": "toString"
                            },
                            "arguments": [
                              {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "tokenData"
                                },
                                "memberName": "tokenId"
                              }
                            ],
                            "names": []
                          },
                          {
                            "type": "stringLiteral",
                            "value": "</tspan></text><text x=\"70\" y=\"80\" class=\"dj\"><tspan x=\"70\" dy=\"0\" alignment-baseline=\"hanging\" style=\"font-size:"
                          },
                          {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "GuestlistedLibrary"
                              },
                              "memberName": "toString"
                            },
                            "arguments": [
                              {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "tokenData"
                                  },
                                  "memberName": "dj"
                                },
                                "memberName": "fontSize"
                              }
                            ],
                            "names": []
                          },
                          {
                            "type": "stringLiteral",
                            "value": "\">"
                          },
                          {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "tokenData"
                              },
                              "memberName": "dj"
                            },
                            "memberName": "firstName"
                          },
                          {
                            "type": "stringLiteral",
                            "value": "</tspan><tspan x=\"70\" dy=\""
                          },
                          {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "GuestlistedLibrary"
                              },
                              "memberName": "toString"
                            },
                            "arguments": [
                              {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "tokenData"
                                  },
                                  "memberName": "dj"
                                },
                                "memberName": "fontSize"
                              }
                            ],
                            "names": []
                          },
                          {
                            "type": "stringLiteral",
                            "value": "\" alignment-baseline=\"hanging\" style=\"font-size:"
                          },
                          {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "GuestlistedLibrary"
                              },
                              "memberName": "toString"
                            },
                            "arguments": [
                              {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "tokenData"
                                  },
                                  "memberName": "dj"
                                },
                                "memberName": "fontSize"
                              }
                            ],
                            "names": []
                          },
                          {
                            "type": "stringLiteral",
                            "value": "\">"
                          }
                        ],
                        "names": []
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "drawing"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "string"
                    },
                    "arguments": [
                      {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "abi"
                          },
                          "memberName": "encodePacked"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "drawing"
                          },
                          {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "tokenData"
                              },
                              "memberName": "dj"
                            },
                            "memberName": "lastName"
                          },
                          {
                            "type": "stringLiteral",
                            "value": "</tspan></text><text class=\"date\" text-anchor=\"end\" x=\"530\" y=\"650\">"
                          },
                          {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "tokenData"
                            },
                            "memberName": "date"
                          },
                          {
                            "type": "stringLiteral",
                            "value": "</text><text class=\"venue\" text-anchor=\"end\" x=\"530\" y=\"720\">"
                          },
                          {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "tokenData"
                              },
                              "memberName": "venue"
                            },
                            "memberName": "name"
                          },
                          {
                            "type": "stringLiteral",
                            "value": "</text><text class=\"location\" text-anchor=\"end\" x=\"530\" y=\"770\">"
                          },
                          {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "tokenData"
                              },
                              "memberName": "venue"
                            },
                            "memberName": "location"
                          },
                          {
                            "type": "stringLiteral",
                            "value": "</text></svg>"
                          }
                        ],
                        "names": []
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "drawing"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "Base64"
                      },
                      "memberName": "encode"
                    },
                    "arguments": [
                      {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "ElementaryTypeName",
                          "name": "bytes"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "drawing"
                          }
                        ],
                        "names": []
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "arguments": [
                  {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "abi"
                      },
                      "memberName": "encodePacked"
                    },
                    "arguments": [
                      {
                        "type": "stringLiteral",
                        "value": "data:image/svg+xml;base64,"
                      },
                      {
                        "type": "Identifier",
                        "name": "drawing"
                      }
                    ],
                    "names": []
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "constructor",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": []
          },
          "visibility": "default",
          "modifiers": [],
          "isConstructor": true,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        }
      ],
      "kind": "contract"
    }
  ]
}