{
  "type": "SourceUnit",
  "children": [
    {
      "type": "PragmaDirective",
      "name": "solidity",
      "value": "0.6.12"
    },
    {
      "type": "ContractDefinition",
      "name": "EnumerableSet",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "StructDefinition",
          "name": "AddressSet",
          "members": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "length": null
              },
              "name": "_values",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "Mapping",
                "keyType": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "valueType": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                }
              },
              "name": "_indexes",
              "storageLocation": null
            }
          ]
        },
        {
          "type": "FunctionDefinition",
          "name": "add",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "AddressSet"
                },
                "name": "set",
                "storageLocation": "storage",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "value",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "IfStatement",
                "condition": {
                  "type": "UnaryOperation",
                  "operator": "!",
                  "subExpression": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "contains"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "set"
                      },
                      {
                        "type": "Identifier",
                        "name": "value"
                      }
                    ],
                    "names": []
                  },
                  "isPrefix": true
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "set"
                            },
                            "memberName": "_values"
                          },
                          "memberName": "push"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "value"
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "set"
                            },
                            "memberName": "_indexes"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "value"
                          }
                        },
                        "right": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "set"
                            },
                            "memberName": "_values"
                          },
                          "memberName": "length"
                        }
                      }
                    },
                    {
                      "type": "BooleanLiteral",
                      "value": true
                    }
                  ]
                },
                "FalseBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "BooleanLiteral",
                      "value": false
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "remove",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "AddressSet"
                },
                "name": "set",
                "storageLocation": "storage",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "value",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "valueIndex",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "set"
                    },
                    "memberName": "_indexes"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "value"
                  }
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "!=",
                  "left": {
                    "type": "Identifier",
                    "name": "valueIndex"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint256"
                          },
                          "name": "toDeleteIndex",
                          "storageLocation": null
                        }
                      ],
                      "initialValue": {
                        "type": "BinaryOperation",
                        "operator": "-",
                        "left": {
                          "type": "Identifier",
                          "name": "valueIndex"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "1",
                          "subdenomination": null
                        }
                      }
                    },
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint256"
                          },
                          "name": "lastIndex",
                          "storageLocation": null
                        }
                      ],
                      "initialValue": {
                        "type": "BinaryOperation",
                        "operator": "-",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "set"
                            },
                            "memberName": "_values"
                          },
                          "memberName": "length"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "1",
                          "subdenomination": null
                        }
                      }
                    },
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "address"
                          },
                          "name": "lastvalue",
                          "storageLocation": null
                        }
                      ],
                      "initialValue": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "set"
                          },
                          "memberName": "_values"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "lastIndex"
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "set"
                            },
                            "memberName": "_values"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "toDeleteIndex"
                          }
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "lastvalue"
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "set"
                            },
                            "memberName": "_indexes"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "lastvalue"
                          }
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "toDeleteIndex"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "1",
                            "subdenomination": null
                          }
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "set"
                            },
                            "memberName": "_values"
                          },
                          "memberName": "pop"
                        },
                        "arguments": [],
                        "names": []
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "UnaryOperation",
                        "operator": "delete",
                        "subExpression": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "set"
                            },
                            "memberName": "_indexes"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "value"
                          }
                        },
                        "isPrefix": true
                      }
                    },
                    {
                      "type": "BooleanLiteral",
                      "value": true
                    }
                  ]
                },
                "FalseBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "BooleanLiteral",
                      "value": false
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "contains",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "AddressSet"
                },
                "name": "set",
                "storageLocation": "storage",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "value",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "BinaryOperation",
                "operator": "!=",
                "left": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "set"
                    },
                    "memberName": "_indexes"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "value"
                  }
                },
                "right": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "length",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "AddressSet"
                },
                "name": "set",
                "storageLocation": "storage",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "MemberAccess",
                "expression": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "Identifier",
                    "name": "set"
                  },
                  "memberName": "_values"
                },
                "memberName": "length"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "at",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "AddressSet"
                },
                "name": "set",
                "storageLocation": "storage",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "index",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": ">",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "set"
                          },
                          "memberName": "_values"
                        },
                        "memberName": "length"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "index"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "EnumerableSet: index out of bounds"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IndexAccess",
                "base": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "Identifier",
                    "name": "set"
                  },
                  "memberName": "_values"
                },
                "index": {
                  "type": "Identifier",
                  "name": "index"
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        }
      ],
      "kind": "library"
    },
    {
      "type": "ContractDefinition",
      "name": "IWhitelist",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "address_belongs",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "_who",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "getUserWallets",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "_which",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "address"
                  },
                  "length": null
                },
                "name": null,
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        }
      ],
      "kind": "interface"
    },
    {
      "type": "ContractDefinition",
      "name": "IERC20Token",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "totalSupply",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "balanceOf",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "_owner",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        }
      ],
      "kind": "interface"
    },
    {
      "type": "ContractDefinition",
      "name": "IGovernanceProxy",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "trigger",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "contr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "params",
                "storageLocation": "calldata",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "acceptGovernanceAddress",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": [],
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        }
      ],
      "kind": "interface"
    },
    {
      "type": "ContractDefinition",
      "name": "Ownable",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address"
              },
              "name": "_owner",
              "expression": null,
              "visibility": "private",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "EventDefinition",
          "name": "OwnershipTransferred",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "previousOwner",
                "isStateVar": false,
                "isIndexed": true
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "newOwner",
                "isStateVar": false,
                "isIndexed": true
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "FunctionDefinition",
          "name": "constructor",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "_owner"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "msg"
                    },
                    "memberName": "sender"
                  }
                }
              },
              {
                "type": "EmitStatement",
                "eventCall": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "OwnershipTransferred"
                  },
                  "arguments": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "ElementaryTypeName",
                        "name": "address"
                      },
                      "arguments": [
                        {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      ],
                      "names": []
                    },
                    {
                      "type": "Identifier",
                      "name": "_owner"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": true,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "owner",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "Identifier",
                "name": "_owner"
              }
            ]
          },
          "visibility": "public",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "ModifierDefinition",
          "name": "onlyOwner",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "isOwner"
                      },
                      "arguments": [],
                      "names": []
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Not Owner"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "Identifier",
                  "name": "_"
                }
              }
            ]
          }
        },
        {
          "type": "FunctionDefinition",
          "name": "isOwner",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "Identifier",
                    "name": "msg"
                  },
                  "memberName": "sender"
                },
                "right": {
                  "type": "Identifier",
                  "name": "_owner"
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "renounceOwnership",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "EmitStatement",
                "eventCall": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "OwnershipTransferred"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_owner"
                    },
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "ElementaryTypeName",
                        "name": "address"
                      },
                      "arguments": [
                        {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      ],
                      "names": []
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "_owner"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "address"
                    },
                    "arguments": [
                      {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      }
                    ],
                    "names": []
                  }
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyOwner",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "transferOwnership",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "newOwner",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "_transferOwnership"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "newOwner"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyOwner",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "_transferOwnership",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "newOwner",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "!=",
                      "left": {
                        "type": "Identifier",
                        "name": "newOwner"
                      },
                      "right": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "ElementaryTypeName",
                          "name": "address"
                        },
                        "arguments": [
                          {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Zero address not allowed"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "EmitStatement",
                "eventCall": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "OwnershipTransferred"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_owner"
                    },
                    {
                      "type": "Identifier",
                      "name": "newOwner"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "_owner"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "newOwner"
                  }
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "Governance",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "Ownable"
          },
          "arguments": null
        }
      ],
      "subNodes": [
        {
          "type": "UsingForDeclaration",
          "typeName": {
            "type": "UserDefinedTypeName",
            "namePath": "EnumerableSet.AddressSet"
          },
          "libraryName": "EnumerableSet"
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "EnumerableSet.AddressSet"
              },
              "name": "walletsCEO",
              "expression": null,
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "requiredCEO",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "IGovernanceProxy"
              },
              "name": "governanceProxy",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "IERC20Token"
                },
                "length": {
                  "type": "NumberLiteral",
                  "number": "4",
                  "subdenomination": null
                }
              },
              "name": "tokenContract",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "IERC20Token"
                },
                "length": {
                  "type": "NumberLiteral",
                  "number": "4",
                  "subdenomination": null
                }
              },
              "name": "escrowContract",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "length": {
                  "type": "NumberLiteral",
                  "number": "4",
                  "subdenomination": null
                }
              },
              "name": "circulationSupply",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "length": {
                  "type": "NumberLiteral",
                  "number": "4",
                  "subdenomination": null
                }
              },
              "name": "circulationSupplyUpdated",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "IWhitelist"
              },
              "name": "whitelist",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "closeTime",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "expeditedLevel",
              "expression": {
                "type": "NumberLiteral",
                "number": "10",
                "subdenomination": null
              },
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "10",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "absoluteLevel",
              "expression": {
                "type": "NumberLiteral",
                "number": "90",
                "subdenomination": null
              },
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "90",
            "subdenomination": null
          }
        },
        {
          "type": "EnumDefinition",
          "name": "Vote",
          "members": [
            {
              "type": "EnumValue",
              "name": "None"
            },
            {
              "type": "EnumValue",
              "name": "Yea"
            },
            {
              "type": "EnumValue",
              "name": "Nay"
            }
          ]
        },
        {
          "type": "EnumDefinition",
          "name": "Status",
          "members": [
            {
              "type": "EnumValue",
              "name": "New"
            },
            {
              "type": "EnumValue",
              "name": "Canceled"
            },
            {
              "type": "EnumValue",
              "name": "Approved"
            },
            {
              "type": "EnumValue",
              "name": "Rejected"
            },
            {
              "type": "EnumValue",
              "name": "Pending"
            }
          ]
        },
        {
          "type": "StructDefinition",
          "name": "Rule",
          "members": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address"
              },
              "name": "contr",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint8"
                },
                "length": {
                  "type": "NumberLiteral",
                  "number": "4",
                  "subdenomination": null
                }
              },
              "name": "majority",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "string"
              },
              "name": "funcAbi",
              "storageLocation": null
            }
          ]
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "Rule"
                },
                "length": null
              },
              "name": "rules",
              "expression": null,
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StructDefinition",
          "name": "Ballot",
          "members": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "closeVote",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "ruleId",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes"
              },
              "name": "args",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "Status"
              },
              "name": "status",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address"
              },
              "name": "creator",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "length": {
                  "type": "NumberLiteral",
                  "number": "4",
                  "subdenomination": null
                }
              },
              "name": "votesYea",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "length": {
                  "type": "NumberLiteral",
                  "number": "4",
                  "subdenomination": null
                }
              },
              "name": "totalVotes",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "length": null
              },
              "name": "participant",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "processedParticipants",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "Mapping",
                "keyType": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "valueType": {
                  "type": "UserDefinedTypeName",
                  "namePath": "Vote"
                }
              },
              "name": "votes",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "Mapping",
                "keyType": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "valueType": {
                  "type": "Mapping",
                  "keyType": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "valueType": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  }
                }
              },
              "name": "power",
              "storageLocation": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "ceoParticipate",
              "storageLocation": null
            }
          ]
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "Ballot"
                },
                "length": null
              },
              "name": "ballots",
              "expression": null,
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "unprocessedBallot",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "Mapping",
                "keyType": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "valueType": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                }
              },
              "name": "blockedWallets",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "Mapping",
                "keyType": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "valueType": {
                  "type": "Mapping",
                  "keyType": {
                    "type": "ElementaryTypeName",
                    "name": "address"
                  },
                  "valueType": {
                    "type": "ElementaryTypeName",
                    "name": "bool"
                  }
                }
              },
              "name": "isInEscrow",
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "Mapping",
                "keyType": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "valueType": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "address"
                  },
                  "length": null
                }
              },
              "name": "excluded",
              "expression": null,
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "EventDefinition",
          "name": "AddRule",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "contractAddress",
                "isStateVar": false,
                "isIndexed": true
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "funcAbi",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint8"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  }
                },
                "name": "majorMain",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "SetNewAddress",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "previousAddress",
                "isStateVar": false,
                "isIndexed": true
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "newAddress",
                "isStateVar": false,
                "isIndexed": true
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "BlockWallet",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "walletAddress",
                "isStateVar": false,
                "isIndexed": true
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": "isAdded",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "AddBallot",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "creator",
                "isStateVar": false,
                "isIndexed": true
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "ruleId",
                "isStateVar": false,
                "isIndexed": true
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "ballotId",
                "isStateVar": false,
                "isIndexed": true
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "ExpeditedBallot",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "ballotId",
                "isStateVar": false,
                "isIndexed": true
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "closeTime",
                "isStateVar": false,
                "isIndexed": true
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "ApplyBallot",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "ruleId",
                "isStateVar": false,
                "isIndexed": true
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "ballotId",
                "isStateVar": false,
                "isIndexed": true
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "NewVote",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "voter",
                "isStateVar": false,
                "isIndexed": true
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "primary",
                "isStateVar": false,
                "isIndexed": true
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "ballotId",
                "isStateVar": false,
                "isIndexed": true
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "ChangeVote",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "voter",
                "isStateVar": false,
                "isIndexed": true
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "primary",
                "isStateVar": false,
                "isIndexed": true
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "ballotId",
                "isStateVar": false,
                "isIndexed": true
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "PosableMajority",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "ballotId",
                "isStateVar": false,
                "isIndexed": true
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "CEOWallet",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "wallet",
                "isStateVar": false,
                "isIndexed": true
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": "add",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "ModifierDefinition",
          "name": "onlyCEO",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "walletsCEO"
                        },
                        "memberName": "contains"
                      },
                      "arguments": [
                        {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "msg"
                          },
                          "memberName": "sender"
                        }
                      ],
                      "names": []
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Not CEO"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "Identifier",
                  "name": "_"
                }
              }
            ]
          }
        },
        {
          "type": "FunctionDefinition",
          "name": "constructor",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "CEO_wallet",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "!=",
                      "left": {
                        "type": "Identifier",
                        "name": "CEO_wallet"
                      },
                      "right": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "ElementaryTypeName",
                          "name": "address"
                        },
                        "arguments": [
                          {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Zero address not allowed"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "rules"
                    },
                    "memberName": "push"
                  },
                  "arguments": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "Rule"
                      },
                      "arguments": [
                        {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "ElementaryTypeName",
                            "name": "address"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "this"
                            }
                          ],
                          "names": []
                        },
                        {
                          "type": "TupleExpression",
                          "components": [
                            {
                              "type": "NumberLiteral",
                              "number": "90",
                              "subdenomination": null
                            },
                            {
                              "type": "NumberLiteral",
                              "number": "0",
                              "subdenomination": null
                            },
                            {
                              "type": "NumberLiteral",
                              "number": "0",
                              "subdenomination": null
                            },
                            {
                              "type": "NumberLiteral",
                              "number": "0",
                              "subdenomination": null
                            }
                          ],
                          "isArray": true
                        },
                        {
                          "type": "stringLiteral",
                          "value": "addRule(address,uint8[4],string)"
                        }
                      ],
                      "names": []
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "walletsCEO"
                    },
                    "memberName": "add"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "CEO_wallet"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "requiredCEO"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  }
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [],
          "isConstructor": true,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "addCEOWallet",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "CEO_wallet",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "!=",
                      "left": {
                        "type": "Identifier",
                        "name": "CEO_wallet"
                      },
                      "right": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "ElementaryTypeName",
                          "name": "address"
                        },
                        "arguments": [
                          {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Zero address not allowed"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "walletsCEO"
                    },
                    "memberName": "add"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "CEO_wallet"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "requiredCEO"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "walletsCEO"
                      },
                      "memberName": "length"
                    },
                    "arguments": [],
                    "names": []
                  }
                }
              },
              {
                "type": "EmitStatement",
                "eventCall": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "CEOWallet"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "CEO_wallet"
                    },
                    {
                      "type": "BooleanLiteral",
                      "value": true
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyCEO",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "removeCEOWallet",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "CEO_wallet",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "!=",
                      "left": {
                        "type": "Identifier",
                        "name": "CEO_wallet"
                      },
                      "right": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "ElementaryTypeName",
                          "name": "address"
                        },
                        "arguments": [
                          {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Zero address not allowed"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": ">",
                      "left": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "walletsCEO"
                          },
                          "memberName": "length"
                        },
                        "arguments": [],
                        "names": []
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "1",
                        "subdenomination": null
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Should left at least one CEO wallet"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "walletsCEO"
                    },
                    "memberName": "remove"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "CEO_wallet"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "requiredCEO"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "walletsCEO"
                      },
                      "memberName": "length"
                    },
                    "arguments": [],
                    "names": []
                  }
                }
              },
              {
                "type": "EmitStatement",
                "eventCall": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "CEOWallet"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "CEO_wallet"
                    },
                    {
                      "type": "BooleanLiteral",
                      "value": false
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyCEO",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "setRequiredCEO",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "req",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<=",
                      "left": {
                        "type": "Identifier",
                        "name": "req"
                      },
                      "right": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "walletsCEO"
                          },
                          "memberName": "length"
                        },
                        "arguments": [],
                        "names": []
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "More then added wallets"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "requiredCEO"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "req"
                  }
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyCEO",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "getWalletsCEO",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "address"
                  },
                  "length": null
                },
                "name": "wallets",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "MemberAccess",
                "expression": {
                  "type": "Identifier",
                  "name": "walletsCEO"
                },
                "memberName": "_values"
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "acceptGovernanceAddress",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "governanceProxy"
                    },
                    "memberName": "acceptGovernanceAddress"
                  },
                  "arguments": [],
                  "names": []
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyOwner",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "getExcluded",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "index",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "address"
                  },
                  "length": null
                },
                "name": null,
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "&&",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": ">=",
                        "left": {
                          "type": "Identifier",
                          "name": "index"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "<",
                        "left": {
                          "type": "Identifier",
                          "name": "index"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "4",
                          "subdenomination": null
                        }
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Wrong index"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IndexAccess",
                "base": {
                  "type": "Identifier",
                  "name": "excluded"
                },
                "index": {
                  "type": "Identifier",
                  "name": "index"
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "addExcluded",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "index",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "address"
                  },
                  "length": null
                },
                "name": "wallet",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "&&",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": ">=",
                        "left": {
                          "type": "Identifier",
                          "name": "index"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "<",
                        "left": {
                          "type": "Identifier",
                          "name": "index"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "4",
                          "subdenomination": null
                        }
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Wrong index"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "wallet"
                    },
                    "memberName": "length"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "BinaryOperation",
                            "operator": "!=",
                            "left": {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "wallet"
                              },
                              "index": {
                                "type": "Identifier",
                                "name": "i"
                              }
                            },
                            "right": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "ElementaryTypeName",
                                "name": "address"
                              },
                              "arguments": [
                                {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                }
                              ],
                              "names": []
                            }
                          },
                          {
                            "type": "stringLiteral",
                            "value": "Zero address not allowed"
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "excluded"
                            },
                            "index": {
                              "type": "Identifier",
                              "name": "index"
                            }
                          },
                          "memberName": "push"
                        },
                        "arguments": [
                          {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "wallet"
                            },
                            "index": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          }
                        ],
                        "names": []
                      }
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyOwner",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "removeExcluded",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "index",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "wallet",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "&&",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": ">=",
                        "left": {
                          "type": "Identifier",
                          "name": "index"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "<",
                        "left": {
                          "type": "Identifier",
                          "name": "index"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "4",
                          "subdenomination": null
                        }
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Wrong index"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "!=",
                      "left": {
                        "type": "Identifier",
                        "name": "wallet"
                      },
                      "right": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "ElementaryTypeName",
                          "name": "address"
                        },
                        "arguments": [
                          {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Zero address not allowed"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint"
                    },
                    "name": "len",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "excluded"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "index"
                    }
                  },
                  "memberName": "length"
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "len"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": "==",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "excluded"
                            },
                            "index": {
                              "type": "Identifier",
                              "name": "index"
                            }
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "i"
                          }
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "wallet"
                        }
                      },
                      "TrueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "IndexAccess",
                                  "base": {
                                    "type": "Identifier",
                                    "name": "excluded"
                                  },
                                  "index": {
                                    "type": "Identifier",
                                    "name": "index"
                                  }
                                },
                                "index": {
                                  "type": "Identifier",
                                  "name": "i"
                                }
                              },
                              "right": {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "IndexAccess",
                                  "base": {
                                    "type": "Identifier",
                                    "name": "excluded"
                                  },
                                  "index": {
                                    "type": "Identifier",
                                    "name": "index"
                                  }
                                },
                                "index": {
                                  "type": "BinaryOperation",
                                  "operator": "-",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "len"
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "1",
                                    "subdenomination": null
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "IndexAccess",
                                  "base": {
                                    "type": "Identifier",
                                    "name": "excluded"
                                  },
                                  "index": {
                                    "type": "Identifier",
                                    "name": "index"
                                  }
                                },
                                "memberName": "pop"
                              },
                              "arguments": [],
                              "names": []
                            }
                          }
                        ]
                      },
                      "FalseBody": null
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyOwner",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "setAbsoluteLevel",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "level",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "&&",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": ">",
                        "left": {
                          "type": "Identifier",
                          "name": "level"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "50",
                          "subdenomination": null
                        }
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "<=",
                        "left": {
                          "type": "Identifier",
                          "name": "level"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "100",
                          "subdenomination": null
                        }
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Wrong level"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "absoluteLevel"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "level"
                  }
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyOwner",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "setExpeditedLevel",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "level",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "&&",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": ">=",
                        "left": {
                          "type": "Identifier",
                          "name": "level"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "1",
                          "subdenomination": null
                        }
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "<=",
                        "left": {
                          "type": "Identifier",
                          "name": "level"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "100",
                          "subdenomination": null
                        }
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Wrong level"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "expeditedLevel"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "level"
                  }
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyOwner",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "manageBlockedWallet",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "wallet",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": "add",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "EmitStatement",
                "eventCall": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "BlockWallet"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "wallet"
                    },
                    {
                      "type": "Identifier",
                      "name": "add"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "blockedWallets"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "wallet"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "add"
                  }
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyOwner",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "setTokenContract",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "IERC20Token"
                },
                "name": "token",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "index",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "&&",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "!=",
                        "left": {
                          "type": "Identifier",
                          "name": "token"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "IERC20Token"
                          },
                          "arguments": [
                            {
                              "type": "NumberLiteral",
                              "number": "0",
                              "subdenomination": null
                            }
                          ],
                          "names": []
                        }
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "==",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "tokenContract"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "index"
                          }
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "IERC20Token"
                          },
                          "arguments": [
                            {
                              "type": "NumberLiteral",
                              "number": "0",
                              "subdenomination": null
                            }
                          ],
                          "names": []
                        }
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Change address not allowed"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "tokenContract"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "index"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "token"
                  }
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyOwner",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "setEscrowContract",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "IERC20Token"
                },
                "name": "escrow",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "index",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "!=",
                      "left": {
                        "type": "Identifier",
                        "name": "escrow"
                      },
                      "right": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "IERC20Token"
                        },
                        "arguments": [
                          {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Change address not allowed"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "escrowContract"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "index"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "escrow"
                  }
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyOwner",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "setWhitelist",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "newAddr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "!=",
                      "left": {
                        "type": "Identifier",
                        "name": "newAddr"
                      },
                      "right": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "ElementaryTypeName",
                          "name": "address"
                        },
                        "arguments": [
                          {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Zero address not allowed"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "EmitStatement",
                "eventCall": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "SetNewAddress"
                  },
                  "arguments": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "ElementaryTypeName",
                        "name": "address"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "whitelist"
                        }
                      ],
                      "names": []
                    },
                    {
                      "type": "Identifier",
                      "name": "newAddr"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "whitelist"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "IWhitelist"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "newAddr"
                      }
                    ],
                    "names": []
                  }
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyOwner",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "setGovernanceProxy",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "newAddr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "!=",
                      "left": {
                        "type": "Identifier",
                        "name": "newAddr"
                      },
                      "right": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "ElementaryTypeName",
                          "name": "address"
                        },
                        "arguments": [
                          {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Zero address not allowed"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "EmitStatement",
                "eventCall": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "SetNewAddress"
                  },
                  "arguments": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "ElementaryTypeName",
                        "name": "address"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "governanceProxy"
                        }
                      ],
                      "names": []
                    },
                    {
                      "type": "Identifier",
                      "name": "newAddr"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "governanceProxy"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "IGovernanceProxy"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "newAddr"
                      }
                    ],
                    "names": []
                  }
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyOwner",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "updateCloseTime",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "closeTime"
                      },
                      "right": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "block"
                        },
                        "memberName": "timestamp"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Wait for 1st day of month"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "name": "year",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint"
                    },
                    "isStateVar": false,
                    "isIndexed": false,
                    "decl": "[738 727 663 620 600 426 325 305 196]"
                  },
                  {
                    "type": "VariableDeclaration",
                    "name": "month",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint"
                    },
                    "isStateVar": false,
                    "isIndexed": false,
                    "decl": "[742 727 663 620 600 426 325 305 196]"
                  },
                  {
                    "type": "VariableDeclaration",
                    "name": "day",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint"
                    },
                    "isStateVar": false,
                    "isIndexed": false,
                    "decl": "[742 727 663 620 600 426 325 305 196]"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "timestampToDate"
                  },
                  "arguments": [
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "block"
                      },
                      "memberName": "timestamp"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "day"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                    "type": "Identifier",
                    "name": "month"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "12",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "UnaryOperation",
                        "operator": "++",
                        "subExpression": {
                          "type": "Identifier",
                          "name": "year"
                        },
                        "isPrefix": false
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "month"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "1",
                          "subdenomination": null
                        }
                      }
                    }
                  ]
                },
                "FalseBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "UnaryOperation",
                        "operator": "++",
                        "subExpression": {
                          "type": "Identifier",
                          "name": "month"
                        },
                        "isPrefix": false
                      }
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "closeTime"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "timestampFromDateTime"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "year"
                      },
                      {
                        "type": "Identifier",
                        "name": "month"
                      },
                      {
                        "type": "Identifier",
                        "name": "day"
                      },
                      {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      },
                      {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      },
                      {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint"
                    },
                    "name": "len",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "Identifier",
                    "name": "ballots"
                  },
                  "memberName": "length"
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "Identifier",
                    "name": "unprocessedBallot"
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "len"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": "==",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "ballots"
                            },
                            "index": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          },
                          "memberName": "status"
                        },
                        "right": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "Status"
                          },
                          "memberName": "Pending"
                        }
                      },
                      "TrueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "IfStatement",
                            "condition": {
                              "type": "BinaryOperation",
                              "operator": "==",
                              "left": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "IndexAccess",
                                  "base": {
                                    "type": "Identifier",
                                    "name": "ballots"
                                  },
                                  "index": {
                                    "type": "Identifier",
                                    "name": "i"
                                  }
                                },
                                "memberName": "closeVote"
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "0",
                                "subdenomination": null
                              }
                            },
                            "TrueBody": {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "BinaryOperation",
                                "operator": "=",
                                "left": {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "IndexAccess",
                                    "base": {
                                      "type": "Identifier",
                                      "name": "ballots"
                                    },
                                    "index": {
                                      "type": "Identifier",
                                      "name": "i"
                                    }
                                  },
                                  "memberName": "closeVote"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "closeTime"
                                }
                              }
                            },
                            "FalseBody": {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "BinaryOperation",
                                "operator": "+=",
                                "left": {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "IndexAccess",
                                    "base": {
                                      "type": "Identifier",
                                      "name": "ballots"
                                    },
                                    "index": {
                                      "type": "Identifier",
                                      "name": "i"
                                    }
                                  },
                                  "memberName": "closeVote"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "closeTime"
                                }
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "IndexAccess",
                                  "base": {
                                    "type": "Identifier",
                                    "name": "ballots"
                                  },
                                  "index": {
                                    "type": "Identifier",
                                    "name": "i"
                                  }
                                },
                                "memberName": "status"
                              },
                              "right": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "Status"
                                },
                                "memberName": "New"
                              }
                            }
                          }
                        ]
                      },
                      "FalseBody": null
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "addPremintedWallet",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "wallet",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": "==",
                        "left": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "ElementaryTypeName",
                            "name": "address"
                          },
                          "arguments": [
                            {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "escrowContract"
                              },
                              "index": {
                                "type": "Identifier",
                                "name": "i"
                              }
                            }
                          ],
                          "names": []
                        },
                        "right": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "msg"
                          },
                          "memberName": "sender"
                        }
                      },
                      "TrueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "IndexAccess",
                                  "base": {
                                    "type": "Identifier",
                                    "name": "isInEscrow"
                                  },
                                  "index": {
                                    "type": "Identifier",
                                    "name": "i"
                                  }
                                },
                                "index": {
                                  "type": "Identifier",
                                  "name": "wallet"
                                }
                              },
                              "right": {
                                "type": "BooleanLiteral",
                                "value": true
                              }
                            }
                          },
                          {
                            "type": "BooleanLiteral",
                            "value": true
                          }
                        ]
                      },
                      "FalseBody": null
                    }
                  ]
                }
              },
              {
                "type": "BooleanLiteral",
                "value": false
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "addRule",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "contr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint8"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  }
                },
                "name": "majority",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "funcAbi",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "!=",
                      "left": {
                        "type": "Identifier",
                        "name": "contr"
                      },
                      "right": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "ElementaryTypeName",
                          "name": "address"
                        },
                        "arguments": [
                          {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Zero address"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "rules"
                    },
                    "memberName": "push"
                  },
                  "arguments": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "Rule"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "contr"
                        },
                        {
                          "type": "Identifier",
                          "name": "majority"
                        },
                        {
                          "type": "Identifier",
                          "name": "funcAbi"
                        }
                      ],
                      "names": []
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "EmitStatement",
                "eventCall": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "AddRule"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "contr"
                    },
                    {
                      "type": "Identifier",
                      "name": "funcAbi"
                    },
                    {
                      "type": "Identifier",
                      "name": "majority"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyOwner",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "changeRuleMajority",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "ruleId",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint8"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  }
                },
                "name": "majority",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "UserDefinedTypeName",
                      "namePath": "Rule"
                    },
                    "name": "r",
                    "storageLocation": "storage"
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "rules"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "ruleId"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "r"
                    },
                    "memberName": "majority"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "majority"
                  }
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyOwner",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "changeRuleAddress",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "ruleId",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "contr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "!=",
                      "left": {
                        "type": "Identifier",
                        "name": "contr"
                      },
                      "right": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "ElementaryTypeName",
                          "name": "address"
                        },
                        "arguments": [
                          {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Zero address"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "UserDefinedTypeName",
                      "namePath": "Rule"
                    },
                    "name": "r",
                    "storageLocation": "storage"
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "rules"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "ruleId"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "r"
                    },
                    "memberName": "contr"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "contr"
                  }
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyOwner",
              "arguments": []
            }
          ],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "getTotalRules",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "MemberAccess",
                "expression": {
                  "type": "Identifier",
                  "name": "rules"
                },
                "memberName": "length"
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "getRule",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "ruleId",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "contr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint8"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  }
                },
                "name": "majority",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "funcAbi",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "UserDefinedTypeName",
                      "namePath": "Rule"
                    },
                    "name": "r",
                    "storageLocation": "storage"
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "rules"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "ruleId"
                  }
                }
              },
              {
                "type": "TupleExpression",
                "components": [
                  {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "r"
                    },
                    "memberName": "contr"
                  },
                  {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "r"
                    },
                    "memberName": "majority"
                  },
                  {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "r"
                    },
                    "memberName": "funcAbi"
                  }
                ],
                "isArray": false
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "getTotalBallots",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "MemberAccess",
                "expression": {
                  "type": "Identifier",
                  "name": "ballots"
                },
                "memberName": "length"
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "getBallot",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "ballotId",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "closeVote",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "ruleId",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "Status"
                },
                "name": "status",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "creator",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  }
                },
                "name": "totalVotes",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  }
                },
                "name": "votesYea",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "UserDefinedTypeName",
                      "namePath": "Ballot"
                    },
                    "name": "b",
                    "storageLocation": "storage"
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "ballots"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "ballotId"
                  }
                }
              },
              {
                "type": "TupleExpression",
                "components": [
                  {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "b"
                    },
                    "memberName": "closeVote"
                  },
                  {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "b"
                    },
                    "memberName": "ruleId"
                  },
                  {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "b"
                    },
                    "memberName": "args"
                  },
                  {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "b"
                    },
                    "memberName": "status"
                  },
                  {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "b"
                    },
                    "memberName": "creator"
                  },
                  {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "b"
                    },
                    "memberName": "totalVotes"
                  },
                  {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "b"
                    },
                    "memberName": "votesYea"
                  }
                ],
                "isArray": false
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "getParticipantsNumber",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "ballotId",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "MemberAccess",
                "expression": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "ballots"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "ballotId"
                    }
                  },
                  "memberName": "participant"
                },
                "memberName": "length"
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "getParticipants",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "ballotId",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "start",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "number",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "address"
                  },
                  "length": null
                },
                "name": "participants",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "mainVotes",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "etnVotes",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "stockVotes",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "UserDefinedTypeName",
                    "namePath": "Vote"
                  },
                  "length": null
                },
                "name": "votes",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "UserDefinedTypeName",
                      "namePath": "Ballot"
                    },
                    "name": "b",
                    "storageLocation": "storage"
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "ballots"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "ballotId"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "participants"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "NewExpression",
                      "typeName": {
                        "type": "ArrayTypeName",
                        "baseTypeName": {
                          "type": "ElementaryTypeName",
                          "name": "address"
                        },
                        "length": null
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "number"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "mainVotes"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "NewExpression",
                      "typeName": {
                        "type": "ArrayTypeName",
                        "baseTypeName": {
                          "type": "ElementaryTypeName",
                          "name": "uint256"
                        },
                        "length": null
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "number"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "etnVotes"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "NewExpression",
                      "typeName": {
                        "type": "ArrayTypeName",
                        "baseTypeName": {
                          "type": "ElementaryTypeName",
                          "name": "uint256"
                        },
                        "length": null
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "number"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "stockVotes"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "NewExpression",
                      "typeName": {
                        "type": "ArrayTypeName",
                        "baseTypeName": {
                          "type": "ElementaryTypeName",
                          "name": "uint256"
                        },
                        "length": null
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "number"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "votes"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "NewExpression",
                      "typeName": {
                        "type": "ArrayTypeName",
                        "baseTypeName": {
                          "type": "UserDefinedTypeName",
                          "namePath": "Vote"
                        },
                        "length": null
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "number"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "len",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "Identifier",
                  "name": "number"
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "Identifier",
                      "name": "start"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "number"
                    }
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "b"
                      },
                      "memberName": "participant"
                    },
                    "memberName": "length"
                  }
                },
                "TrueBody": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "len"
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "-",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "b"
                          },
                          "memberName": "participant"
                        },
                        "memberName": "length"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "start"
                      }
                    }
                  }
                },
                "FalseBody": null
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "len"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "participants"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "i"
                          }
                        },
                        "right": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "b"
                            },
                            "memberName": "participant"
                          },
                          "index": {
                            "type": "BinaryOperation",
                            "operator": "+",
                            "left": {
                              "type": "Identifier",
                              "name": "start"
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "mainVotes"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "i"
                          }
                        },
                        "right": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "b"
                              },
                              "memberName": "power"
                            },
                            "index": {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "participants"
                              },
                              "index": {
                                "type": "Identifier",
                                "name": "i"
                              }
                            }
                          },
                          "index": {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "etnVotes"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "i"
                          }
                        },
                        "right": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "b"
                              },
                              "memberName": "power"
                            },
                            "index": {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "participants"
                              },
                              "index": {
                                "type": "Identifier",
                                "name": "i"
                              }
                            }
                          },
                          "index": {
                            "type": "NumberLiteral",
                            "number": "1",
                            "subdenomination": null
                          }
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "stockVotes"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "i"
                          }
                        },
                        "right": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "b"
                              },
                              "memberName": "power"
                            },
                            "index": {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "participants"
                              },
                              "index": {
                                "type": "Identifier",
                                "name": "i"
                              }
                            }
                          },
                          "index": {
                            "type": "NumberLiteral",
                            "number": "2",
                            "subdenomination": null
                          }
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "votes"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "i"
                          }
                        },
                        "right": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "b"
                            },
                            "memberName": "votes"
                          },
                          "index": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "participants"
                            },
                            "index": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "createBallot",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "ruleId",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes"
                },
                "name": "args",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": "isExpedited",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "ruleId"
                      },
                      "right": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "rules"
                        },
                        "memberName": "length"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Wrong rule ID"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "UserDefinedTypeName",
                      "namePath": "Rule"
                    },
                    "name": "r",
                    "storageLocation": "storage"
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "rules"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "ruleId"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "_getCirculation"
                  },
                  "arguments": [
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "r"
                      },
                      "memberName": "majority"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "name": "primary",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "address"
                    },
                    "isStateVar": false,
                    "isIndexed": false,
                    "decl": "[738 727 663 620 600 426 325 305 196]"
                  },
                  {
                    "type": "VariableDeclaration",
                    "name": "power",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "length": {
                        "type": "NumberLiteral",
                        "number": "4",
                        "subdenomination": null
                      }
                    },
                    "isStateVar": false,
                    "isIndexed": false,
                    "decl": "[742 727 663 620 600 426 325 305 196]"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "_getVotingPower"
                  },
                  "arguments": [
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "msg"
                      },
                      "memberName": "sender"
                    },
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "r"
                      },
                      "memberName": "majority"
                    },
                    {
                      "type": "BooleanLiteral",
                      "value": false
                    },
                    {
                      "type": "BooleanLiteral",
                      "value": true
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "highestPercentage",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": ">",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "circulationSupply"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "i"
                          }
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      },
                      "TrueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "VariableDeclarationStatement",
                            "variables": [
                              {
                                "type": "VariableDeclaration",
                                "typeName": {
                                  "type": "ElementaryTypeName",
                                  "name": "uint256"
                                },
                                "name": "percentage",
                                "storageLocation": null
                              }
                            ],
                            "initialValue": {
                              "type": "BinaryOperation",
                              "operator": "/",
                              "left": {
                                "type": "BinaryOperation",
                                "operator": "*",
                                "left": {
                                  "type": "IndexAccess",
                                  "base": {
                                    "type": "Identifier",
                                    "name": "power"
                                  },
                                  "index": {
                                    "type": "Identifier",
                                    "name": "i"
                                  }
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "100",
                                  "subdenomination": null
                                }
                              },
                              "right": {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "Identifier",
                                  "name": "circulationSupply"
                                },
                                "index": {
                                  "type": "Identifier",
                                  "name": "i"
                                }
                              }
                            }
                          },
                          {
                            "type": "IfStatement",
                            "condition": {
                              "type": "BinaryOperation",
                              "operator": ">",
                              "left": {
                                "type": "Identifier",
                                "name": "percentage"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "highestPercentage"
                              }
                            },
                            "TrueBody": {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "BinaryOperation",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "highestPercentage"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "percentage"
                                }
                              }
                            },
                            "FalseBody": null
                          }
                        ]
                      },
                      "FalseBody": null
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": ">",
                      "left": {
                        "type": "Identifier",
                        "name": "highestPercentage"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Less then 1% of circulationSupply"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "ballotId",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "Identifier",
                    "name": "ballots"
                  },
                  "memberName": "length"
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "UserDefinedTypeName",
                      "namePath": "Ballot"
                    },
                    "name": "b",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": null
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "b"
                    },
                    "memberName": "ruleId"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "ruleId"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "b"
                    },
                    "memberName": "args"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "args"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "b"
                    },
                    "memberName": "creator"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "msg"
                    },
                    "memberName": "sender"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "b"
                    },
                    "memberName": "votesYea"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "power"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "b"
                    },
                    "memberName": "totalVotes"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "power"
                  }
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "&&",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "&&",
                    "left": {
                      "type": "BinaryOperation",
                      "operator": ">=",
                      "left": {
                        "type": "Identifier",
                        "name": "highestPercentage"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "expeditedLevel"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "isExpedited"
                    }
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "<",
                    "left": {
                      "type": "IndexAccess",
                      "base": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "r"
                        },
                        "memberName": "majority"
                      },
                      "index": {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "absoluteLevel"
                    }
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "b"
                          },
                          "memberName": "closeVote"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "24",
                          "subdenomination": "hours"
                        }
                      }
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "<=",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "block"
                      },
                      "memberName": "timestamp"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "24",
                      "subdenomination": "hours"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "closeTime"
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": "==",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "b"
                          },
                          "memberName": "closeVote"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      },
                      "TrueBody": {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "BinaryOperation",
                          "operator": "=",
                          "left": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "b"
                            },
                            "memberName": "closeVote"
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "closeTime"
                          }
                        }
                      },
                      "FalseBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "+=",
                              "left": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "b"
                                },
                                "memberName": "closeVote"
                              },
                              "right": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "block"
                                },
                                "memberName": "timestamp"
                              }
                            }
                          },
                          {
                            "type": "EmitStatement",
                            "eventCall": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "Identifier",
                                "name": "ExpeditedBallot"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "ballotId"
                                },
                                {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "b"
                                  },
                                  "memberName": "closeVote"
                                }
                              ],
                              "names": []
                            }
                          }
                        ]
                      }
                    }
                  ]
                },
                "FalseBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "b"
                          },
                          "memberName": "status"
                        },
                        "right": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "Status"
                          },
                          "memberName": "Pending"
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "ballots"
                    },
                    "memberName": "push"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "b"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "EmitStatement",
                "eventCall": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "AddBallot"
                  },
                  "arguments": [
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "msg"
                      },
                      "memberName": "sender"
                    },
                    {
                      "type": "Identifier",
                      "name": "ruleId"
                    },
                    {
                      "type": "Identifier",
                      "name": "ballotId"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "ballots"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "ballotId"
                        }
                      },
                      "memberName": "participant"
                    },
                    "memberName": "push"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "primary"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "ballots"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "ballotId"
                        }
                      },
                      "memberName": "votes"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "primary"
                    }
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "Vote"
                    },
                    "memberName": "Yea"
                  }
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": ">",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "power"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "i"
                          }
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      },
                      "TrueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "IndexAccess",
                                  "base": {
                                    "type": "MemberAccess",
                                    "expression": {
                                      "type": "IndexAccess",
                                      "base": {
                                        "type": "Identifier",
                                        "name": "ballots"
                                      },
                                      "index": {
                                        "type": "Identifier",
                                        "name": "ballotId"
                                      }
                                    },
                                    "memberName": "power"
                                  },
                                  "index": {
                                    "type": "Identifier",
                                    "name": "primary"
                                  }
                                },
                                "index": {
                                  "type": "Identifier",
                                  "name": "i"
                                }
                              },
                              "right": {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "Identifier",
                                  "name": "power"
                                },
                                "index": {
                                  "type": "Identifier",
                                  "name": "i"
                                }
                              }
                            }
                          }
                        ]
                      },
                      "FalseBody": null
                    }
                  ]
                }
              },
              {
                "type": "EmitStatement",
                "eventCall": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "NewVote"
                  },
                  "arguments": [
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "msg"
                      },
                      "memberName": "sender"
                    },
                    {
                      "type": "Identifier",
                      "name": "primary"
                    },
                    {
                      "type": "Identifier",
                      "name": "ballotId"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">=",
                  "left": {
                    "type": "Identifier",
                    "name": "highestPercentage"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "50",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": "==",
                        "left": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "_checkMajority"
                          },
                          "arguments": [
                            {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "r"
                              },
                              "memberName": "majority"
                            },
                            {
                              "type": "Identifier",
                              "name": "power"
                            },
                            {
                              "type": "Identifier",
                              "name": "power"
                            },
                            {
                              "type": "BooleanLiteral",
                              "value": false
                            }
                          ],
                          "names": []
                        },
                        "right": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "Vote"
                          },
                          "memberName": "Yea"
                        }
                      },
                      "TrueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "IndexAccess",
                                  "base": {
                                    "type": "Identifier",
                                    "name": "ballots"
                                  },
                                  "index": {
                                    "type": "Identifier",
                                    "name": "ballotId"
                                  }
                                },
                                "memberName": "status"
                              },
                              "right": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "Status"
                                },
                                "memberName": "Approved"
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "Identifier",
                                "name": "_executeBallot"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "ballotId"
                                }
                              ],
                              "names": []
                            }
                          }
                        ]
                      },
                      "FalseBody": null
                    }
                  ]
                },
                "FalseBody": null
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "cancelBallot",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "ballotId",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "ballotId"
                      },
                      "right": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "ballots"
                        },
                        "memberName": "length"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Wrong ballot ID"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "UserDefinedTypeName",
                      "namePath": "Ballot"
                    },
                    "name": "b",
                    "storageLocation": "storage"
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "ballots"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "ballotId"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "msg"
                        },
                        "memberName": "sender"
                      },
                      "right": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "b"
                        },
                        "memberName": "creator"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Only creator can cancel"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "b"
                    },
                    "memberName": "closeVote"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "block"
                    },
                    "memberName": "timestamp"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "b"
                    },
                    "memberName": "status"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "Status"
                    },
                    "memberName": "Canceled"
                  }
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                    "type": "Identifier",
                    "name": "unprocessedBallot"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "ballotId"
                  }
                },
                "TrueBody": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "unprocessedBallot"
                    },
                    "isPrefix": false
                  }
                },
                "FalseBody": null
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "vote",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "ballotId",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "Vote"
                },
                "name": "v",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "ballotId"
                      },
                      "right": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "ballots"
                        },
                        "memberName": "length"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Wrong ballot ID"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "UserDefinedTypeName",
                      "namePath": "Ballot"
                    },
                    "name": "b",
                    "storageLocation": "storage"
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "ballots"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "ballotId"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "!=",
                      "left": {
                        "type": "Identifier",
                        "name": "v"
                      },
                      "right": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "Vote"
                        },
                        "memberName": "None"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Should vote Yea or Nay"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "b"
                        },
                        "memberName": "status"
                      },
                      "right": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "Status"
                        },
                        "memberName": "New"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Voting for disallowed"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": ">",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "b"
                        },
                        "memberName": "closeVote"
                      },
                      "right": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "block"
                        },
                        "memberName": "timestamp"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Ballot expired"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "name": "primary",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "address"
                    },
                    "isStateVar": false,
                    "isIndexed": false,
                    "decl": "[738 727 663 620 600 426 325 305 196]"
                  },
                  {
                    "type": "VariableDeclaration",
                    "name": "power",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "length": {
                        "type": "NumberLiteral",
                        "number": "4",
                        "subdenomination": null
                      }
                    },
                    "isStateVar": false,
                    "isIndexed": false,
                    "decl": "[742 727 663 620 600 426 325 305 196]"
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "_getVotingPower"
                  },
                  "arguments": [
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "msg"
                      },
                      "memberName": "sender"
                    },
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "rules"
                        },
                        "index": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "b"
                          },
                          "memberName": "ruleId"
                        }
                      },
                      "memberName": "majority"
                    },
                    {
                      "type": "BooleanLiteral",
                      "value": false
                    },
                    {
                      "type": "BooleanLiteral",
                      "value": true
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "b"
                      },
                      "memberName": "votes"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "primary"
                    }
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "Vote"
                    },
                    "memberName": "None"
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "b"
                            },
                            "memberName": "participant"
                          },
                          "memberName": "push"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "primary"
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "b"
                            },
                            "memberName": "votes"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "primary"
                          }
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "v"
                        }
                      }
                    },
                    {
                      "type": "ForStatement",
                      "initExpression": {
                        "type": "VariableDeclarationStatement",
                        "variables": [
                          {
                            "type": "VariableDeclaration",
                            "typeName": {
                              "type": "ElementaryTypeName",
                              "name": "uint"
                            },
                            "name": "i",
                            "storageLocation": null
                          }
                        ],
                        "initialValue": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      },
                      "conditionExpression": {
                        "type": "BinaryOperation",
                        "operator": "<",
                        "left": {
                          "type": "Identifier",
                          "name": "i"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "4",
                          "subdenomination": null
                        }
                      },
                      "loopExpression": {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "UnaryOperation",
                          "operator": "++",
                          "subExpression": {
                            "type": "Identifier",
                            "name": "i"
                          },
                          "isPrefix": false
                        }
                      },
                      "body": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "IfStatement",
                            "condition": {
                              "type": "BinaryOperation",
                              "operator": ">",
                              "left": {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "Identifier",
                                  "name": "power"
                                },
                                "index": {
                                  "type": "Identifier",
                                  "name": "i"
                                }
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "0",
                                "subdenomination": null
                              }
                            },
                            "TrueBody": {
                              "type": "Block",
                              "statements": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                      "type": "IndexAccess",
                                      "base": {
                                        "type": "IndexAccess",
                                        "base": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "b"
                                          },
                                          "memberName": "power"
                                        },
                                        "index": {
                                          "type": "Identifier",
                                          "name": "primary"
                                        }
                                      },
                                      "index": {
                                        "type": "Identifier",
                                        "name": "i"
                                      }
                                    },
                                    "right": {
                                      "type": "IndexAccess",
                                      "base": {
                                        "type": "Identifier",
                                        "name": "power"
                                      },
                                      "index": {
                                        "type": "Identifier",
                                        "name": "i"
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                      "type": "IndexAccess",
                                      "base": {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "b"
                                        },
                                        "memberName": "totalVotes"
                                      },
                                      "index": {
                                        "type": "Identifier",
                                        "name": "i"
                                      }
                                    },
                                    "right": {
                                      "type": "IndexAccess",
                                      "base": {
                                        "type": "Identifier",
                                        "name": "power"
                                      },
                                      "index": {
                                        "type": "Identifier",
                                        "name": "i"
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "IfStatement",
                                  "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "==",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "v"
                                    },
                                    "right": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "Vote"
                                      },
                                      "memberName": "Yea"
                                    }
                                  },
                                  "TrueBody": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "BinaryOperation",
                                      "operator": "+=",
                                      "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "b"
                                          },
                                          "memberName": "votesYea"
                                        },
                                        "index": {
                                          "type": "Identifier",
                                          "name": "i"
                                        }
                                      },
                                      "right": {
                                        "type": "IndexAccess",
                                        "base": {
                                          "type": "Identifier",
                                          "name": "power"
                                        },
                                        "index": {
                                          "type": "Identifier",
                                          "name": "i"
                                        }
                                      }
                                    }
                                  },
                                  "FalseBody": null
                                }
                              ]
                            },
                            "FalseBody": null
                          }
                        ]
                      }
                    },
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": "&&",
                        "left": {
                          "type": "BinaryOperation",
                          "operator": ">=",
                          "left": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "Identifier",
                                  "name": "rules"
                                },
                                "index": {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "b"
                                  },
                                  "memberName": "ruleId"
                                }
                              },
                              "memberName": "majority"
                            },
                            "index": {
                              "type": "NumberLiteral",
                              "number": "0",
                              "subdenomination": null
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "absoluteLevel"
                          }
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "walletsCEO"
                            },
                            "memberName": "contains"
                          },
                          "arguments": [
                            {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "msg"
                              },
                              "memberName": "sender"
                            }
                          ],
                          "names": []
                        }
                      },
                      "TrueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "UnaryOperation",
                              "operator": "++",
                              "subExpression": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "b"
                                },
                                "memberName": "ceoParticipate"
                              },
                              "isPrefix": false
                            }
                          }
                        ]
                      },
                      "FalseBody": null
                    },
                    {
                      "type": "EmitStatement",
                      "eventCall": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "NewVote"
                        },
                        "arguments": [
                          {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "msg"
                            },
                            "memberName": "sender"
                          },
                          {
                            "type": "Identifier",
                            "name": "primary"
                          },
                          {
                            "type": "Identifier",
                            "name": "ballotId"
                          }
                        ],
                        "names": []
                      }
                    }
                  ]
                },
                "FalseBody": {
                  "type": "IfStatement",
                  "condition": {
                    "type": "BinaryOperation",
                    "operator": "!=",
                    "left": {
                      "type": "IndexAccess",
                      "base": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "b"
                        },
                        "memberName": "votes"
                      },
                      "index": {
                        "type": "Identifier",
                        "name": "primary"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "v"
                    }
                  },
                  "TrueBody": {
                    "type": "Block",
                    "statements": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "BinaryOperation",
                          "operator": "=",
                          "left": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "b"
                              },
                              "memberName": "votes"
                            },
                            "index": {
                              "type": "Identifier",
                              "name": "primary"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "v"
                          }
                        }
                      },
                      {
                        "type": "ForStatement",
                        "initExpression": {
                          "type": "VariableDeclarationStatement",
                          "variables": [
                            {
                              "type": "VariableDeclaration",
                              "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint"
                              },
                              "name": "i",
                              "storageLocation": null
                            }
                          ],
                          "initialValue": {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        },
                        "conditionExpression": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                            "type": "Identifier",
                            "name": "i"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "4",
                            "subdenomination": null
                          }
                        },
                        "loopExpression": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "UnaryOperation",
                            "operator": "++",
                            "subExpression": {
                              "type": "Identifier",
                              "name": "i"
                            },
                            "isPrefix": false
                          }
                        },
                        "body": {
                          "type": "Block",
                          "statements": [
                            {
                              "type": "IfStatement",
                              "condition": {
                                "type": "BinaryOperation",
                                "operator": ">",
                                "left": {
                                  "type": "IndexAccess",
                                  "base": {
                                    "type": "Identifier",
                                    "name": "power"
                                  },
                                  "index": {
                                    "type": "Identifier",
                                    "name": "i"
                                  }
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                }
                              },
                              "TrueBody": {
                                "type": "Block",
                                "statements": [
                                  {
                                    "type": "IfStatement",
                                    "condition": {
                                      "type": "BinaryOperation",
                                      "operator": "==",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "v"
                                      },
                                      "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "Vote"
                                        },
                                        "memberName": "Yea"
                                      }
                                    },
                                    "TrueBody": {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "BinaryOperation",
                                        "operator": "+=",
                                        "left": {
                                          "type": "IndexAccess",
                                          "base": {
                                            "type": "MemberAccess",
                                            "expression": {
                                              "type": "Identifier",
                                              "name": "b"
                                            },
                                            "memberName": "votesYea"
                                          },
                                          "index": {
                                            "type": "Identifier",
                                            "name": "i"
                                          }
                                        },
                                        "right": {
                                          "type": "IndexAccess",
                                          "base": {
                                            "type": "Identifier",
                                            "name": "power"
                                          },
                                          "index": {
                                            "type": "Identifier",
                                            "name": "i"
                                          }
                                        }
                                      }
                                    },
                                    "FalseBody": {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "BinaryOperation",
                                        "operator": "-=",
                                        "left": {
                                          "type": "IndexAccess",
                                          "base": {
                                            "type": "MemberAccess",
                                            "expression": {
                                              "type": "Identifier",
                                              "name": "b"
                                            },
                                            "memberName": "votesYea"
                                          },
                                          "index": {
                                            "type": "Identifier",
                                            "name": "i"
                                          }
                                        },
                                        "right": {
                                          "type": "IndexAccess",
                                          "base": {
                                            "type": "IndexAccess",
                                            "base": {
                                              "type": "MemberAccess",
                                              "expression": {
                                                "type": "Identifier",
                                                "name": "b"
                                              },
                                              "memberName": "power"
                                            },
                                            "index": {
                                              "type": "Identifier",
                                              "name": "primary"
                                            }
                                          },
                                          "index": {
                                            "type": "Identifier",
                                            "name": "i"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "BinaryOperation",
                                      "operator": "=",
                                      "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                          "type": "MemberAccess",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "b"
                                          },
                                          "memberName": "totalVotes"
                                        },
                                        "index": {
                                          "type": "Identifier",
                                          "name": "i"
                                        }
                                      },
                                      "right": {
                                        "type": "BinaryOperation",
                                        "operator": "-",
                                        "left": {
                                          "type": "BinaryOperation",
                                          "operator": "+",
                                          "left": {
                                            "type": "IndexAccess",
                                            "base": {
                                              "type": "MemberAccess",
                                              "expression": {
                                                "type": "Identifier",
                                                "name": "b"
                                              },
                                              "memberName": "totalVotes"
                                            },
                                            "index": {
                                              "type": "Identifier",
                                              "name": "i"
                                            }
                                          },
                                          "right": {
                                            "type": "IndexAccess",
                                            "base": {
                                              "type": "Identifier",
                                              "name": "power"
                                            },
                                            "index": {
                                              "type": "Identifier",
                                              "name": "i"
                                            }
                                          }
                                        },
                                        "right": {
                                          "type": "IndexAccess",
                                          "base": {
                                            "type": "IndexAccess",
                                            "base": {
                                              "type": "MemberAccess",
                                              "expression": {
                                                "type": "Identifier",
                                                "name": "b"
                                              },
                                              "memberName": "power"
                                            },
                                            "index": {
                                              "type": "Identifier",
                                              "name": "primary"
                                            }
                                          },
                                          "index": {
                                            "type": "Identifier",
                                            "name": "i"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "BinaryOperation",
                                      "operator": "=",
                                      "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                          "type": "IndexAccess",
                                          "base": {
                                            "type": "MemberAccess",
                                            "expression": {
                                              "type": "Identifier",
                                              "name": "b"
                                            },
                                            "memberName": "power"
                                          },
                                          "index": {
                                            "type": "Identifier",
                                            "name": "primary"
                                          }
                                        },
                                        "index": {
                                          "type": "Identifier",
                                          "name": "i"
                                        }
                                      },
                                      "right": {
                                        "type": "IndexAccess",
                                        "base": {
                                          "type": "Identifier",
                                          "name": "power"
                                        },
                                        "index": {
                                          "type": "Identifier",
                                          "name": "i"
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              "FalseBody": null
                            }
                          ]
                        }
                      },
                      {
                        "type": "EmitStatement",
                        "eventCall": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "ChangeVote"
                          },
                          "arguments": [
                            {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "msg"
                              },
                              "memberName": "sender"
                            },
                            {
                              "type": "Identifier",
                              "name": "primary"
                            },
                            {
                              "type": "Identifier",
                              "name": "ballotId"
                            }
                          ],
                          "names": []
                        }
                      }
                    ]
                  },
                  "FalseBody": null
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "!=",
                  "left": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "_checkMajority"
                    },
                    "arguments": [
                      {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "rules"
                          },
                          "index": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "b"
                            },
                            "memberName": "ruleId"
                          }
                        },
                        "memberName": "majority"
                      },
                      {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "b"
                        },
                        "memberName": "votesYea"
                      },
                      {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "b"
                        },
                        "memberName": "totalVotes"
                      },
                      {
                        "type": "BooleanLiteral",
                        "value": false
                      }
                    ],
                    "names": []
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "Vote"
                    },
                    "memberName": "None"
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "EmitStatement",
                      "eventCall": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "PosableMajority"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "ballotId"
                          }
                        ],
                        "names": []
                      }
                    }
                  ]
                },
                "FalseBody": null
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "verify",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "ballotId",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "part",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "_verify"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "ballotId"
                    },
                    {
                      "type": "Identifier",
                      "name": "part"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "verifyNext",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "part",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint"
                    },
                    "name": "len",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "Identifier",
                    "name": "ballots"
                  },
                  "memberName": "length"
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "Identifier",
                    "name": "unprocessedBallot"
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "len"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": "==",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "ballots"
                            },
                            "index": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          },
                          "memberName": "status"
                        },
                        "right": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "Status"
                          },
                          "memberName": "New"
                        }
                      },
                      "TrueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "Identifier",
                                "name": "_verify"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "i"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "part"
                                }
                              ],
                              "names": []
                            }
                          },
                          null
                        ]
                      },
                      "FalseBody": {
                        "type": "IfStatement",
                        "condition": {
                          "type": "BinaryOperation",
                          "operator": "&&",
                          "left": {
                            "type": "BinaryOperation",
                            "operator": "!=",
                            "left": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "Identifier",
                                  "name": "ballots"
                                },
                                "index": {
                                  "type": "Identifier",
                                  "name": "i"
                                }
                              },
                              "memberName": "status"
                            },
                            "right": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "Status"
                              },
                              "memberName": "Pending"
                            }
                          },
                          "right": {
                            "type": "BinaryOperation",
                            "operator": "==",
                            "left": {
                              "type": "Identifier",
                              "name": "unprocessedBallot"
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          }
                        },
                        "TrueBody": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "UnaryOperation",
                            "operator": "++",
                            "subExpression": {
                              "type": "Identifier",
                              "name": "unprocessedBallot"
                            },
                            "isPrefix": false
                          }
                        },
                        "FalseBody": null
                      }
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "getCirculation",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint8"
                      },
                      "length": {
                        "type": "NumberLiteral",
                        "number": "4",
                        "subdenomination": null
                      }
                    },
                    "name": "m",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": null
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": "!=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "tokenContract"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "i"
                          }
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "IERC20Token"
                          },
                          "arguments": [
                            {
                              "type": "NumberLiteral",
                              "number": "0",
                              "subdenomination": null
                            }
                          ],
                          "names": []
                        }
                      },
                      "TrueBody": {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "BinaryOperation",
                          "operator": "=",
                          "left": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "m"
                            },
                            "index": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "50",
                            "subdenomination": null
                          }
                        }
                      },
                      "FalseBody": null
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "_getCirculation"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "m"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "_executeBallot",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "ballotId",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "ballots"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "ballotId"
                          }
                        },
                        "memberName": "status"
                      },
                      "right": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "Status"
                        },
                        "memberName": "Approved"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Ballot is not Approved"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "UserDefinedTypeName",
                      "namePath": "Ballot"
                    },
                    "name": "b",
                    "storageLocation": "storage"
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "ballots"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "ballotId"
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "UserDefinedTypeName",
                      "namePath": "Rule"
                    },
                    "name": "r",
                    "storageLocation": "storage"
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "rules"
                  },
                  "index": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "b"
                    },
                    "memberName": "ruleId"
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes"
                    },
                    "name": "command",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": null
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "command"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "abi"
                      },
                      "memberName": "encodePacked"
                    },
                    "arguments": [
                      {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "ElementaryTypeName",
                          "name": "bytes4"
                        },
                        "arguments": [
                          {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "Identifier",
                              "name": "keccak256"
                            },
                            "arguments": [
                              {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "ElementaryTypeName",
                                  "name": "bytes"
                                },
                                "arguments": [
                                  {
                                    "type": "MemberAccess",
                                    "expression": {
                                      "type": "Identifier",
                                      "name": "r"
                                    },
                                    "memberName": "funcAbi"
                                  }
                                ],
                                "names": []
                              }
                            ],
                            "names": []
                          }
                        ],
                        "names": []
                      },
                      {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "b"
                        },
                        "memberName": "args"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "governanceProxy"
                    },
                    "memberName": "trigger"
                  },
                  "arguments": [
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "r"
                      },
                      "memberName": "contr"
                    },
                    {
                      "type": "Identifier",
                      "name": "command"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "b"
                    },
                    "memberName": "closeVote"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "block"
                    },
                    "memberName": "timestamp"
                  }
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                    "type": "Identifier",
                    "name": "unprocessedBallot"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "ballotId"
                  }
                },
                "TrueBody": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "unprocessedBallot"
                    },
                    "isPrefix": false
                  }
                },
                "FalseBody": null
              },
              {
                "type": "EmitStatement",
                "eventCall": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "ApplyBallot"
                  },
                  "arguments": [
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "b"
                      },
                      "memberName": "ruleId"
                    },
                    {
                      "type": "Identifier",
                      "name": "ballotId"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "_verify",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "ballotId",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "part",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "ballotId"
                      },
                      "right": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "ballots"
                        },
                        "memberName": "length"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Wrong ballot ID"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "UserDefinedTypeName",
                      "namePath": "Ballot"
                    },
                    "name": "b",
                    "storageLocation": "storage"
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "ballots"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "ballotId"
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "UserDefinedTypeName",
                      "namePath": "Rule"
                    },
                    "name": "r",
                    "storageLocation": "storage"
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "rules"
                  },
                  "index": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "b"
                    },
                    "memberName": "ruleId"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "b"
                        },
                        "memberName": "status"
                      },
                      "right": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "Status"
                        },
                        "memberName": "New"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Can not be verified"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "length": {
                        "type": "NumberLiteral",
                        "number": "4",
                        "subdenomination": null
                      }
                    },
                    "name": "totalVotes",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "length": {
                        "type": "NumberLiteral",
                        "number": "4",
                        "subdenomination": null
                      }
                    },
                    "name": "totalYea",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": null
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "b"
                    },
                    "memberName": "processedParticipants"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "totalVotes"
                        },
                        "right": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "b"
                          },
                          "memberName": "totalVotes"
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "totalYea"
                        },
                        "right": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "b"
                          },
                          "memberName": "votesYea"
                        }
                      }
                    }
                  ]
                },
                "FalseBody": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "len",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "b"
                    },
                    "memberName": "processedParticipants"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "part"
                  }
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "||",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": ">",
                    "left": {
                      "type": "Identifier",
                      "name": "len"
                    },
                    "right": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "b"
                        },
                        "memberName": "participant"
                      },
                      "memberName": "length"
                    }
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": ">",
                    "left": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "b"
                      },
                      "memberName": "closeVote"
                    },
                    "right": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "block"
                      },
                      "memberName": "timestamp"
                    }
                  }
                },
                "TrueBody": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "len"
                    },
                    "right": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "b"
                        },
                        "memberName": "participant"
                      },
                      "memberName": "length"
                    }
                  }
                },
                "FalseBody": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bool"
                    },
                    "name": "acceptEscrowed",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BooleanLiteral",
                  "value": true
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "&&",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": ">=",
                    "left": {
                      "type": "IndexAccess",
                      "base": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "r"
                        },
                        "memberName": "majority"
                      },
                      "index": {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "absoluteLevel"
                    }
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "<",
                    "left": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "b"
                      },
                      "memberName": "ceoParticipate"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "requiredCEO"
                    }
                  }
                },
                "TrueBody": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "acceptEscrowed"
                    },
                    "right": {
                      "type": "BooleanLiteral",
                      "value": false
                    }
                  }
                },
                "FalseBody": null
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "b"
                    },
                    "memberName": "processedParticipants"
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "len"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "name": "primary",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "address"
                          },
                          "isStateVar": false,
                          "isIndexed": false,
                          "decl": "[738 727 663 620 600 612 684 611 600 426 325 305 196]"
                        },
                        {
                          "type": "VariableDeclaration",
                          "name": "power",
                          "typeName": {
                            "type": "ArrayTypeName",
                            "baseTypeName": {
                              "type": "ElementaryTypeName",
                              "name": "uint256"
                            },
                            "length": {
                              "type": "NumberLiteral",
                              "number": "4",
                              "subdenomination": null
                            }
                          },
                          "isStateVar": false,
                          "isIndexed": false,
                          "decl": "[742 727 663 620 600 612 684 611 600 426 325 305 196]"
                        }
                      ],
                      "initialValue": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "_getVotingPower"
                        },
                        "arguments": [
                          {
                            "type": "IndexAccess",
                            "base": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "b"
                              },
                              "memberName": "participant"
                            },
                            "index": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          },
                          {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "r"
                            },
                            "memberName": "majority"
                          },
                          {
                            "type": "BooleanLiteral",
                            "value": true
                          },
                          {
                            "type": "Identifier",
                            "name": "acceptEscrowed"
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "ForStatement",
                      "initExpression": {
                        "type": "VariableDeclarationStatement",
                        "variables": [
                          {
                            "type": "VariableDeclaration",
                            "typeName": {
                              "type": "ElementaryTypeName",
                              "name": "uint"
                            },
                            "name": "j",
                            "storageLocation": null
                          }
                        ],
                        "initialValue": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      },
                      "conditionExpression": {
                        "type": "BinaryOperation",
                        "operator": "<",
                        "left": {
                          "type": "Identifier",
                          "name": "j"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "4",
                          "subdenomination": null
                        }
                      },
                      "loopExpression": {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "UnaryOperation",
                          "operator": "++",
                          "subExpression": {
                            "type": "Identifier",
                            "name": "j"
                          },
                          "isPrefix": false
                        }
                      },
                      "body": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "IfStatement",
                            "condition": {
                              "type": "BinaryOperation",
                              "operator": ">",
                              "left": {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "Identifier",
                                  "name": "power"
                                },
                                "index": {
                                  "type": "Identifier",
                                  "name": "j"
                                }
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "0",
                                "subdenomination": null
                              }
                            },
                            "TrueBody": {
                              "type": "Block",
                              "statements": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                      "type": "IndexAccess",
                                      "base": {
                                        "type": "Identifier",
                                        "name": "totalVotes"
                                      },
                                      "index": {
                                        "type": "Identifier",
                                        "name": "j"
                                      }
                                    },
                                    "right": {
                                      "type": "IndexAccess",
                                      "base": {
                                        "type": "Identifier",
                                        "name": "power"
                                      },
                                      "index": {
                                        "type": "Identifier",
                                        "name": "j"
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "IfStatement",
                                  "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "==",
                                    "left": {
                                      "type": "IndexAccess",
                                      "base": {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "b"
                                        },
                                        "memberName": "votes"
                                      },
                                      "index": {
                                        "type": "Identifier",
                                        "name": "primary"
                                      }
                                    },
                                    "right": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "Vote"
                                      },
                                      "memberName": "Yea"
                                    }
                                  },
                                  "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "BinaryOperation",
                                          "operator": "+=",
                                          "left": {
                                            "type": "IndexAccess",
                                            "base": {
                                              "type": "Identifier",
                                              "name": "totalYea"
                                            },
                                            "index": {
                                              "type": "Identifier",
                                              "name": "j"
                                            }
                                          },
                                          "right": {
                                            "type": "IndexAccess",
                                            "base": {
                                              "type": "Identifier",
                                              "name": "power"
                                            },
                                            "index": {
                                              "type": "Identifier",
                                              "name": "j"
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "FalseBody": null
                                }
                              ]
                            },
                            "FalseBody": null
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "IndexAccess",
                                  "base": {
                                    "type": "MemberAccess",
                                    "expression": {
                                      "type": "Identifier",
                                      "name": "b"
                                    },
                                    "memberName": "power"
                                  },
                                  "index": {
                                    "type": "Identifier",
                                    "name": "primary"
                                  }
                                },
                                "index": {
                                  "type": "Identifier",
                                  "name": "j"
                                }
                              },
                              "right": {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "Identifier",
                                  "name": "power"
                                },
                                "index": {
                                  "type": "Identifier",
                                  "name": "j"
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "b"
                    },
                    "memberName": "processedParticipants"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "len"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "b"
                    },
                    "memberName": "votesYea"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "totalYea"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "b"
                    },
                    "memberName": "totalVotes"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "totalVotes"
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "UserDefinedTypeName",
                      "namePath": "Vote"
                    },
                    "name": "result",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                    "type": "Identifier",
                    "name": "len"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "b"
                      },
                      "memberName": "participant"
                    },
                    "memberName": "length"
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "_getCirculation"
                        },
                        "arguments": [
                          {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "r"
                            },
                            "memberName": "majority"
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": "<",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "b"
                          },
                          "memberName": "closeVote"
                        },
                        "right": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "block"
                          },
                          "memberName": "timestamp"
                        }
                      },
                      "TrueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "result"
                              },
                              "right": {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "_checkMajority"
                                },
                                "arguments": [
                                  {
                                    "type": "MemberAccess",
                                    "expression": {
                                      "type": "Identifier",
                                      "name": "r"
                                    },
                                    "memberName": "majority"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "totalYea"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "totalVotes"
                                  },
                                  {
                                    "type": "BooleanLiteral",
                                    "value": true
                                  }
                                ],
                                "names": []
                              }
                            }
                          },
                          {
                            "type": "IfStatement",
                            "condition": {
                              "type": "BinaryOperation",
                              "operator": "==",
                              "left": {
                                "type": "Identifier",
                                "name": "result"
                              },
                              "right": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "Vote"
                                },
                                "memberName": "None"
                              }
                            },
                            "TrueBody": {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "BinaryOperation",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "result"
                                },
                                "right": {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "Vote"
                                  },
                                  "memberName": "Nay"
                                }
                              }
                            },
                            "FalseBody": null
                          }
                        ]
                      },
                      "FalseBody": {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "BinaryOperation",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "result"
                          },
                          "right": {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "Identifier",
                              "name": "_checkMajority"
                            },
                            "arguments": [
                              {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "r"
                                },
                                "memberName": "majority"
                              },
                              {
                                "type": "Identifier",
                                "name": "totalYea"
                              },
                              {
                                "type": "Identifier",
                                "name": "totalVotes"
                              },
                              {
                                "type": "BooleanLiteral",
                                "value": false
                              }
                            ],
                            "names": []
                          }
                        }
                      }
                    },
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": "==",
                        "left": {
                          "type": "Identifier",
                          "name": "result"
                        },
                        "right": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "Vote"
                          },
                          "memberName": "Yea"
                        }
                      },
                      "TrueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "b"
                                },
                                "memberName": "status"
                              },
                              "right": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "Status"
                                },
                                "memberName": "Approved"
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "Identifier",
                                "name": "_executeBallot"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "ballotId"
                                }
                              ],
                              "names": []
                            }
                          }
                        ]
                      },
                      "FalseBody": {
                        "type": "IfStatement",
                        "condition": {
                          "type": "BinaryOperation",
                          "operator": "==",
                          "left": {
                            "type": "Identifier",
                            "name": "result"
                          },
                          "right": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "Vote"
                            },
                            "memberName": "Nay"
                          }
                        },
                        "TrueBody": {
                          "type": "Block",
                          "statements": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "BinaryOperation",
                                "operator": "=",
                                "left": {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "b"
                                  },
                                  "memberName": "status"
                                },
                                "right": {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "Status"
                                  },
                                  "memberName": "Rejected"
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "BinaryOperation",
                                "operator": "=",
                                "left": {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "b"
                                  },
                                  "memberName": "closeVote"
                                },
                                "right": {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "block"
                                  },
                                  "memberName": "timestamp"
                                }
                              }
                            },
                            {
                              "type": "IfStatement",
                              "condition": {
                                "type": "BinaryOperation",
                                "operator": "==",
                                "left": {
                                  "type": "Identifier",
                                  "name": "unprocessedBallot"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "ballotId"
                                }
                              },
                              "TrueBody": {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "UnaryOperation",
                                  "operator": "++",
                                  "subExpression": {
                                    "type": "Identifier",
                                    "name": "unprocessedBallot"
                                  },
                                  "isPrefix": false
                                }
                              },
                              "FalseBody": null
                            }
                          ]
                        },
                        "FalseBody": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "BinaryOperation",
                            "operator": "=",
                            "left": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "b"
                              },
                              "memberName": "processedParticipants"
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "0",
                              "subdenomination": null
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "FalseBody": null
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "_checkMajority",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint8"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  }
                },
                "name": "tokensApply",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  }
                },
                "name": "votesYea",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  }
                },
                "name": "totalVotes",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": "isClosed",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "Vote"
                },
                "name": "result",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "majorityYea",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "majorityNay",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "requireMajority",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": "!=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "tokensApply"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "i"
                          }
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      },
                      "TrueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "UnaryOperation",
                              "operator": "++",
                              "subExpression": {
                                "type": "Identifier",
                                "name": "requireMajority"
                              },
                              "isPrefix": false
                            }
                          },
                          {
                            "type": "IfStatement",
                            "condition": {
                              "type": "BinaryOperation",
                              "operator": ">",
                              "left": {
                                "type": "BinaryOperation",
                                "operator": "*",
                                "left": {
                                  "type": "IndexAccess",
                                  "base": {
                                    "type": "Identifier",
                                    "name": "votesYea"
                                  },
                                  "index": {
                                    "type": "Identifier",
                                    "name": "i"
                                  }
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "2",
                                  "subdenomination": null
                                }
                              },
                              "right": {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "Identifier",
                                  "name": "circulationSupply"
                                },
                                "index": {
                                  "type": "Identifier",
                                  "name": "i"
                                }
                              }
                            },
                            "TrueBody": {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "UnaryOperation",
                                "operator": "++",
                                "subExpression": {
                                  "type": "Identifier",
                                  "name": "majorityYea"
                                },
                                "isPrefix": false
                              }
                            },
                            "FalseBody": {
                              "type": "IfStatement",
                              "condition": {
                                "type": "BinaryOperation",
                                "operator": ">",
                                "left": {
                                  "type": "BinaryOperation",
                                  "operator": "*",
                                  "left": {
                                    "type": "TupleExpression",
                                    "components": [
                                      {
                                        "type": "BinaryOperation",
                                        "operator": "-",
                                        "left": {
                                          "type": "IndexAccess",
                                          "base": {
                                            "type": "Identifier",
                                            "name": "totalVotes"
                                          },
                                          "index": {
                                            "type": "Identifier",
                                            "name": "i"
                                          }
                                        },
                                        "right": {
                                          "type": "IndexAccess",
                                          "base": {
                                            "type": "Identifier",
                                            "name": "votesYea"
                                          },
                                          "index": {
                                            "type": "Identifier",
                                            "name": "i"
                                          }
                                        }
                                      }
                                    ],
                                    "isArray": false
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "2",
                                    "subdenomination": null
                                  }
                                },
                                "right": {
                                  "type": "IndexAccess",
                                  "base": {
                                    "type": "Identifier",
                                    "name": "circulationSupply"
                                  },
                                  "index": {
                                    "type": "Identifier",
                                    "name": "i"
                                  }
                                }
                              },
                              "TrueBody": {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "UnaryOperation",
                                  "operator": "++",
                                  "subExpression": {
                                    "type": "Identifier",
                                    "name": "majorityNay"
                                  },
                                  "isPrefix": false
                                }
                              },
                              "FalseBody": {
                                "type": "IfStatement",
                                "condition": {
                                  "type": "BinaryOperation",
                                  "operator": "&&",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "isClosed"
                                  },
                                  "right": {
                                    "type": "BinaryOperation",
                                    "operator": ">",
                                    "left": {
                                      "type": "IndexAccess",
                                      "base": {
                                        "type": "Identifier",
                                        "name": "votesYea"
                                      },
                                      "index": {
                                        "type": "Identifier",
                                        "name": "i"
                                      }
                                    },
                                    "right": {
                                      "type": "BinaryOperation",
                                      "operator": "/",
                                      "left": {
                                        "type": "BinaryOperation",
                                        "operator": "*",
                                        "left": {
                                          "type": "IndexAccess",
                                          "base": {
                                            "type": "Identifier",
                                            "name": "totalVotes"
                                          },
                                          "index": {
                                            "type": "Identifier",
                                            "name": "i"
                                          }
                                        },
                                        "right": {
                                          "type": "IndexAccess",
                                          "base": {
                                            "type": "Identifier",
                                            "name": "tokensApply"
                                          },
                                          "index": {
                                            "type": "Identifier",
                                            "name": "i"
                                          }
                                        }
                                      },
                                      "right": {
                                        "type": "NumberLiteral",
                                        "number": "100",
                                        "subdenomination": null
                                      }
                                    }
                                  }
                                },
                                "TrueBody": {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "UnaryOperation",
                                    "operator": "++",
                                    "subExpression": {
                                      "type": "Identifier",
                                      "name": "majorityYea"
                                    },
                                    "isPrefix": false
                                  }
                                },
                                "FalseBody": null
                              }
                            }
                          }
                        ]
                      },
                      "FalseBody": null
                    }
                  ]
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                    "type": "Identifier",
                    "name": "majorityYea"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "requireMajority"
                  }
                },
                "TrueBody": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "result"
                    },
                    "right": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "Vote"
                      },
                      "memberName": "Yea"
                    }
                  }
                },
                "FalseBody": {
                  "type": "IfStatement",
                  "condition": {
                    "type": "BinaryOperation",
                    "operator": "==",
                    "left": {
                      "type": "Identifier",
                      "name": "majorityNay"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "requireMajority"
                    }
                  },
                  "TrueBody": {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                        "type": "Identifier",
                        "name": "result"
                      },
                      "right": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "Vote"
                        },
                        "memberName": "Nay"
                      }
                    }
                  },
                  "FalseBody": null
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "_getCirculation",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint8"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  }
                },
                "name": "tokensApply",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "length": {
                        "type": "NumberLiteral",
                        "number": "4",
                        "subdenomination": null
                      }
                    },
                    "name": "total",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": null
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": "&&",
                        "left": {
                          "type": "BinaryOperation",
                          "operator": "!=",
                          "left": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "tokensApply"
                            },
                            "index": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": "!=",
                          "left": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "circulationSupplyUpdated"
                            },
                            "index": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          },
                          "right": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "block"
                            },
                            "memberName": "timestamp"
                          }
                        }
                      },
                      "TrueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "VariableDeclarationStatement",
                            "variables": [
                              {
                                "type": "VariableDeclaration",
                                "typeName": {
                                  "type": "ElementaryTypeName",
                                  "name": "uint"
                                },
                                "name": "len",
                                "storageLocation": null
                              }
                            ],
                            "initialValue": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "Identifier",
                                  "name": "excluded"
                                },
                                "index": {
                                  "type": "Identifier",
                                  "name": "i"
                                }
                              },
                              "memberName": "length"
                            }
                          },
                          {
                            "type": "ForStatement",
                            "initExpression": {
                              "type": "VariableDeclarationStatement",
                              "variables": [
                                {
                                  "type": "VariableDeclaration",
                                  "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                  },
                                  "name": "j",
                                  "storageLocation": null
                                }
                              ],
                              "initialValue": {
                                "type": "NumberLiteral",
                                "number": "0",
                                "subdenomination": null
                              }
                            },
                            "conditionExpression": {
                              "type": "BinaryOperation",
                              "operator": "<",
                              "left": {
                                "type": "Identifier",
                                "name": "j"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "len"
                              }
                            },
                            "loopExpression": {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "UnaryOperation",
                                "operator": "++",
                                "subExpression": {
                                  "type": "Identifier",
                                  "name": "j"
                                },
                                "isPrefix": false
                              }
                            },
                            "body": {
                              "type": "Block",
                              "statements": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                      "type": "IndexAccess",
                                      "base": {
                                        "type": "Identifier",
                                        "name": "total"
                                      },
                                      "index": {
                                        "type": "Identifier",
                                        "name": "i"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionCall",
                                      "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "IndexAccess",
                                          "base": {
                                            "type": "Identifier",
                                            "name": "tokenContract"
                                          },
                                          "index": {
                                            "type": "Identifier",
                                            "name": "i"
                                          }
                                        },
                                        "memberName": "balanceOf"
                                      },
                                      "arguments": [
                                        {
                                          "type": "IndexAccess",
                                          "base": {
                                            "type": "IndexAccess",
                                            "base": {
                                              "type": "Identifier",
                                              "name": "excluded"
                                            },
                                            "index": {
                                              "type": "Identifier",
                                              "name": "i"
                                            }
                                          },
                                          "index": {
                                            "type": "Identifier",
                                            "name": "j"
                                          }
                                        }
                                      ],
                                      "names": []
                                    }
                                  }
                                },
                                {
                                  "type": "IfStatement",
                                  "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "&&",
                                    "left": {
                                      "type": "BinaryOperation",
                                      "operator": "!=",
                                      "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                          "type": "Identifier",
                                          "name": "escrowContract"
                                        },
                                        "index": {
                                          "type": "Identifier",
                                          "name": "i"
                                        }
                                      },
                                      "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "IERC20Token"
                                        },
                                        "arguments": [
                                          {
                                            "type": "NumberLiteral",
                                            "number": "0",
                                            "subdenomination": null
                                          }
                                        ],
                                        "names": []
                                      }
                                    },
                                    "right": {
                                      "type": "IndexAccess",
                                      "base": {
                                        "type": "IndexAccess",
                                        "base": {
                                          "type": "Identifier",
                                          "name": "isInEscrow"
                                        },
                                        "index": {
                                          "type": "Identifier",
                                          "name": "i"
                                        }
                                      },
                                      "index": {
                                        "type": "IndexAccess",
                                        "base": {
                                          "type": "IndexAccess",
                                          "base": {
                                            "type": "Identifier",
                                            "name": "excluded"
                                          },
                                          "index": {
                                            "type": "Identifier",
                                            "name": "i"
                                          }
                                        },
                                        "index": {
                                          "type": "Identifier",
                                          "name": "j"
                                        }
                                      }
                                    }
                                  },
                                  "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "BinaryOperation",
                                          "operator": "+=",
                                          "left": {
                                            "type": "IndexAccess",
                                            "base": {
                                              "type": "Identifier",
                                              "name": "total"
                                            },
                                            "index": {
                                              "type": "Identifier",
                                              "name": "i"
                                            }
                                          },
                                          "right": {
                                            "type": "FunctionCall",
                                            "expression": {
                                              "type": "MemberAccess",
                                              "expression": {
                                                "type": "IndexAccess",
                                                "base": {
                                                  "type": "Identifier",
                                                  "name": "escrowContract"
                                                },
                                                "index": {
                                                  "type": "Identifier",
                                                  "name": "i"
                                                }
                                              },
                                              "memberName": "balanceOf"
                                            },
                                            "arguments": [
                                              {
                                                "type": "IndexAccess",
                                                "base": {
                                                  "type": "IndexAccess",
                                                  "base": {
                                                    "type": "Identifier",
                                                    "name": "excluded"
                                                  },
                                                  "index": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                  }
                                                },
                                                "index": {
                                                  "type": "Identifier",
                                                  "name": "j"
                                                }
                                              }
                                            ],
                                            "names": []
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "FalseBody": null
                                }
                              ]
                            }
                          },
                          {
                            "type": "VariableDeclarationStatement",
                            "variables": [
                              {
                                "type": "VariableDeclaration",
                                "typeName": {
                                  "type": "ElementaryTypeName",
                                  "name": "uint256"
                                },
                                "name": "t",
                                "storageLocation": null
                              }
                            ],
                            "initialValue": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "FunctionCall",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "IERC20Token"
                                  },
                                  "arguments": [
                                    {
                                      "type": "IndexAccess",
                                      "base": {
                                        "type": "Identifier",
                                        "name": "tokenContract"
                                      },
                                      "index": {
                                        "type": "Identifier",
                                        "name": "i"
                                      }
                                    }
                                  ],
                                  "names": []
                                },
                                "memberName": "totalSupply"
                              },
                              "arguments": [],
                              "names": []
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "Identifier",
                                "name": "require"
                              },
                              "arguments": [
                                {
                                  "type": "BinaryOperation",
                                  "operator": ">=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "t"
                                  },
                                  "right": {
                                    "type": "IndexAccess",
                                    "base": {
                                      "type": "Identifier",
                                      "name": "total"
                                    },
                                    "index": {
                                      "type": "Identifier",
                                      "name": "i"
                                    }
                                  }
                                },
                                {
                                  "type": "stringLiteral",
                                  "value": "Total Supply less then accounts balance"
                                }
                              ],
                              "names": []
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "Identifier",
                                  "name": "circulationSupply"
                                },
                                "index": {
                                  "type": "Identifier",
                                  "name": "i"
                                }
                              },
                              "right": {
                                "type": "BinaryOperation",
                                "operator": "-",
                                "left": {
                                  "type": "Identifier",
                                  "name": "t"
                                },
                                "right": {
                                  "type": "IndexAccess",
                                  "base": {
                                    "type": "Identifier",
                                    "name": "total"
                                  },
                                  "index": {
                                    "type": "Identifier",
                                    "name": "i"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "Identifier",
                                  "name": "circulationSupplyUpdated"
                                },
                                "index": {
                                  "type": "Identifier",
                                  "name": "i"
                                }
                              },
                              "right": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "block"
                                },
                                "memberName": "timestamp"
                              }
                            }
                          }
                        ]
                      },
                      "FalseBody": null
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "_getVotingPower",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "voter",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint8"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  }
                },
                "name": "tokensApply",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": "isPrimary",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": "acceptEscrowed",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address"
                },
                "name": "primary",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  }
                },
                "name": "votingPower",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "IfStatement",
                "condition": {
                  "type": "Identifier",
                  "name": "isPrimary"
                },
                "TrueBody": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "primary"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "voter"
                    }
                  }
                },
                "FalseBody": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "primary"
                    },
                    "right": {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "whitelist"
                        },
                        "memberName": "address_belongs"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "voter"
                        }
                      ],
                      "names": []
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "UnaryOperation",
                      "operator": "!",
                      "subExpression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "blockedWallets"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "primary"
                        }
                      },
                      "isPrefix": true
                    },
                    {
                      "type": "stringLiteral",
                      "value": "Wallet is blocked for voting"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ArrayTypeName",
                      "baseTypeName": {
                        "type": "ElementaryTypeName",
                        "name": "address"
                      },
                      "length": null
                    },
                    "name": "userWallets",
                    "storageLocation": "memory"
                  }
                ],
                "initialValue": null
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "!=",
                  "left": {
                    "type": "Identifier",
                    "name": "primary"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "address"
                    },
                    "arguments": [
                      {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      }
                    ],
                    "names": []
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "userWallets"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "whitelist"
                            },
                            "memberName": "getUserWallets"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "primary"
                            }
                          ],
                          "names": []
                        }
                      }
                    }
                  ]
                },
                "FalseBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "primary"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "voter"
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "userWallets"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "NewExpression",
                            "typeName": {
                              "type": "ArrayTypeName",
                              "baseTypeName": {
                                "type": "ElementaryTypeName",
                                "name": "address"
                              },
                              "length": null
                            }
                          },
                          "arguments": [
                            {
                              "type": "NumberLiteral",
                              "number": "0",
                              "subdenomination": null
                            }
                          ],
                          "names": []
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bool"
                    },
                    "name": "hasPower",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BooleanLiteral",
                  "value": false
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": "!=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "tokensApply"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "i"
                          }
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      },
                      "TrueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "+=",
                              "left": {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "Identifier",
                                  "name": "votingPower"
                                },
                                "index": {
                                  "type": "Identifier",
                                  "name": "i"
                                }
                              },
                              "right": {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "IndexAccess",
                                    "base": {
                                      "type": "Identifier",
                                      "name": "tokenContract"
                                    },
                                    "index": {
                                      "type": "Identifier",
                                      "name": "i"
                                    }
                                  },
                                  "memberName": "balanceOf"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "primary"
                                  }
                                ],
                                "names": []
                              }
                            }
                          },
                          {
                            "type": "IfStatement",
                            "condition": {
                              "type": "BinaryOperation",
                              "operator": "&&",
                              "left": {
                                "type": "BinaryOperation",
                                "operator": "&&",
                                "left": {
                                  "type": "Identifier",
                                  "name": "acceptEscrowed"
                                },
                                "right": {
                                  "type": "BinaryOperation",
                                  "operator": "!=",
                                  "left": {
                                    "type": "IndexAccess",
                                    "base": {
                                      "type": "Identifier",
                                      "name": "escrowContract"
                                    },
                                    "index": {
                                      "type": "Identifier",
                                      "name": "i"
                                    }
                                  },
                                  "right": {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "Identifier",
                                      "name": "IERC20Token"
                                    },
                                    "arguments": [
                                      {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                      }
                                    ],
                                    "names": []
                                  }
                                }
                              },
                              "right": {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "IndexAccess",
                                  "base": {
                                    "type": "Identifier",
                                    "name": "isInEscrow"
                                  },
                                  "index": {
                                    "type": "Identifier",
                                    "name": "i"
                                  }
                                },
                                "index": {
                                  "type": "Identifier",
                                  "name": "primary"
                                }
                              }
                            },
                            "TrueBody": {
                              "type": "Block",
                              "statements": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                      "type": "IndexAccess",
                                      "base": {
                                        "type": "Identifier",
                                        "name": "votingPower"
                                      },
                                      "index": {
                                        "type": "Identifier",
                                        "name": "i"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionCall",
                                      "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "IndexAccess",
                                          "base": {
                                            "type": "Identifier",
                                            "name": "escrowContract"
                                          },
                                          "index": {
                                            "type": "Identifier",
                                            "name": "i"
                                          }
                                        },
                                        "memberName": "balanceOf"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "primary"
                                        }
                                      ],
                                      "names": []
                                    }
                                  }
                                }
                              ]
                            },
                            "FalseBody": null
                          },
                          {
                            "type": "ForStatement",
                            "initExpression": {
                              "type": "VariableDeclarationStatement",
                              "variables": [
                                {
                                  "type": "VariableDeclaration",
                                  "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                  },
                                  "name": "j",
                                  "storageLocation": null
                                }
                              ],
                              "initialValue": {
                                "type": "NumberLiteral",
                                "number": "0",
                                "subdenomination": null
                              }
                            },
                            "conditionExpression": {
                              "type": "BinaryOperation",
                              "operator": "<",
                              "left": {
                                "type": "Identifier",
                                "name": "j"
                              },
                              "right": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "userWallets"
                                },
                                "memberName": "length"
                              }
                            },
                            "loopExpression": {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "UnaryOperation",
                                "operator": "++",
                                "subExpression": {
                                  "type": "Identifier",
                                  "name": "j"
                                },
                                "isPrefix": false
                              }
                            },
                            "body": {
                              "type": "Block",
                              "statements": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                      "type": "IndexAccess",
                                      "base": {
                                        "type": "Identifier",
                                        "name": "votingPower"
                                      },
                                      "index": {
                                        "type": "Identifier",
                                        "name": "i"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionCall",
                                      "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "IndexAccess",
                                          "base": {
                                            "type": "Identifier",
                                            "name": "tokenContract"
                                          },
                                          "index": {
                                            "type": "Identifier",
                                            "name": "i"
                                          }
                                        },
                                        "memberName": "balanceOf"
                                      },
                                      "arguments": [
                                        {
                                          "type": "IndexAccess",
                                          "base": {
                                            "type": "Identifier",
                                            "name": "userWallets"
                                          },
                                          "index": {
                                            "type": "Identifier",
                                            "name": "j"
                                          }
                                        }
                                      ],
                                      "names": []
                                    }
                                  }
                                },
                                {
                                  "type": "IfStatement",
                                  "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "&&",
                                    "left": {
                                      "type": "BinaryOperation",
                                      "operator": "&&",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "acceptEscrowed"
                                      },
                                      "right": {
                                        "type": "BinaryOperation",
                                        "operator": "!=",
                                        "left": {
                                          "type": "IndexAccess",
                                          "base": {
                                            "type": "Identifier",
                                            "name": "escrowContract"
                                          },
                                          "index": {
                                            "type": "Identifier",
                                            "name": "i"
                                          }
                                        },
                                        "right": {
                                          "type": "FunctionCall",
                                          "expression": {
                                            "type": "Identifier",
                                            "name": "IERC20Token"
                                          },
                                          "arguments": [
                                            {
                                              "type": "NumberLiteral",
                                              "number": "0",
                                              "subdenomination": null
                                            }
                                          ],
                                          "names": []
                                        }
                                      }
                                    },
                                    "right": {
                                      "type": "IndexAccess",
                                      "base": {
                                        "type": "IndexAccess",
                                        "base": {
                                          "type": "Identifier",
                                          "name": "isInEscrow"
                                        },
                                        "index": {
                                          "type": "Identifier",
                                          "name": "i"
                                        }
                                      },
                                      "index": {
                                        "type": "IndexAccess",
                                        "base": {
                                          "type": "Identifier",
                                          "name": "userWallets"
                                        },
                                        "index": {
                                          "type": "Identifier",
                                          "name": "j"
                                        }
                                      }
                                    }
                                  },
                                  "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "BinaryOperation",
                                          "operator": "+=",
                                          "left": {
                                            "type": "IndexAccess",
                                            "base": {
                                              "type": "Identifier",
                                              "name": "votingPower"
                                            },
                                            "index": {
                                              "type": "Identifier",
                                              "name": "i"
                                            }
                                          },
                                          "right": {
                                            "type": "FunctionCall",
                                            "expression": {
                                              "type": "MemberAccess",
                                              "expression": {
                                                "type": "IndexAccess",
                                                "base": {
                                                  "type": "Identifier",
                                                  "name": "escrowContract"
                                                },
                                                "index": {
                                                  "type": "Identifier",
                                                  "name": "i"
                                                }
                                              },
                                              "memberName": "balanceOf"
                                            },
                                            "arguments": [
                                              {
                                                "type": "IndexAccess",
                                                "base": {
                                                  "type": "Identifier",
                                                  "name": "userWallets"
                                                },
                                                "index": {
                                                  "type": "Identifier",
                                                  "name": "j"
                                                }
                                              }
                                            ],
                                            "names": []
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "FalseBody": null
                                }
                              ]
                            }
                          },
                          {
                            "type": "IfStatement",
                            "condition": {
                              "type": "BinaryOperation",
                              "operator": ">",
                              "left": {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "Identifier",
                                  "name": "votingPower"
                                },
                                "index": {
                                  "type": "Identifier",
                                  "name": "i"
                                }
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "0",
                                "subdenomination": null
                              }
                            },
                            "TrueBody": {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "BinaryOperation",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "hasPower"
                                },
                                "right": {
                                  "type": "BooleanLiteral",
                                  "value": true
                                }
                              }
                            },
                            "FalseBody": null
                          }
                        ]
                      },
                      "FalseBody": null
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "||",
                      "left": {
                        "type": "Identifier",
                        "name": "isPrimary"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "hasPower"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "No voting power"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "_daysFromDate",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "year",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "month",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "day",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "_days",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": ">=",
                      "left": {
                        "type": "Identifier",
                        "name": "year"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "1970",
                        "subdenomination": null
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "int"
                    },
                    "name": "_year",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "int"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "year"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "int"
                    },
                    "name": "_month",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "int"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "month"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "int"
                    },
                    "name": "_day",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "int"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "day"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "int"
                    },
                    "name": "__days",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "-",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "-",
                    "left": {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                          "type": "BinaryOperation",
                          "operator": "-",
                          "left": {
                            "type": "Identifier",
                            "name": "_day"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "32075",
                            "subdenomination": null
                          }
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": "/",
                          "left": {
                            "type": "BinaryOperation",
                            "operator": "*",
                            "left": {
                              "type": "NumberLiteral",
                              "number": "1461",
                              "subdenomination": null
                            },
                            "right": {
                              "type": "TupleExpression",
                              "components": [
                                {
                                  "type": "BinaryOperation",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryOperation",
                                    "operator": "+",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "_year"
                                    },
                                    "right": {
                                      "type": "NumberLiteral",
                                      "number": "4800",
                                      "subdenomination": null
                                    }
                                  },
                                  "right": {
                                    "type": "BinaryOperation",
                                    "operator": "/",
                                    "left": {
                                      "type": "TupleExpression",
                                      "components": [
                                        {
                                          "type": "BinaryOperation",
                                          "operator": "-",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "_month"
                                          },
                                          "right": {
                                            "type": "NumberLiteral",
                                            "number": "14",
                                            "subdenomination": null
                                          }
                                        }
                                      ],
                                      "isArray": false
                                    },
                                    "right": {
                                      "type": "NumberLiteral",
                                      "number": "12",
                                      "subdenomination": null
                                    }
                                  }
                                }
                              ],
                              "isArray": false
                            }
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "4",
                            "subdenomination": null
                          }
                        }
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "/",
                        "left": {
                          "type": "BinaryOperation",
                          "operator": "*",
                          "left": {
                            "type": "NumberLiteral",
                            "number": "367",
                            "subdenomination": null
                          },
                          "right": {
                            "type": "TupleExpression",
                            "components": [
                              {
                                "type": "BinaryOperation",
                                "operator": "-",
                                "left": {
                                  "type": "BinaryOperation",
                                  "operator": "-",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "_month"
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "2",
                                    "subdenomination": null
                                  }
                                },
                                "right": {
                                  "type": "BinaryOperation",
                                  "operator": "*",
                                  "left": {
                                    "type": "BinaryOperation",
                                    "operator": "/",
                                    "left": {
                                      "type": "TupleExpression",
                                      "components": [
                                        {
                                          "type": "BinaryOperation",
                                          "operator": "-",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "_month"
                                          },
                                          "right": {
                                            "type": "NumberLiteral",
                                            "number": "14",
                                            "subdenomination": null
                                          }
                                        }
                                      ],
                                      "isArray": false
                                    },
                                    "right": {
                                      "type": "NumberLiteral",
                                      "number": "12",
                                      "subdenomination": null
                                    }
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "12",
                                    "subdenomination": null
                                  }
                                }
                              }
                            ],
                            "isArray": false
                          }
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "12",
                          "subdenomination": null
                        }
                      }
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "/",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                          "type": "NumberLiteral",
                          "number": "3",
                          "subdenomination": null
                        },
                        "right": {
                          "type": "TupleExpression",
                          "components": [
                            {
                              "type": "BinaryOperation",
                              "operator": "/",
                              "left": {
                                "type": "TupleExpression",
                                "components": [
                                  {
                                    "type": "BinaryOperation",
                                    "operator": "+",
                                    "left": {
                                      "type": "BinaryOperation",
                                      "operator": "+",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "_year"
                                      },
                                      "right": {
                                        "type": "NumberLiteral",
                                        "number": "4900",
                                        "subdenomination": null
                                      }
                                    },
                                    "right": {
                                      "type": "BinaryOperation",
                                      "operator": "/",
                                      "left": {
                                        "type": "TupleExpression",
                                        "components": [
                                          {
                                            "type": "BinaryOperation",
                                            "operator": "-",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "_month"
                                            },
                                            "right": {
                                              "type": "NumberLiteral",
                                              "number": "14",
                                              "subdenomination": null
                                            }
                                          }
                                        ],
                                        "isArray": false
                                      },
                                      "right": {
                                        "type": "NumberLiteral",
                                        "number": "12",
                                        "subdenomination": null
                                      }
                                    }
                                  }
                                ],
                                "isArray": false
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "100",
                                "subdenomination": null
                              }
                            }
                          ],
                          "isArray": false
                        }
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "4",
                        "subdenomination": null
                      }
                    }
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "2440588",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "_days"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "uint"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "__days"
                      }
                    ],
                    "names": []
                  }
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "timestampFromDateTime",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "year",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "month",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "day",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "hour",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "minute",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "second",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "timestamp"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                          "type": "BinaryOperation",
                          "operator": "*",
                          "left": {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "Identifier",
                              "name": "_daysFromDate"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "year"
                              },
                              {
                                "type": "Identifier",
                                "name": "month"
                              },
                              {
                                "type": "Identifier",
                                "name": "day"
                              }
                            ],
                            "names": []
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "86400",
                            "subdenomination": null
                          }
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": "*",
                          "left": {
                            "type": "Identifier",
                            "name": "hour"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "3600",
                            "subdenomination": null
                          }
                        }
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                          "type": "Identifier",
                          "name": "minute"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "60",
                          "subdenomination": null
                        }
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "second"
                    }
                  }
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "_daysToDate",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "_days",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "year",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "month",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "day",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "int"
                    },
                    "name": "__days",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "int"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_days"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "int"
                    },
                    "name": "L",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "Identifier",
                      "name": "__days"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "68569",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "2440588",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "int"
                    },
                    "name": "N",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "/",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "4",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "L"
                    }
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "146097",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "L"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "-",
                    "left": {
                      "type": "Identifier",
                      "name": "L"
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "/",
                      "left": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "+",
                            "left": {
                              "type": "BinaryOperation",
                              "operator": "*",
                              "left": {
                                "type": "NumberLiteral",
                                "number": "146097",
                                "subdenomination": null
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "N"
                              }
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "3",
                              "subdenomination": null
                            }
                          }
                        ],
                        "isArray": false
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "4",
                        "subdenomination": null
                      }
                    }
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "int"
                    },
                    "name": "_year",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "/",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "4000",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "TupleExpression",
                      "components": [
                        {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "L"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "1",
                            "subdenomination": null
                          }
                        }
                      ],
                      "isArray": false
                    }
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "1461001",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "L"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "BinaryOperation",
                      "operator": "-",
                      "left": {
                        "type": "Identifier",
                        "name": "L"
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "/",
                        "left": {
                          "type": "BinaryOperation",
                          "operator": "*",
                          "left": {
                            "type": "NumberLiteral",
                            "number": "1461",
                            "subdenomination": null
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "_year"
                          }
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "4",
                          "subdenomination": null
                        }
                      }
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "31",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "int"
                    },
                    "name": "_month",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "/",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "80",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "L"
                    }
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "2447",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "int"
                    },
                    "name": "_day",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "-",
                  "left": {
                    "type": "Identifier",
                    "name": "L"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "/",
                    "left": {
                      "type": "BinaryOperation",
                      "operator": "*",
                      "left": {
                        "type": "NumberLiteral",
                        "number": "2447",
                        "subdenomination": null
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "_month"
                      }
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "80",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "L"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "/",
                    "left": {
                      "type": "Identifier",
                      "name": "_month"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "11",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "_month"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "-",
                    "left": {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "Identifier",
                        "name": "_month"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "2",
                        "subdenomination": null
                      }
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "*",
                      "left": {
                        "type": "NumberLiteral",
                        "number": "12",
                        "subdenomination": null
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "L"
                      }
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "_year"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                          "type": "NumberLiteral",
                          "number": "100",
                          "subdenomination": null
                        },
                        "right": {
                          "type": "TupleExpression",
                          "components": [
                            {
                              "type": "BinaryOperation",
                              "operator": "-",
                              "left": {
                                "type": "Identifier",
                                "name": "N"
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "49",
                                "subdenomination": null
                              }
                            }
                          ],
                          "isArray": false
                        }
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "_year"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "L"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "year"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "uint"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "_year"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "month"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "uint"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "_month"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "day"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "ElementaryTypeName",
                      "name": "uint"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "_day"
                      }
                    ],
                    "names": []
                  }
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "timestampToDate",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "timestamp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "year",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "month",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint"
                },
                "name": "day",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "Identifier",
                        "name": "year"
                      },
                      {
                        "type": "Identifier",
                        "name": "month"
                      },
                      {
                        "type": "Identifier",
                        "name": "day"
                      }
                    ],
                    "isArray": false
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "_daysToDate"
                    },
                    "arguments": [
                      {
                        "type": "BinaryOperation",
                        "operator": "/",
                        "left": {
                          "type": "Identifier",
                          "name": "timestamp"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "86400",
                          "subdenomination": null
                        }
                      }
                    ],
                    "names": []
                  }
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        }
      ],
      "kind": "contract"
    }
  ]
}