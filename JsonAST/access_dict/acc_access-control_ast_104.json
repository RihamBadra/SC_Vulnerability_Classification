{
    "type": "SourceUnit",
    "children": {
        "0": {
            "type": "PragmaDirective",
            "name": "solidity",
            "value": "0.4.24"
        },
        "1": {
            "type": "ContractDefinition",
            "name": "BBLib",
            "baseContracts": {},
            "subNodes": {
                "0": {
                    "type": "UsingForDeclaration",
                    "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "bytes"
                    },
                    "libraryName": "BytesLib"
                },
                "1": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "BB_VERSION",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "6",
                                "subdenomination": null
                            },
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "6",
                        "subdenomination": null
                    }
                },
                "2": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint16"
                            },
                            "name": "USE_ETH",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "1",
                                "subdenomination": null
                            },
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "1",
                        "subdenomination": null
                    }
                },
                "3": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint16"
                            },
                            "name": "USE_SIGNED",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "2",
                                "subdenomination": null
                            },
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "2",
                        "subdenomination": null
                    }
                },
                "4": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint16"
                            },
                            "name": "USE_NO_ENC",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "4",
                                "subdenomination": null
                            },
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "4",
                        "subdenomination": null
                    }
                },
                "5": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint16"
                            },
                            "name": "USE_ENC",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "8",
                                "subdenomination": null
                            },
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "8",
                        "subdenomination": null
                    }
                },
                "6": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint16"
                            },
                            "name": "IS_BINDING",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "8192",
                                "subdenomination": null
                            },
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "8192",
                        "subdenomination": null
                    }
                },
                "7": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint16"
                            },
                            "name": "IS_OFFICIAL",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "16384",
                                "subdenomination": null
                            },
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "16384",
                        "subdenomination": null
                    }
                },
                "8": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint16"
                            },
                            "name": "USE_TESTING",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "32768",
                                "subdenomination": null
                            },
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "32768",
                        "subdenomination": null
                    }
                },
                "9": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint32"
                            },
                            "name": "MAX_UINT32",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "0xFFFFFFFF",
                                "subdenomination": null
                            },
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "0xFFFFFFFF",
                        "subdenomination": null
                    }
                },
                "10": {
                    "type": "StructDefinition",
                    "name": "Vote",
                    "members": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "bytes32"
                            },
                            "name": "voteData",
                            "storageLocation": null
                        },
                        "1": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "bytes32"
                            },
                            "name": "castTsAndSender",
                            "storageLocation": null
                        },
                        "2": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "bytes"
                            },
                            "name": "extra",
                            "storageLocation": null
                        }
                    }
                },
                "11": {
                    "type": "StructDefinition",
                    "name": "Sponsor",
                    "members": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "address"
                            },
                            "name": "sender",
                            "storageLocation": null
                        },
                        "1": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint"
                            },
                            "name": "amount",
                            "storageLocation": null
                        }
                    }
                },
                "12": {
                    "type": "EventDefinition",
                    "name": "CreatedBallot",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes32"
                                },
                                "name": "_specHash",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint64"
                                },
                                "name": "startTs",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "2": {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint64"
                                },
                                "name": "endTs",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "3": {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "submissionBits",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "isAnonymous": false
                },
                "13": {
                    "type": "EventDefinition",
                    "name": "SuccessfulVote",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "voter",
                                "isStateVar": false,
                                "isIndexed": true
                            },
                            "1": {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "voteId",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "isAnonymous": false
                },
                "14": {
                    "type": "EventDefinition",
                    "name": "SeckeyRevealed",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes32"
                                },
                                "name": "secretKey",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "isAnonymous": false
                },
                "15": {
                    "type": "EventDefinition",
                    "name": "TestingEnabled",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {}
                    },
                    "isAnonymous": false
                },
                "16": {
                    "type": "EventDefinition",
                    "name": "DeprecatedContract",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {}
                    },
                    "isAnonymous": false
                },
                "17": {
                    "type": "StructDefinition",
                    "name": "DB",
                    "members": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "valueType": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "Vote"
                                }
                            },
                            "name": "votes",
                            "storageLocation": null
                        },
                        "1": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "nVotesCast",
                            "storageLocation": null
                        },
                        "2": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint32"
                                }
                            },
                            "name": "sequenceNumber",
                            "storageLocation": null
                        },
                        "3": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "bytes32"
                            },
                            "name": "ballotEncryptionSeckey",
                            "storageLocation": null
                        },
                        "4": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "packed",
                            "storageLocation": null
                        },
                        "5": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "bytes32"
                            },
                            "name": "specHash",
                            "storageLocation": null
                        },
                        "6": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "bytes16"
                            },
                            "name": "extraData",
                            "storageLocation": null
                        },
                        "7": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ArrayTypeName",
                                "baseTypeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "Sponsor"
                                },
                                "length": null
                            },
                            "name": "sponsors",
                            "storageLocation": null
                        },
                        "8": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "UserDefinedTypeName",
                                "namePath": "IxIface"
                            },
                            "name": "index",
                            "storageLocation": null
                        },
                        "9": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "bool"
                            },
                            "name": "deprecated",
                            "storageLocation": null
                        },
                        "10": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "address"
                            },
                            "name": "ballotOwner",
                            "storageLocation": null
                        },
                        "11": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "creationTs",
                            "storageLocation": null
                        }
                    }
                },
                "18": {
                    "type": "FunctionDefinition",
                    "name": "requireBallotClosed",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "DB"
                                },
                                "name": "db",
                                "storageLocation": "storage",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {},
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "BinaryOperation",
                                            "operator": ">",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "now"
                                            },
                                            "right": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "BPackedUtils"
                                                    },
                                                    "memberName": "packedToEndTime"
                                                },
                                                "arguments": {
                                                    "0": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "db"
                                                        },
                                                        "memberName": "packed"
                                                    }
                                                },
                                                "names": {}
                                            }
                                        },
                                        "1": {
                                            "type": "stringLiteral",
                                            "value": "!b-closed"
                                        }
                                    },
                                    "names": {}
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                "19": {
                    "type": "FunctionDefinition",
                    "name": "requireBallotOpen",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "DB"
                                },
                                "name": "db",
                                "storageLocation": "storage",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {},
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint64"
                                        },
                                        "name": "_n",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint64"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "Identifier",
                                            "name": "now"
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "1": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint64"
                                        },
                                        "name": "startTs",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": null
                            },
                            "2": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint64"
                                        },
                                        "name": "endTs",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": null
                            },
                            "3": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "TupleExpression",
                                        "components": {
                                            "0": null,
                                            "1": {
                                                "type": "Identifier",
                                                "name": "startTs"
                                            },
                                            "2": {
                                                "type": "Identifier",
                                                "name": "endTs"
                                            }
                                        },
                                        "isArray": false
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "BPackedUtils"
                                            },
                                            "memberName": "unpackAll"
                                        },
                                        "arguments": {
                                            "0": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "db"
                                                },
                                                "memberName": "packed"
                                            }
                                        },
                                        "names": {}
                                    }
                                }
                            },
                            "4": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "BinaryOperation",
                                            "operator": "&&",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": ">=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_n"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "startTs"
                                                }
                                            },
                                            "right": {
                                                "type": "BinaryOperation",
                                                "operator": "<",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_n"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "endTs"
                                                }
                                            }
                                        },
                                        "1": {
                                            "type": "stringLiteral",
                                            "value": "!b-open"
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "5": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "db"
                                                },
                                                "memberName": "deprecated"
                                            },
                                            "right": {
                                                "type": "BooleanLiteral",
                                                "value": false
                                            }
                                        },
                                        "1": {
                                            "type": "stringLiteral",
                                            "value": "b-deprecated"
                                        }
                                    },
                                    "names": {}
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                "20": {
                    "type": "FunctionDefinition",
                    "name": "requireBallotOwner",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "DB"
                                },
                                "name": "db",
                                "storageLocation": "storage",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {},
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            },
                                            "right": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "db"
                                                },
                                                "memberName": "ballotOwner"
                                            }
                                        },
                                        "1": {
                                            "type": "stringLiteral",
                                            "value": "!b-owner"
                                        }
                                    },
                                    "names": {}
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                "21": {
                    "type": "FunctionDefinition",
                    "name": "requireTesting",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "DB"
                                },
                                "name": "db",
                                "storageLocation": "storage",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {},
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "isTesting"
                                            },
                                            "arguments": {
                                                "0": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "BPackedUtils"
                                                        },
                                                        "memberName": "packedToSubmissionBits"
                                                    },
                                                    "arguments": {
                                                        "0": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "db"
                                                            },
                                                            "memberName": "packed"
                                                        }
                                                    },
                                                    "names": {}
                                                }
                                            },
                                            "names": {}
                                        },
                                        "1": {
                                            "type": "stringLiteral",
                                            "value": "!testing"
                                        }
                                    },
                                    "names": {}
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                "22": {
                    "type": "FunctionDefinition",
                    "name": "getVersion",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {}
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "Identifier",
                                "name": "BB_VERSION"
                            }
                        }
                    },
                    "visibility": "external",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "23": {
                    "type": "FunctionDefinition",
                    "name": "init",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "DB"
                                },
                                "name": "db",
                                "storageLocation": "storage",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes32"
                                },
                                "name": "_specHash",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "2": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_packed",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "3": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "IxIface"
                                },
                                "name": "ix",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "4": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "ballotOwner",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "5": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes16"
                                },
                                "name": "extraData",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {},
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "db"
                                                },
                                                "memberName": "specHash"
                                            },
                                            "right": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "ElementaryTypeName",
                                                    "name": "bytes32"
                                                },
                                                "arguments": {
                                                    "0": {
                                                        "type": "NumberLiteral",
                                                        "number": "0",
                                                        "subdenomination": null
                                                    }
                                                },
                                                "names": {}
                                            }
                                        },
                                        "1": {
                                            "type": "stringLiteral",
                                            "value": "b-exists"
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "1": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "db"
                                        },
                                        "memberName": "index"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "ix"
                                    }
                                }
                            },
                            "2": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "db"
                                        },
                                        "memberName": "ballotOwner"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "ballotOwner"
                                    }
                                }
                            },
                            "3": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint64"
                                        },
                                        "name": "startTs",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": null
                            },
                            "4": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint64"
                                        },
                                        "name": "endTs",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": null
                            },
                            "5": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint16"
                                        },
                                        "name": "sb",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": null
                            },
                            "6": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "TupleExpression",
                                        "components": {
                                            "0": {
                                                "type": "Identifier",
                                                "name": "sb"
                                            },
                                            "1": {
                                                "type": "Identifier",
                                                "name": "startTs"
                                            },
                                            "2": {
                                                "type": "Identifier",
                                                "name": "endTs"
                                            }
                                        },
                                        "isArray": false
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "BPackedUtils"
                                            },
                                            "memberName": "unpackAll"
                                        },
                                        "arguments": {
                                            "0": {
                                                "type": "Identifier",
                                                "name": "_packed"
                                            }
                                        },
                                        "names": {}
                                    }
                                }
                            },
                            "7": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "bool"
                                        },
                                        "name": "_testing",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "isTesting"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "Identifier",
                                            "name": "sb"
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "8": {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "Identifier",
                                    "name": "_testing"
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": {
                                        "0": {
                                            "type": "EmitStatement",
                                            "eventCall": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "TestingEnabled"
                                                },
                                                "arguments": {},
                                                "names": {}
                                            }
                                        }
                                    }
                                },
                                "FalseBody": {
                                    "type": "Block",
                                    "statements": {
                                        "0": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": {
                                                    "0": {
                                                        "type": "BinaryOperation",
                                                        "operator": ">",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "endTs"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "now"
                                                        }
                                                    },
                                                    "1": {
                                                        "type": "stringLiteral",
                                                        "value": "bad-end-time"
                                                    }
                                                },
                                                "names": {}
                                            }
                                        },
                                        "1": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": {
                                                    "0": {
                                                        "type": "BinaryOperation",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "BinaryOperation",
                                                            "operator": "&",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "sb"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "0x1ff2",
                                                                "subdenomination": null
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "0",
                                                            "subdenomination": null
                                                        }
                                                    },
                                                    "1": {
                                                        "type": "stringLiteral",
                                                        "value": "bad-sb"
                                                    }
                                                },
                                                "names": {}
                                            }
                                        },
                                        "2": {
                                            "type": "VariableDeclarationStatement",
                                            "variables": {
                                                "0": {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "bool"
                                                    },
                                                    "name": "okaySubmissionBits",
                                                    "storageLocation": null
                                                }
                                            },
                                            "initialValue": {
                                                "type": "BinaryOperation",
                                                "operator": "==",
                                                "left": {
                                                    "type": "NumberLiteral",
                                                    "number": "1",
                                                    "subdenomination": null
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "TupleExpression",
                                                        "components": {
                                                            "0": {
                                                                "type": "Conditional",
                                                                "condition": {
                                                                    "type": "FunctionCall",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "isEthNoEnc"
                                                                    },
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "Identifier",
                                                                            "name": "sb"
                                                                        }
                                                                    },
                                                                    "names": {}
                                                                },
                                                                "TrueExpression": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "1",
                                                                    "subdenomination": null
                                                                },
                                                                "FalseExpression": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "0",
                                                                    "subdenomination": null
                                                                }
                                                            }
                                                        },
                                                        "isArray": false
                                                    },
                                                    "right": {
                                                        "type": "TupleExpression",
                                                        "components": {
                                                            "0": {
                                                                "type": "Conditional",
                                                                "condition": {
                                                                    "type": "FunctionCall",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "isEthWithEnc"
                                                                    },
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "Identifier",
                                                                            "name": "sb"
                                                                        }
                                                                    },
                                                                    "names": {}
                                                                },
                                                                "TrueExpression": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "1",
                                                                    "subdenomination": null
                                                                },
                                                                "FalseExpression": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "0",
                                                                    "subdenomination": null
                                                                }
                                                            }
                                                        },
                                                        "isArray": false
                                                    }
                                                }
                                            }
                                        },
                                        "3": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": {
                                                    "0": {
                                                        "type": "Identifier",
                                                        "name": "okaySubmissionBits"
                                                    },
                                                    "1": {
                                                        "type": "stringLiteral",
                                                        "value": "!valid-sb"
                                                    }
                                                },
                                                "names": {}
                                            }
                                        },
                                        "4": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "startTs"
                                                },
                                                "right": {
                                                    "type": "Conditional",
                                                    "condition": {
                                                        "type": "BinaryOperation",
                                                        "operator": ">",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "startTs"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "now"
                                                        }
                                                    },
                                                    "TrueExpression": {
                                                        "type": "Identifier",
                                                        "name": "startTs"
                                                    },
                                                    "FalseExpression": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "ElementaryTypeName",
                                                            "name": "uint64"
                                                        },
                                                        "arguments": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "now"
                                                            }
                                                        },
                                                        "names": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "9": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "BinaryOperation",
                                            "operator": "!=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_specHash"
                                            },
                                            "right": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "ElementaryTypeName",
                                                    "name": "bytes32"
                                                },
                                                "arguments": {
                                                    "0": {
                                                        "type": "NumberLiteral",
                                                        "number": "0",
                                                        "subdenomination": null
                                                    }
                                                },
                                                "names": {}
                                            }
                                        },
                                        "1": {
                                            "type": "stringLiteral",
                                            "value": "null-specHash"
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "10": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "db"
                                        },
                                        "memberName": "specHash"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_specHash"
                                    }
                                }
                            },
                            "11": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "db"
                                        },
                                        "memberName": "packed"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "BPackedUtils"
                                            },
                                            "memberName": "pack"
                                        },
                                        "arguments": {
                                            "0": {
                                                "type": "Identifier",
                                                "name": "sb"
                                            },
                                            "1": {
                                                "type": "Identifier",
                                                "name": "startTs"
                                            },
                                            "2": {
                                                "type": "Identifier",
                                                "name": "endTs"
                                            }
                                        },
                                        "names": {}
                                    }
                                }
                            },
                            "12": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "db"
                                        },
                                        "memberName": "creationTs"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "now"
                                    }
                                }
                            },
                            "13": {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "!=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "extraData"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "ElementaryTypeName",
                                            "name": "bytes16"
                                        },
                                        "arguments": {
                                            "0": {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        },
                                        "names": {}
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": {
                                        "0": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "db"
                                                    },
                                                    "memberName": "extraData"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "extraData"
                                                }
                                            }
                                        }
                                    }
                                },
                                "FalseBody": null
                            },
                            "14": {
                                "type": "EmitStatement",
                                "eventCall": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "CreatedBallot"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "db"
                                            },
                                            "memberName": "specHash"
                                        },
                                        "1": {
                                            "type": "Identifier",
                                            "name": "startTs"
                                        },
                                        "2": {
                                            "type": "Identifier",
                                            "name": "endTs"
                                        },
                                        "3": {
                                            "type": "Identifier",
                                            "name": "sb"
                                        }
                                    },
                                    "names": {}
                                }
                            }
                        }
                    },
                    "visibility": "external",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                "24": {
                    "type": "FunctionDefinition",
                    "name": "logSponsorship",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "DB"
                                },
                                "name": "db",
                                "storageLocation": "storage",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "value",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {},
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "db"
                                            },
                                            "memberName": "sponsors"
                                        },
                                        "memberName": "push"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "Sponsor"
                                            },
                                            "arguments": {
                                                "0": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "msg"
                                                    },
                                                    "memberName": "sender"
                                                },
                                                "1": {
                                                    "type": "Identifier",
                                                    "name": "value"
                                                }
                                            },
                                            "names": {}
                                        }
                                    },
                                    "names": {}
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                "25": {
                    "type": "FunctionDefinition",
                    "name": "getVote",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "DB"
                                },
                                "name": "db",
                                "storageLocation": "storage",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "id",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes32"
                                },
                                "name": "voteData",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "sender",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "2": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes"
                                },
                                "name": "extra",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "3": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "castTs",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "TupleExpression",
                                "components": {
                                    "0": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "db"
                                                },
                                                "memberName": "votes"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "id"
                                            }
                                        },
                                        "memberName": "voteData"
                                    },
                                    "1": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "ElementaryTypeName",
                                            "name": "address"
                                        },
                                        "arguments": {
                                            "0": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "db"
                                                        },
                                                        "memberName": "votes"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "id"
                                                    }
                                                },
                                                "memberName": "castTsAndSender"
                                            }
                                        },
                                        "names": {}
                                    },
                                    "2": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "db"
                                                },
                                                "memberName": "votes"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "id"
                                            }
                                        },
                                        "memberName": "extra"
                                    },
                                    "3": {
                                        "type": "BinaryOperation",
                                        "operator": ">>",
                                        "left": {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "ElementaryTypeName",
                                                "name": "uint"
                                            },
                                            "arguments": {
                                                "0": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "db"
                                                            },
                                                            "memberName": "votes"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "id"
                                                        }
                                                    },
                                                    "memberName": "castTsAndSender"
                                                }
                                            },
                                            "names": {}
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "160",
                                            "subdenomination": null
                                        }
                                    }
                                },
                                "isArray": false
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                "26": {
                    "type": "FunctionDefinition",
                    "name": "getSequenceNumber",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "DB"
                                },
                                "name": "db",
                                "storageLocation": "storage",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "voter",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint32"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "IndexAccess",
                                "base": {
                                    "type": "MemberAccess",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "db"
                                    },
                                    "memberName": "sequenceNumber"
                                },
                                "index": {
                                    "type": "Identifier",
                                    "name": "voter"
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                "27": {
                    "type": "FunctionDefinition",
                    "name": "getTotalSponsorship",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "DB"
                                },
                                "name": "db",
                                "storageLocation": "storage",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "total",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "ForStatement",
                                "initExpression": {
                                    "type": "VariableDeclarationStatement",
                                    "variables": {
                                        "0": {
                                            "type": "VariableDeclaration",
                                            "typeName": {
                                                "type": "ElementaryTypeName",
                                                "name": "uint"
                                            },
                                            "name": "i",
                                            "storageLocation": null
                                        }
                                    },
                                    "initialValue": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "conditionExpression": {
                                    "type": "BinaryOperation",
                                    "operator": "<",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "i"
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "db"
                                            },
                                            "memberName": "sponsors"
                                        },
                                        "memberName": "length"
                                    }
                                },
                                "loopExpression": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "UnaryOperation",
                                        "operator": "++",
                                        "subExpression": {
                                            "type": "Identifier",
                                            "name": "i"
                                        },
                                        "isPrefix": false
                                    }
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": {
                                        "0": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "total"
                                                },
                                                "right": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "db"
                                                            },
                                                            "memberName": "sponsors"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "i"
                                                        }
                                                    },
                                                    "memberName": "amount"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                "28": {
                    "type": "FunctionDefinition",
                    "name": "getSponsor",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "DB"
                                },
                                "name": "db",
                                "storageLocation": "storage",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "i",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "sender",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "amount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "sender"
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "db"
                                                },
                                                "memberName": "sponsors"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "i"
                                            }
                                        },
                                        "memberName": "sender"
                                    }
                                }
                            },
                            "1": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "amount"
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "db"
                                                },
                                                "memberName": "sponsors"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "i"
                                            }
                                        },
                                        "memberName": "amount"
                                    }
                                }
                            }
                        }
                    },
                    "visibility": "external",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                "29": {
                    "type": "FunctionDefinition",
                    "name": "submitVote",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "DB"
                                },
                                "name": "db",
                                "storageLocation": "storage",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes32"
                                },
                                "name": "voteData",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "2": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes"
                                },
                                "name": "extra",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {},
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "_addVote"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "Identifier",
                                            "name": "db"
                                        },
                                        "1": {
                                            "type": "Identifier",
                                            "name": "voteData"
                                        },
                                        "2": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        "3": {
                                            "type": "Identifier",
                                            "name": "extra"
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "1": {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "!=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "db"
                                            },
                                            "memberName": "sequenceNumber"
                                        },
                                        "index": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "MAX_UINT32"
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": {
                                        "0": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "db"
                                                        },
                                                        "memberName": "sequenceNumber"
                                                    },
                                                    "index": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "MAX_UINT32"
                                                }
                                            }
                                        }
                                    }
                                },
                                "FalseBody": null
                            }
                        }
                    },
                    "visibility": "external",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                "30": {
                    "type": "FunctionDefinition",
                    "name": "submitProxyVote",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "DB"
                                },
                                "name": "db",
                                "storageLocation": "storage",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ArrayTypeName",
                                    "baseTypeName": {
                                        "type": "ElementaryTypeName",
                                        "name": "bytes32"
                                    },
                                    "length": {
                                        "type": "NumberLiteral",
                                        "number": "5",
                                        "subdenomination": null
                                    }
                                },
                                "name": "proxyReq",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "2": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes"
                                },
                                "name": "extra",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "voter",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "bytes32"
                                        },
                                        "name": "r",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "proxyReq"
                                    },
                                    "index": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                }
                            },
                            "1": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "bytes32"
                                        },
                                        "name": "s",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "proxyReq"
                                    },
                                    "index": {
                                        "type": "NumberLiteral",
                                        "number": "1",
                                        "subdenomination": null
                                    }
                                }
                            },
                            "2": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint8"
                                        },
                                        "name": "v",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint8"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "proxyReq"
                                                },
                                                "index": {
                                                    "type": "NumberLiteral",
                                                    "number": "2",
                                                    "subdenomination": null
                                                }
                                            },
                                            "index": {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "3": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "bytes31"
                                        },
                                        "name": "proxyReq2",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "ElementaryTypeName",
                                        "name": "bytes31"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "ElementaryTypeName",
                                                "name": "uint248"
                                            },
                                            "arguments": {
                                                "0": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "proxyReq"
                                                    },
                                                    "index": {
                                                        "type": "NumberLiteral",
                                                        "number": "2",
                                                        "subdenomination": null
                                                    }
                                                }
                                            },
                                            "names": {}
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "4": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "bytes32"
                                        },
                                        "name": "ballotId",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "proxyReq"
                                    },
                                    "index": {
                                        "type": "NumberLiteral",
                                        "number": "3",
                                        "subdenomination": null
                                    }
                                }
                            },
                            "5": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "bytes32"
                                        },
                                        "name": "voteData",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "proxyReq"
                                    },
                                    "index": {
                                        "type": "NumberLiteral",
                                        "number": "4",
                                        "subdenomination": null
                                    }
                                }
                            },
                            "6": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "bytes"
                                        },
                                        "name": "signed",
                                        "storageLocation": "memory"
                                    }
                                },
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "abi"
                                        },
                                        "memberName": "encodePacked"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "Identifier",
                                            "name": "proxyReq2"
                                        },
                                        "1": {
                                            "type": "Identifier",
                                            "name": "ballotId"
                                        },
                                        "2": {
                                            "type": "Identifier",
                                            "name": "voteData"
                                        },
                                        "3": {
                                            "type": "Identifier",
                                            "name": "extra"
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "7": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "bytes32"
                                        },
                                        "name": "msgHash",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "keccak256"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "Identifier",
                                            "name": "signed"
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "8": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "voter"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "ecrecover"
                                        },
                                        "arguments": {
                                            "0": {
                                                "type": "Identifier",
                                                "name": "msgHash"
                                            },
                                            "1": {
                                                "type": "Identifier",
                                                "name": "v"
                                            },
                                            "2": {
                                                "type": "Identifier",
                                                "name": "r"
                                            },
                                            "3": {
                                                "type": "Identifier",
                                                "name": "s"
                                            }
                                        },
                                        "names": {}
                                    }
                                }
                            },
                            "9": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint32"
                                        },
                                        "name": "sequence",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint32"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "Identifier",
                                            "name": "proxyReq2"
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "10": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "_proxyReplayProtection"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "Identifier",
                                            "name": "db"
                                        },
                                        "1": {
                                            "type": "Identifier",
                                            "name": "voter"
                                        },
                                        "2": {
                                            "type": "Identifier",
                                            "name": "sequence"
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "11": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "_addVote"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "Identifier",
                                            "name": "db"
                                        },
                                        "1": {
                                            "type": "Identifier",
                                            "name": "voteData"
                                        },
                                        "2": {
                                            "type": "Identifier",
                                            "name": "voter"
                                        },
                                        "3": {
                                            "type": "Identifier",
                                            "name": "extra"
                                        }
                                    },
                                    "names": {}
                                }
                            }
                        }
                    },
                    "visibility": "external",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                "31": {
                    "type": "FunctionDefinition",
                    "name": "_addVote",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "DB"
                                },
                                "name": "db",
                                "storageLocation": "storage",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes32"
                                },
                                "name": "voteData",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "2": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "sender",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "3": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes"
                                },
                                "name": "extra",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "id",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "requireBallotOpen"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "Identifier",
                                            "name": "db"
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "1": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "id"
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "db"
                                        },
                                        "memberName": "nVotesCast"
                                    }
                                }
                            },
                            "2": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "db"
                                                },
                                                "memberName": "votes"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "id"
                                            }
                                        },
                                        "memberName": "voteData"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "voteData"
                                    }
                                }
                            },
                            "3": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "db"
                                                },
                                                "memberName": "votes"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "id"
                                            }
                                        },
                                        "memberName": "castTsAndSender"
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "^",
                                        "left": {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "ElementaryTypeName",
                                                "name": "bytes32"
                                            },
                                            "arguments": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "sender"
                                                }
                                            },
                                            "names": {}
                                        },
                                        "right": {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "ElementaryTypeName",
                                                "name": "bytes32"
                                            },
                                            "arguments": {
                                                "0": {
                                                    "type": "BinaryOperation",
                                                    "operator": "<<",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "now"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "160",
                                                        "subdenomination": null
                                                    }
                                                }
                                            },
                                            "names": {}
                                        }
                                    }
                                }
                            },
                            "4": {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": ">",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "extra"
                                        },
                                        "memberName": "length"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": {
                                        "0": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "db"
                                                            },
                                                            "memberName": "votes"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "id"
                                                        }
                                                    },
                                                    "memberName": "extra"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "extra"
                                                }
                                            }
                                        }
                                    }
                                },
                                "FalseBody": null
                            },
                            "5": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "db"
                                        },
                                        "memberName": "nVotesCast"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "1",
                                        "subdenomination": null
                                    }
                                }
                            },
                            "6": {
                                "type": "EmitStatement",
                                "eventCall": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "SuccessfulVote"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "Identifier",
                                            "name": "sender"
                                        },
                                        "1": {
                                            "type": "Identifier",
                                            "name": "id"
                                        }
                                    },
                                    "names": {}
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                "32": {
                    "type": "FunctionDefinition",
                    "name": "_proxyReplayProtection",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "DB"
                                },
                                "name": "db",
                                "storageLocation": "storage",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "voter",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "2": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint32"
                                },
                                "name": "sequence",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {},
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "BinaryOperation",
                                            "operator": "<",
                                            "left": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "db"
                                                    },
                                                    "memberName": "sequenceNumber"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "voter"
                                                }
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "sequence"
                                            }
                                        },
                                        "1": {
                                            "type": "stringLiteral",
                                            "value": "bad-sequence-n"
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "1": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "db"
                                            },
                                            "memberName": "sequenceNumber"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "voter"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "sequence"
                                    }
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                "33": {
                    "type": "FunctionDefinition",
                    "name": "setEndTime",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "DB"
                                },
                                "name": "db",
                                "storageLocation": "storage",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint64"
                                },
                                "name": "newEndTime",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {},
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint16"
                                        },
                                        "name": "sb",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": null
                            },
                            "1": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint64"
                                        },
                                        "name": "sTs",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": null
                            },
                            "2": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "TupleExpression",
                                        "components": {
                                            "0": {
                                                "type": "Identifier",
                                                "name": "sb"
                                            },
                                            "1": {
                                                "type": "Identifier",
                                                "name": "sTs"
                                            },
                                            "2": null
                                        },
                                        "isArray": false
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "BPackedUtils"
                                            },
                                            "memberName": "unpackAll"
                                        },
                                        "arguments": {
                                            "0": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "db"
                                                },
                                                "memberName": "packed"
                                            }
                                        },
                                        "names": {}
                                    }
                                }
                            },
                            "3": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "db"
                                        },
                                        "memberName": "packed"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "BPackedUtils"
                                            },
                                            "memberName": "pack"
                                        },
                                        "arguments": {
                                            "0": {
                                                "type": "Identifier",
                                                "name": "sb"
                                            },
                                            "1": {
                                                "type": "Identifier",
                                                "name": "sTs"
                                            },
                                            "2": {
                                                "type": "Identifier",
                                                "name": "newEndTime"
                                            }
                                        },
                                        "names": {}
                                    }
                                }
                            }
                        }
                    },
                    "visibility": "external",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                "34": {
                    "type": "FunctionDefinition",
                    "name": "revealSeckey",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "DB"
                                },
                                "name": "db",
                                "storageLocation": "storage",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes32"
                                },
                                "name": "sk",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {},
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "db"
                                        },
                                        "memberName": "ballotEncryptionSeckey"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "sk"
                                    }
                                }
                            },
                            "1": {
                                "type": "EmitStatement",
                                "eventCall": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "SeckeyRevealed"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "Identifier",
                                            "name": "sk"
                                        }
                                    },
                                    "names": {}
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                "35": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint16"
                            },
                            "name": "SETTINGS_MASK",
                            "expression": {
                                "type": "BinaryOperation",
                                "operator": "^",
                                "left": {
                                    "type": "BinaryOperation",
                                    "operator": "^",
                                    "left": {
                                        "type": "BinaryOperation",
                                        "operator": "^",
                                        "left": {
                                            "type": "NumberLiteral",
                                            "number": "0xFFFF",
                                            "subdenomination": null
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "USE_TESTING"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "IS_OFFICIAL"
                                    }
                                },
                                "right": {
                                    "type": "Identifier",
                                    "name": "IS_BINDING"
                                }
                            },
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "BinaryOperation",
                        "operator": "^",
                        "left": {
                            "type": "BinaryOperation",
                            "operator": "^",
                            "left": {
                                "type": "BinaryOperation",
                                "operator": "^",
                                "left": {
                                    "type": "NumberLiteral",
                                    "number": "0xFFFF",
                                    "subdenomination": null
                                },
                                "right": {
                                    "type": "Identifier",
                                    "name": "USE_TESTING"
                                }
                            },
                            "right": {
                                "type": "Identifier",
                                "name": "IS_OFFICIAL"
                            }
                        },
                        "right": {
                            "type": "Identifier",
                            "name": "IS_BINDING"
                        }
                    }
                },
                "36": {
                    "type": "FunctionDefinition",
                    "name": "isEthNoEnc",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "submissionBits",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "FunctionCall",
                                "expression": {
                                    "type": "Identifier",
                                    "name": "checkFlags"
                                },
                                "arguments": {
                                    "0": {
                                        "type": "Identifier",
                                        "name": "submissionBits"
                                    },
                                    "1": {
                                        "type": "BinaryOperation",
                                        "operator": "|",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "USE_ETH"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "USE_NO_ENC"
                                        }
                                    }
                                },
                                "names": {}
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "37": {
                    "type": "FunctionDefinition",
                    "name": "isEthWithEnc",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "submissionBits",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "FunctionCall",
                                "expression": {
                                    "type": "Identifier",
                                    "name": "checkFlags"
                                },
                                "arguments": {
                                    "0": {
                                        "type": "Identifier",
                                        "name": "submissionBits"
                                    },
                                    "1": {
                                        "type": "BinaryOperation",
                                        "operator": "|",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "USE_ETH"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "USE_ENC"
                                        }
                                    }
                                },
                                "names": {}
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "38": {
                    "type": "FunctionDefinition",
                    "name": "isOfficial",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "submissionBits",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "BinaryOperation",
                                "operator": "==",
                                "left": {
                                    "type": "TupleExpression",
                                    "components": {
                                        "0": {
                                            "type": "BinaryOperation",
                                            "operator": "&",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "submissionBits"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "IS_OFFICIAL"
                                            }
                                        }
                                    },
                                    "isArray": false
                                },
                                "right": {
                                    "type": "Identifier",
                                    "name": "IS_OFFICIAL"
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "39": {
                    "type": "FunctionDefinition",
                    "name": "isBinding",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "submissionBits",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "BinaryOperation",
                                "operator": "==",
                                "left": {
                                    "type": "TupleExpression",
                                    "components": {
                                        "0": {
                                            "type": "BinaryOperation",
                                            "operator": "&",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "submissionBits"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "IS_BINDING"
                                            }
                                        }
                                    },
                                    "isArray": false
                                },
                                "right": {
                                    "type": "Identifier",
                                    "name": "IS_BINDING"
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "40": {
                    "type": "FunctionDefinition",
                    "name": "isTesting",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "submissionBits",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "BinaryOperation",
                                "operator": "==",
                                "left": {
                                    "type": "TupleExpression",
                                    "components": {
                                        "0": {
                                            "type": "BinaryOperation",
                                            "operator": "&",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "submissionBits"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "USE_TESTING"
                                            }
                                        }
                                    },
                                    "isArray": false
                                },
                                "right": {
                                    "type": "Identifier",
                                    "name": "USE_TESTING"
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "41": {
                    "type": "FunctionDefinition",
                    "name": "qualifiesAsCommunityBallot",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "submissionBits",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "BinaryOperation",
                                "operator": "==",
                                "left": {
                                    "type": "TupleExpression",
                                    "components": {
                                        "0": {
                                            "type": "BinaryOperation",
                                            "operator": "&",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "submissionBits"
                                            },
                                            "right": {
                                                "type": "TupleExpression",
                                                "components": {
                                                    "0": {
                                                        "type": "BinaryOperation",
                                                        "operator": "|",
                                                        "left": {
                                                            "type": "BinaryOperation",
                                                            "operator": "|",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "IS_BINDING"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "IS_OFFICIAL"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "USE_ENC"
                                                        }
                                                    }
                                                },
                                                "isArray": false
                                            }
                                        }
                                    },
                                    "isArray": false
                                },
                                "right": {
                                    "type": "NumberLiteral",
                                    "number": "0",
                                    "subdenomination": null
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "42": {
                    "type": "FunctionDefinition",
                    "name": "checkFlags",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "submissionBits",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "expected",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint16"
                                        },
                                        "name": "sBitsNoSettings",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "&",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "submissionBits"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "SETTINGS_MASK"
                                    }
                                }
                            },
                            "1": {
                                "type": "BinaryOperation",
                                "operator": "==",
                                "left": {
                                    "type": "Identifier",
                                    "name": "sBitsNoSettings"
                                },
                                "right": {
                                    "type": "Identifier",
                                    "name": "expected"
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                }
            },
            "kind": "library"
        },
        "2": {
            "type": "ContractDefinition",
            "name": "BPackedUtils",
            "baseContracts": {},
            "subNodes": {
                "0": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "sbMask",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "0xffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffff",
                                "subdenomination": null
                            },
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "0xffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffff",
                        "subdenomination": null
                    }
                },
                "1": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "startTimeMask",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "0xffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff",
                                "subdenomination": null
                            },
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "0xffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff",
                        "subdenomination": null
                    }
                },
                "2": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "endTimeMask",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000",
                                "subdenomination": null
                            },
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000",
                        "subdenomination": null
                    }
                },
                "3": {
                    "type": "FunctionDefinition",
                    "name": "packedToSubmissionBits",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "packed",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "FunctionCall",
                                "expression": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "arguments": {
                                    "0": {
                                        "type": "BinaryOperation",
                                        "operator": ">>",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "packed"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "128",
                                            "subdenomination": null
                                        }
                                    }
                                },
                                "names": {}
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "4": {
                    "type": "FunctionDefinition",
                    "name": "packedToStartTime",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "packed",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint64"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "FunctionCall",
                                "expression": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint64"
                                },
                                "arguments": {
                                    "0": {
                                        "type": "BinaryOperation",
                                        "operator": ">>",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "packed"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "64",
                                            "subdenomination": null
                                        }
                                    }
                                },
                                "names": {}
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "5": {
                    "type": "FunctionDefinition",
                    "name": "packedToEndTime",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "packed",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint64"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "FunctionCall",
                                "expression": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint64"
                                },
                                "arguments": {
                                    "0": {
                                        "type": "Identifier",
                                        "name": "packed"
                                    }
                                },
                                "names": {}
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "6": {
                    "type": "FunctionDefinition",
                    "name": "unpackAll",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "packed",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "submissionBits",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint64"
                                },
                                "name": "startTime",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "2": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint64"
                                },
                                "name": "endTime",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "submissionBits"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint16"
                                        },
                                        "arguments": {
                                            "0": {
                                                "type": "BinaryOperation",
                                                "operator": ">>",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "packed"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "128",
                                                    "subdenomination": null
                                                }
                                            }
                                        },
                                        "names": {}
                                    }
                                }
                            },
                            "1": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "startTime"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint64"
                                        },
                                        "arguments": {
                                            "0": {
                                                "type": "BinaryOperation",
                                                "operator": ">>",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "packed"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "64",
                                                    "subdenomination": null
                                                }
                                            }
                                        },
                                        "names": {}
                                    }
                                }
                            },
                            "2": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "endTime"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint64"
                                        },
                                        "arguments": {
                                            "0": {
                                                "type": "Identifier",
                                                "name": "packed"
                                            }
                                        },
                                        "names": {}
                                    }
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "7": {
                    "type": "FunctionDefinition",
                    "name": "pack",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "sb",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint64"
                                },
                                "name": "st",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "2": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint64"
                                },
                                "name": "et",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "packed",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "BinaryOperation",
                                "operator": "|",
                                "left": {
                                    "type": "BinaryOperation",
                                    "operator": "|",
                                    "left": {
                                        "type": "BinaryOperation",
                                        "operator": "<<",
                                        "left": {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "ElementaryTypeName",
                                                "name": "uint256"
                                            },
                                            "arguments": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "sb"
                                                }
                                            },
                                            "names": {}
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "128",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "<<",
                                        "left": {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "ElementaryTypeName",
                                                "name": "uint256"
                                            },
                                            "arguments": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "st"
                                                }
                                            },
                                            "names": {}
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "64",
                                            "subdenomination": null
                                        }
                                    }
                                },
                                "right": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "Identifier",
                                            "name": "et"
                                        }
                                    },
                                    "names": {}
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "8": {
                    "type": "FunctionDefinition",
                    "name": "setSB",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "packed",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "newSB",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "BinaryOperation",
                                "operator": "|",
                                "left": {
                                    "type": "TupleExpression",
                                    "components": {
                                        "0": {
                                            "type": "BinaryOperation",
                                            "operator": "&",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "packed"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "sbMask"
                                            }
                                        }
                                    },
                                    "isArray": false
                                },
                                "right": {
                                    "type": "BinaryOperation",
                                    "operator": "<<",
                                    "left": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "arguments": {
                                            "0": {
                                                "type": "Identifier",
                                                "name": "newSB"
                                            }
                                        },
                                        "names": {}
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "128",
                                        "subdenomination": null
                                    }
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                }
            },
            "kind": "library"
        },
        "3": {
            "type": "ContractDefinition",
            "name": "IxIface",
            "baseContracts": {},
            "subNodes": {},
            "kind": "interface"
        },
        "4": {
            "type": "ContractDefinition",
            "name": "BytesLib",
            "baseContracts": {},
            "subNodes": {
                "0": {
                    "type": "FunctionDefinition",
                    "name": "concat",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes"
                                },
                                "name": "_preBytes",
                                "storageLocation": "memory",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes"
                                },
                                "name": "_postBytes",
                                "storageLocation": "memory",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "bytes"
                                        },
                                        "name": "tempBytes",
                                        "storageLocation": "memory"
                                    }
                                },
                                "initialValue": null
                            },
                            "1": {
                                "type": "InLineAssemblyStatement",
                                "language": null,
                                "body": {
                                    "type": "AssemblyBlock",
                                    "operations": {
                                        "0": {
                                            "type": "AssemblyAssignment",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "tempBytes"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": {
                                                    "0": {
                                                        "type": "HexNumber",
                                                        "value": "0x40"
                                                    }
                                                }
                                            }
                                        },
                                        "1": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "length"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "_preBytes",
                                                        "arguments": {}
                                                    }
                                                }
                                            }
                                        },
                                        "2": {
                                            "type": "AssemblyExpression",
                                            "functionName": "mstore",
                                            "arguments": {
                                                "0": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "tempBytes",
                                                    "arguments": {}
                                                },
                                                "1": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "length",
                                                    "arguments": {}
                                                }
                                            }
                                        },
                                        "3": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "mc"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "add",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "tempBytes",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "HexNumber",
                                                        "value": "0x20"
                                                    }
                                                }
                                            }
                                        },
                                        "4": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "end"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "add",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mc",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "length",
                                                        "arguments": {}
                                                    }
                                                }
                                            }
                                        },
                                        "5": {
                                            "type": "AssemblyFor",
                                            "pre": {
                                                "type": "AssemblyBlock",
                                                "operations": {
                                                    "0": {
                                                        "type": "AssemblyLocalDefinition",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "cc"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "add",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "_preBytes",
                                                                    "arguments": {}
                                                                },
                                                                "1": {
                                                                    "type": "HexNumber",
                                                                    "value": "0x20"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "condition": {
                                                "type": "AssemblyExpression",
                                                "functionName": "lt",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mc",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "end",
                                                        "arguments": {}
                                                    }
                                                }
                                            },
                                            "post": {
                                                "type": "AssemblyBlock",
                                                "operations": {
                                                    "0": {
                                                        "type": "AssemblyAssignment",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "mc"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "add",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "mc",
                                                                    "arguments": {}
                                                                },
                                                                "1": {
                                                                    "type": "HexNumber",
                                                                    "value": "0x20"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "1": {
                                                        "type": "AssemblyAssignment",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "cc"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "add",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "cc",
                                                                    "arguments": {}
                                                                },
                                                                "1": {
                                                                    "type": "HexNumber",
                                                                    "value": "0x20"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "body": {
                                                "type": "AssemblyBlock",
                                                "operations": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mstore",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mc",
                                                                "arguments": {}
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mload",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "cc",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "6": {
                                            "type": "AssemblyAssignment",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "length"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "_postBytes",
                                                        "arguments": {}
                                                    }
                                                }
                                            }
                                        },
                                        "7": {
                                            "type": "AssemblyExpression",
                                            "functionName": "mstore",
                                            "arguments": {
                                                "0": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "tempBytes",
                                                    "arguments": {}
                                                },
                                                "1": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "add",
                                                    "arguments": {
                                                        "0": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "length",
                                                            "arguments": {}
                                                        },
                                                        "1": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "mload",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "tempBytes",
                                                                    "arguments": {}
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "8": {
                                            "type": "AssemblyAssignment",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "mc"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "end",
                                                "arguments": {}
                                            }
                                        },
                                        "9": {
                                            "type": "AssemblyAssignment",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "end"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "add",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mc",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "length",
                                                        "arguments": {}
                                                    }
                                                }
                                            }
                                        },
                                        "10": {
                                            "type": "AssemblyFor",
                                            "pre": {
                                                "type": "AssemblyBlock",
                                                "operations": {
                                                    "0": {
                                                        "type": "AssemblyLocalDefinition",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "cc"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "add",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "_postBytes",
                                                                    "arguments": {}
                                                                },
                                                                "1": {
                                                                    "type": "HexNumber",
                                                                    "value": "0x20"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "condition": {
                                                "type": "AssemblyExpression",
                                                "functionName": "lt",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mc",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "end",
                                                        "arguments": {}
                                                    }
                                                }
                                            },
                                            "post": {
                                                "type": "AssemblyBlock",
                                                "operations": {
                                                    "0": {
                                                        "type": "AssemblyAssignment",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "mc"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "add",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "mc",
                                                                    "arguments": {}
                                                                },
                                                                "1": {
                                                                    "type": "HexNumber",
                                                                    "value": "0x20"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "1": {
                                                        "type": "AssemblyAssignment",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "cc"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "add",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "cc",
                                                                    "arguments": {}
                                                                },
                                                                "1": {
                                                                    "type": "HexNumber",
                                                                    "value": "0x20"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "body": {
                                                "type": "AssemblyBlock",
                                                "operations": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mstore",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mc",
                                                                "arguments": {}
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mload",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "cc",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "11": {
                                            "type": "AssemblyExpression",
                                            "functionName": "mstore",
                                            "arguments": {
                                                "0": {
                                                    "type": "HexNumber",
                                                    "value": "0x40"
                                                },
                                                "1": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "and",
                                                    "arguments": {
                                                        "0": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "add",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "add",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "end",
                                                                            "arguments": {}
                                                                        },
                                                                        "1": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "iszero",
                                                                            "arguments": {
                                                                                "0": {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "add",
                                                                                    "arguments": {
                                                                                        "0": {
                                                                                            "type": "AssemblyExpression",
                                                                                            "functionName": "length",
                                                                                            "arguments": {}
                                                                                        },
                                                                                        "1": {
                                                                                            "type": "AssemblyExpression",
                                                                                            "functionName": "mload",
                                                                                            "arguments": {
                                                                                                "0": {
                                                                                                    "type": "AssemblyExpression",
                                                                                                    "functionName": "_preBytes",
                                                                                                    "arguments": {}
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "1": {
                                                                    "type": "DecimalNumber",
                                                                    "value": "31"
                                                                }
                                                            }
                                                        },
                                                        "1": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "not",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "DecimalNumber",
                                                                    "value": "31"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "2": {
                                "type": "Identifier",
                                "name": "tempBytes"
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "1": {
                    "type": "FunctionDefinition",
                    "name": "concatStorage",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes"
                                },
                                "name": "_preBytes",
                                "storageLocation": "storage",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes"
                                },
                                "name": "_postBytes",
                                "storageLocation": "memory",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {},
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "InLineAssemblyStatement",
                                "language": null,
                                "body": {
                                    "type": "AssemblyBlock",
                                    "operations": {
                                        "0": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "fslot"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "sload",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "_preBytes_slot",
                                                        "arguments": {}
                                                    }
                                                }
                                            }
                                        },
                                        "1": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "slength"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "div",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "and",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "fslot",
                                                                "arguments": {}
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "sub",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mul",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "HexNumber",
                                                                                "value": "0x100"
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "iszero",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "and",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "fslot",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "DecimalNumber",
                                                                                                "value": "1"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "1": {
                                                                        "type": "DecimalNumber",
                                                                        "value": "1"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "1": {
                                                        "type": "DecimalNumber",
                                                        "value": "2"
                                                    }
                                                }
                                            }
                                        },
                                        "2": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "mlength"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "_postBytes",
                                                        "arguments": {}
                                                    }
                                                }
                                            }
                                        },
                                        "3": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "newlength"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "add",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "slength",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mlength",
                                                        "arguments": {}
                                                    }
                                                }
                                            }
                                        },
                                        "4": {
                                            "type": "AssemblySwitch",
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "add",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "lt",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "slength",
                                                                "arguments": {}
                                                            },
                                                            "1": {
                                                                "type": "DecimalNumber",
                                                                "value": "32"
                                                            }
                                                        }
                                                    },
                                                    "1": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "lt",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "newlength",
                                                                "arguments": {}
                                                            },
                                                            "1": {
                                                                "type": "DecimalNumber",
                                                                "value": "32"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "cases": {
                                                "0": {
                                                    "type": "AssemblyCase",
                                                    "block": {
                                                        "type": "AssemblyBlock",
                                                        "operations": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "sstore",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "_preBytes_slot",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "fslot",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "mul",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "div",
                                                                                                "arguments": {
                                                                                                    "0": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "mload",
                                                                                                        "arguments": {
                                                                                                            "0": {
                                                                                                                "type": "AssemblyExpression",
                                                                                                                "functionName": "add",
                                                                                                                "arguments": {
                                                                                                                    "0": {
                                                                                                                        "type": "AssemblyExpression",
                                                                                                                        "functionName": "_postBytes",
                                                                                                                        "arguments": {}
                                                                                                                    },
                                                                                                                    "1": {
                                                                                                                        "type": "HexNumber",
                                                                                                                        "value": "0x20"
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "1": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "exp",
                                                                                                        "arguments": {
                                                                                                            "0": {
                                                                                                                "type": "HexNumber",
                                                                                                                "value": "0x100"
                                                                                                            },
                                                                                                            "1": {
                                                                                                                "type": "AssemblyExpression",
                                                                                                                "functionName": "sub",
                                                                                                                "arguments": {
                                                                                                                    "0": {
                                                                                                                        "type": "DecimalNumber",
                                                                                                                        "value": "32"
                                                                                                                    },
                                                                                                                    "1": {
                                                                                                                        "type": "AssemblyExpression",
                                                                                                                        "functionName": "mlength",
                                                                                                                        "arguments": {}
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "exp",
                                                                                                "arguments": {
                                                                                                    "0": {
                                                                                                        "type": "HexNumber",
                                                                                                        "value": "0x100"
                                                                                                    },
                                                                                                    "1": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "sub",
                                                                                                        "arguments": {
                                                                                                            "0": {
                                                                                                                "type": "DecimalNumber",
                                                                                                                "value": "32"
                                                                                                            },
                                                                                                            "1": {
                                                                                                                "type": "AssemblyExpression",
                                                                                                                "functionName": "newlength",
                                                                                                                "arguments": {}
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "mul",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "mlength",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "DecimalNumber",
                                                                                                "value": "2"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "value": {
                                                        "type": "DecimalNumber",
                                                        "value": "2"
                                                    }
                                                },
                                                "1": {
                                                    "type": "AssemblyCase",
                                                    "block": {
                                                        "type": "AssemblyBlock",
                                                        "operations": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mstore",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "HexNumber",
                                                                        "value": "0x0"
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "_preBytes_slot",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            },
                                                            "1": {
                                                                "type": "AssemblyLocalDefinition",
                                                                "names": {
                                                                    "0": {
                                                                        "type": "Identifier",
                                                                        "name": "sc"
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "add",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "keccak256",
                                                                            "arguments": {
                                                                                "0": {
                                                                                    "type": "HexNumber",
                                                                                    "value": "0x0"
                                                                                },
                                                                                "1": {
                                                                                    "type": "HexNumber",
                                                                                    "value": "0x20"
                                                                                }
                                                                            }
                                                                        },
                                                                        "1": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "div",
                                                                            "arguments": {
                                                                                "0": {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "slength",
                                                                                    "arguments": {}
                                                                                },
                                                                                "1": {
                                                                                    "type": "DecimalNumber",
                                                                                    "value": "32"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "2": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "sstore",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "_preBytes_slot",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "mul",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "newlength",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "DecimalNumber",
                                                                                        "value": "2"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "1": {
                                                                                "type": "DecimalNumber",
                                                                                "value": "1"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "3": {
                                                                "type": "AssemblyLocalDefinition",
                                                                "names": {
                                                                    "0": {
                                                                        "type": "Identifier",
                                                                        "name": "submod"
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "sub",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "DecimalNumber",
                                                                            "value": "32"
                                                                        },
                                                                        "1": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "slength",
                                                                            "arguments": {}
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "4": {
                                                                "type": "AssemblyLocalDefinition",
                                                                "names": {
                                                                    "0": {
                                                                        "type": "Identifier",
                                                                        "name": "mc"
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "add",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "_postBytes",
                                                                            "arguments": {}
                                                                        },
                                                                        "1": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "submod",
                                                                            "arguments": {}
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "5": {
                                                                "type": "AssemblyLocalDefinition",
                                                                "names": {
                                                                    "0": {
                                                                        "type": "Identifier",
                                                                        "name": "end"
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "add",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "_postBytes",
                                                                            "arguments": {}
                                                                        },
                                                                        "1": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "mlength",
                                                                            "arguments": {}
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "6": {
                                                                "type": "AssemblyLocalDefinition",
                                                                "names": {
                                                                    "0": {
                                                                        "type": "Identifier",
                                                                        "name": "mask"
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "sub",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "exp",
                                                                            "arguments": {
                                                                                "0": {
                                                                                    "type": "HexNumber",
                                                                                    "value": "0x100"
                                                                                },
                                                                                "1": {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "submod",
                                                                                    "arguments": {}
                                                                                }
                                                                            }
                                                                        },
                                                                        "1": {
                                                                            "type": "DecimalNumber",
                                                                            "value": "1"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "7": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "sstore",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "sc",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "and",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "fslot",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "HexNumber",
                                                                                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "and",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "mload",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "mc",
                                                                                                "arguments": {}
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "mask",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "8": {
                                                                "type": "AssemblyFor",
                                                                "pre": {
                                                                    "type": "AssemblyBlock",
                                                                    "operations": {
                                                                        "0": {
                                                                            "type": "AssemblyAssignment",
                                                                            "names": {
                                                                                "0": {
                                                                                    "type": "Identifier",
                                                                                    "name": "mc"
                                                                                }
                                                                            },
                                                                            "expression": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "mc",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "HexNumber",
                                                                                        "value": "0x20"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "1": {
                                                                            "type": "AssemblyAssignment",
                                                                            "names": {
                                                                                "0": {
                                                                                    "type": "Identifier",
                                                                                    "name": "sc"
                                                                                }
                                                                            },
                                                                            "expression": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "sc",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "DecimalNumber",
                                                                                        "value": "1"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "condition": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "lt",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "mc",
                                                                            "arguments": {}
                                                                        },
                                                                        "1": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "end",
                                                                            "arguments": {}
                                                                        }
                                                                    }
                                                                },
                                                                "post": {
                                                                    "type": "AssemblyBlock",
                                                                    "operations": {
                                                                        "0": {
                                                                            "type": "AssemblyAssignment",
                                                                            "names": {
                                                                                "0": {
                                                                                    "type": "Identifier",
                                                                                    "name": "sc"
                                                                                }
                                                                            },
                                                                            "expression": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "sc",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "DecimalNumber",
                                                                                        "value": "1"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "1": {
                                                                            "type": "AssemblyAssignment",
                                                                            "names": {
                                                                                "0": {
                                                                                    "type": "Identifier",
                                                                                    "name": "mc"
                                                                                }
                                                                            },
                                                                            "expression": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "mc",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "HexNumber",
                                                                                        "value": "0x20"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "body": {
                                                                    "type": "AssemblyBlock",
                                                                    "operations": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "sstore",
                                                                            "arguments": {
                                                                                "0": {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "sc",
                                                                                    "arguments": {}
                                                                                },
                                                                                "1": {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "mload",
                                                                                    "arguments": {
                                                                                        "0": {
                                                                                            "type": "AssemblyExpression",
                                                                                            "functionName": "mc",
                                                                                            "arguments": {}
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "9": {
                                                                "type": "AssemblyAssignment",
                                                                "names": {
                                                                    "0": {
                                                                        "type": "Identifier",
                                                                        "name": "mask"
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "exp",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "HexNumber",
                                                                            "value": "0x100"
                                                                        },
                                                                        "1": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "sub",
                                                                            "arguments": {
                                                                                "0": {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "mc",
                                                                                    "arguments": {}
                                                                                },
                                                                                "1": {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "end",
                                                                                    "arguments": {}
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "10": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "sstore",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "sc",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mul",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "div",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "mload",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "mc",
                                                                                                "arguments": {}
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "mask",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "mask",
                                                                                "arguments": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "value": {
                                                        "type": "DecimalNumber",
                                                        "value": "1"
                                                    }
                                                },
                                                "2": {
                                                    "type": "AssemblyCase",
                                                    "block": {
                                                        "type": "AssemblyBlock",
                                                        "operations": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mstore",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "HexNumber",
                                                                        "value": "0x0"
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "_preBytes_slot",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            },
                                                            "1": {
                                                                "type": "AssemblyLocalDefinition",
                                                                "names": {
                                                                    "0": {
                                                                        "type": "Identifier",
                                                                        "name": "sc"
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "add",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "keccak256",
                                                                            "arguments": {
                                                                                "0": {
                                                                                    "type": "HexNumber",
                                                                                    "value": "0x0"
                                                                                },
                                                                                "1": {
                                                                                    "type": "HexNumber",
                                                                                    "value": "0x20"
                                                                                }
                                                                            }
                                                                        },
                                                                        "1": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "div",
                                                                            "arguments": {
                                                                                "0": {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "slength",
                                                                                    "arguments": {}
                                                                                },
                                                                                "1": {
                                                                                    "type": "DecimalNumber",
                                                                                    "value": "32"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "2": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "sstore",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "_preBytes_slot",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "mul",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "newlength",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "DecimalNumber",
                                                                                        "value": "2"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "1": {
                                                                                "type": "DecimalNumber",
                                                                                "value": "1"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "3": {
                                                                "type": "AssemblyLocalDefinition",
                                                                "names": {
                                                                    "0": {
                                                                        "type": "Identifier",
                                                                        "name": "slengthmod"
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "mod",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "slength",
                                                                            "arguments": {}
                                                                        },
                                                                        "1": {
                                                                            "type": "DecimalNumber",
                                                                            "value": "32"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "4": {
                                                                "type": "AssemblyLocalDefinition",
                                                                "names": {
                                                                    "0": {
                                                                        "type": "Identifier",
                                                                        "name": "mlengthmod"
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "mod",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "mlength",
                                                                            "arguments": {}
                                                                        },
                                                                        "1": {
                                                                            "type": "DecimalNumber",
                                                                            "value": "32"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "5": {
                                                                "type": "AssemblyLocalDefinition",
                                                                "names": {
                                                                    "0": {
                                                                        "type": "Identifier",
                                                                        "name": "submod"
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "sub",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "DecimalNumber",
                                                                            "value": "32"
                                                                        },
                                                                        "1": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "slengthmod",
                                                                            "arguments": {}
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "6": {
                                                                "type": "AssemblyLocalDefinition",
                                                                "names": {
                                                                    "0": {
                                                                        "type": "Identifier",
                                                                        "name": "mc"
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "add",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "_postBytes",
                                                                            "arguments": {}
                                                                        },
                                                                        "1": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "submod",
                                                                            "arguments": {}
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "7": {
                                                                "type": "AssemblyLocalDefinition",
                                                                "names": {
                                                                    "0": {
                                                                        "type": "Identifier",
                                                                        "name": "end"
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "add",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "_postBytes",
                                                                            "arguments": {}
                                                                        },
                                                                        "1": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "mlength",
                                                                            "arguments": {}
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "8": {
                                                                "type": "AssemblyLocalDefinition",
                                                                "names": {
                                                                    "0": {
                                                                        "type": "Identifier",
                                                                        "name": "mask"
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "sub",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "exp",
                                                                            "arguments": {
                                                                                "0": {
                                                                                    "type": "HexNumber",
                                                                                    "value": "0x100"
                                                                                },
                                                                                "1": {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "submod",
                                                                                    "arguments": {}
                                                                                }
                                                                            }
                                                                        },
                                                                        "1": {
                                                                            "type": "DecimalNumber",
                                                                            "value": "1"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "9": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "sstore",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "sc",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "sload",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "sc",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "and",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "mload",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "mc",
                                                                                                "arguments": {}
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "mask",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "10": {
                                                                "type": "AssemblyFor",
                                                                "pre": {
                                                                    "type": "AssemblyBlock",
                                                                    "operations": {
                                                                        "0": {
                                                                            "type": "AssemblyAssignment",
                                                                            "names": {
                                                                                "0": {
                                                                                    "type": "Identifier",
                                                                                    "name": "sc"
                                                                                }
                                                                            },
                                                                            "expression": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "sc",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "DecimalNumber",
                                                                                        "value": "1"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "1": {
                                                                            "type": "AssemblyAssignment",
                                                                            "names": {
                                                                                "0": {
                                                                                    "type": "Identifier",
                                                                                    "name": "mc"
                                                                                }
                                                                            },
                                                                            "expression": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "mc",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "HexNumber",
                                                                                        "value": "0x20"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "condition": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "lt",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "mc",
                                                                            "arguments": {}
                                                                        },
                                                                        "1": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "end",
                                                                            "arguments": {}
                                                                        }
                                                                    }
                                                                },
                                                                "post": {
                                                                    "type": "AssemblyBlock",
                                                                    "operations": {
                                                                        "0": {
                                                                            "type": "AssemblyAssignment",
                                                                            "names": {
                                                                                "0": {
                                                                                    "type": "Identifier",
                                                                                    "name": "sc"
                                                                                }
                                                                            },
                                                                            "expression": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "sc",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "DecimalNumber",
                                                                                        "value": "1"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "1": {
                                                                            "type": "AssemblyAssignment",
                                                                            "names": {
                                                                                "0": {
                                                                                    "type": "Identifier",
                                                                                    "name": "mc"
                                                                                }
                                                                            },
                                                                            "expression": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "mc",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "HexNumber",
                                                                                        "value": "0x20"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "body": {
                                                                    "type": "AssemblyBlock",
                                                                    "operations": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "sstore",
                                                                            "arguments": {
                                                                                "0": {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "sc",
                                                                                    "arguments": {}
                                                                                },
                                                                                "1": {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "mload",
                                                                                    "arguments": {
                                                                                        "0": {
                                                                                            "type": "AssemblyExpression",
                                                                                            "functionName": "mc",
                                                                                            "arguments": {}
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "11": {
                                                                "type": "AssemblyAssignment",
                                                                "names": {
                                                                    "0": {
                                                                        "type": "Identifier",
                                                                        "name": "mask"
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "exp",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "HexNumber",
                                                                            "value": "0x100"
                                                                        },
                                                                        "1": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "sub",
                                                                            "arguments": {
                                                                                "0": {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "mc",
                                                                                    "arguments": {}
                                                                                },
                                                                                "1": {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "end",
                                                                                    "arguments": {}
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "12": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "sstore",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "sc",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mul",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "div",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "mload",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "mc",
                                                                                                "arguments": {}
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "mask",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "mask",
                                                                                "arguments": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "default": true
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                "2": {
                    "type": "FunctionDefinition",
                    "name": "slice",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes"
                                },
                                "name": "_bytes",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "_start",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "2": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "_length",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "_bytes"
                                                },
                                                "memberName": "length"
                                            },
                                            "right": {
                                                "type": "TupleExpression",
                                                "components": {
                                                    "0": {
                                                        "type": "BinaryOperation",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_start"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "_length"
                                                        }
                                                    }
                                                },
                                                "isArray": false
                                            }
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "1": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "bytes"
                                        },
                                        "name": "tempBytes",
                                        "storageLocation": "memory"
                                    }
                                },
                                "initialValue": null
                            },
                            "2": {
                                "type": "InLineAssemblyStatement",
                                "language": null,
                                "body": {
                                    "type": "AssemblyBlock",
                                    "operations": {
                                        "0": {
                                            "type": "AssemblySwitch",
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "iszero",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "_length",
                                                        "arguments": {}
                                                    }
                                                }
                                            },
                                            "cases": {
                                                "0": {
                                                    "type": "AssemblyCase",
                                                    "block": {
                                                        "type": "AssemblyBlock",
                                                        "operations": {
                                                            "0": {
                                                                "type": "AssemblyAssignment",
                                                                "names": {
                                                                    "0": {
                                                                        "type": "Identifier",
                                                                        "name": "tempBytes"
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "mload",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "HexNumber",
                                                                            "value": "0x40"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "1": {
                                                                "type": "AssemblyLocalDefinition",
                                                                "names": {
                                                                    "0": {
                                                                        "type": "Identifier",
                                                                        "name": "lengthmod"
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "and",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "_length",
                                                                            "arguments": {}
                                                                        },
                                                                        "1": {
                                                                            "type": "DecimalNumber",
                                                                            "value": "31"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "2": {
                                                                "type": "AssemblyLocalDefinition",
                                                                "names": {
                                                                    "0": {
                                                                        "type": "Identifier",
                                                                        "name": "mc"
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "add",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "add",
                                                                            "arguments": {
                                                                                "0": {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "tempBytes",
                                                                                    "arguments": {}
                                                                                },
                                                                                "1": {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "lengthmod",
                                                                                    "arguments": {}
                                                                                }
                                                                            }
                                                                        },
                                                                        "1": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "mul",
                                                                            "arguments": {
                                                                                "0": {
                                                                                    "type": "HexNumber",
                                                                                    "value": "0x20"
                                                                                },
                                                                                "1": {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "iszero",
                                                                                    "arguments": {
                                                                                        "0": {
                                                                                            "type": "AssemblyExpression",
                                                                                            "functionName": "lengthmod",
                                                                                            "arguments": {}
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "3": {
                                                                "type": "AssemblyLocalDefinition",
                                                                "names": {
                                                                    "0": {
                                                                        "type": "Identifier",
                                                                        "name": "end"
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "add",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "mc",
                                                                            "arguments": {}
                                                                        },
                                                                        "1": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "_length",
                                                                            "arguments": {}
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "4": {
                                                                "type": "AssemblyFor",
                                                                "pre": {
                                                                    "type": "AssemblyBlock",
                                                                    "operations": {
                                                                        "0": {
                                                                            "type": "AssemblyLocalDefinition",
                                                                            "names": {
                                                                                "0": {
                                                                                    "type": "Identifier",
                                                                                    "name": "cc"
                                                                                }
                                                                            },
                                                                            "expression": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "add",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "add",
                                                                                                "arguments": {
                                                                                                    "0": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "_bytes",
                                                                                                        "arguments": {}
                                                                                                    },
                                                                                                    "1": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "lengthmod",
                                                                                                        "arguments": {}
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "mul",
                                                                                                "arguments": {
                                                                                                    "0": {
                                                                                                        "type": "HexNumber",
                                                                                                        "value": "0x20"
                                                                                                    },
                                                                                                    "1": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "iszero",
                                                                                                        "arguments": {
                                                                                                            "0": {
                                                                                                                "type": "AssemblyExpression",
                                                                                                                "functionName": "lengthmod",
                                                                                                                "arguments": {}
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "_start",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "condition": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "lt",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "mc",
                                                                            "arguments": {}
                                                                        },
                                                                        "1": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "end",
                                                                            "arguments": {}
                                                                        }
                                                                    }
                                                                },
                                                                "post": {
                                                                    "type": "AssemblyBlock",
                                                                    "operations": {
                                                                        "0": {
                                                                            "type": "AssemblyAssignment",
                                                                            "names": {
                                                                                "0": {
                                                                                    "type": "Identifier",
                                                                                    "name": "mc"
                                                                                }
                                                                            },
                                                                            "expression": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "mc",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "HexNumber",
                                                                                        "value": "0x20"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "1": {
                                                                            "type": "AssemblyAssignment",
                                                                            "names": {
                                                                                "0": {
                                                                                    "type": "Identifier",
                                                                                    "name": "cc"
                                                                                }
                                                                            },
                                                                            "expression": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "cc",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "HexNumber",
                                                                                        "value": "0x20"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "body": {
                                                                    "type": "AssemblyBlock",
                                                                    "operations": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "mstore",
                                                                            "arguments": {
                                                                                "0": {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "mc",
                                                                                    "arguments": {}
                                                                                },
                                                                                "1": {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "mload",
                                                                                    "arguments": {
                                                                                        "0": {
                                                                                            "type": "AssemblyExpression",
                                                                                            "functionName": "cc",
                                                                                            "arguments": {}
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "5": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mstore",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "tempBytes",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "_length",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            },
                                                            "6": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mstore",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "HexNumber",
                                                                        "value": "0x40"
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "and",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "mc",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "DecimalNumber",
                                                                                        "value": "31"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "not",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "DecimalNumber",
                                                                                        "value": "31"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "value": {
                                                        "type": "DecimalNumber",
                                                        "value": "0"
                                                    }
                                                },
                                                "1": {
                                                    "type": "AssemblyCase",
                                                    "block": {
                                                        "type": "AssemblyBlock",
                                                        "operations": {
                                                            "0": {
                                                                "type": "AssemblyAssignment",
                                                                "names": {
                                                                    "0": {
                                                                        "type": "Identifier",
                                                                        "name": "tempBytes"
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "mload",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "HexNumber",
                                                                            "value": "0x40"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mstore",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "HexNumber",
                                                                        "value": "0x40"
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "tempBytes",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "HexNumber",
                                                                                "value": "0x20"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "default": true
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "3": {
                                "type": "Identifier",
                                "name": "tempBytes"
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "3": {
                    "type": "FunctionDefinition",
                    "name": "toAddress",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes"
                                },
                                "name": "_bytes",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "_start",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "_bytes"
                                                },
                                                "memberName": "length"
                                            },
                                            "right": {
                                                "type": "TupleExpression",
                                                "components": {
                                                    "0": {
                                                        "type": "BinaryOperation",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_start"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "20",
                                                            "subdenomination": null
                                                        }
                                                    }
                                                },
                                                "isArray": false
                                            }
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "1": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "address"
                                        },
                                        "name": "tempAddress",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": null
                            },
                            "2": {
                                "type": "InLineAssemblyStatement",
                                "language": null,
                                "body": {
                                    "type": "AssemblyBlock",
                                    "operations": {
                                        "0": {
                                            "type": "AssemblyAssignment",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "tempAddress"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "div",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mload",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "_bytes",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "HexNumber",
                                                                                "value": "0x20"
                                                                            }
                                                                        }
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "_start",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "1": {
                                                        "type": "HexNumber",
                                                        "value": "0x1000000000000000000000000"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "3": {
                                "type": "Identifier",
                                "name": "tempAddress"
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "4": {
                    "type": "FunctionDefinition",
                    "name": "toUint",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes"
                                },
                                "name": "_bytes",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "_start",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "_bytes"
                                                },
                                                "memberName": "length"
                                            },
                                            "right": {
                                                "type": "TupleExpression",
                                                "components": {
                                                    "0": {
                                                        "type": "BinaryOperation",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_start"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "32",
                                                            "subdenomination": null
                                                        }
                                                    }
                                                },
                                                "isArray": false
                                            }
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "1": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "tempUint",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": null
                            },
                            "2": {
                                "type": "InLineAssemblyStatement",
                                "language": null,
                                "body": {
                                    "type": "AssemblyBlock",
                                    "operations": {
                                        "0": {
                                            "type": "AssemblyAssignment",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "tempUint"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "add",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "_bytes",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "HexNumber",
                                                                        "value": "0x20"
                                                                    }
                                                                }
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "_start",
                                                                "arguments": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "3": {
                                "type": "Identifier",
                                "name": "tempUint"
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "5": {
                    "type": "FunctionDefinition",
                    "name": "equal",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes"
                                },
                                "name": "_preBytes",
                                "storageLocation": "memory",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes"
                                },
                                "name": "_postBytes",
                                "storageLocation": "memory",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "bool"
                                        },
                                        "name": "success",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "BooleanLiteral",
                                    "value": true
                                }
                            },
                            "1": {
                                "type": "InLineAssemblyStatement",
                                "language": null,
                                "body": {
                                    "type": "AssemblyBlock",
                                    "operations": {
                                        "0": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "length"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "_preBytes",
                                                        "arguments": {}
                                                    }
                                                }
                                            }
                                        },
                                        "1": {
                                            "type": "AssemblySwitch",
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "eq",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "length",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mload",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "_postBytes",
                                                                "arguments": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "cases": {
                                                "0": {
                                                    "type": "AssemblyCase",
                                                    "block": {
                                                        "type": "AssemblyBlock",
                                                        "operations": {
                                                            "0": {
                                                                "type": "AssemblyLocalDefinition",
                                                                "names": {
                                                                    "0": {
                                                                        "type": "Identifier",
                                                                        "name": "cb"
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "type": "DecimalNumber",
                                                                    "value": "1"
                                                                }
                                                            },
                                                            "1": {
                                                                "type": "AssemblyLocalDefinition",
                                                                "names": {
                                                                    "0": {
                                                                        "type": "Identifier",
                                                                        "name": "mc"
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "add",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "_preBytes",
                                                                            "arguments": {}
                                                                        },
                                                                        "1": {
                                                                            "type": "HexNumber",
                                                                            "value": "0x20"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "2": {
                                                                "type": "AssemblyLocalDefinition",
                                                                "names": {
                                                                    "0": {
                                                                        "type": "Identifier",
                                                                        "name": "end"
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "add",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "mc",
                                                                            "arguments": {}
                                                                        },
                                                                        "1": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "length",
                                                                            "arguments": {}
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "3": {
                                                                "type": "AssemblyFor",
                                                                "pre": {
                                                                    "type": "AssemblyBlock",
                                                                    "operations": {
                                                                        "0": {
                                                                            "type": "AssemblyLocalDefinition",
                                                                            "names": {
                                                                                "0": {
                                                                                    "type": "Identifier",
                                                                                    "name": "cc"
                                                                                }
                                                                            },
                                                                            "expression": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "_postBytes",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "HexNumber",
                                                                                        "value": "0x20"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "condition": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "eq",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "add",
                                                                            "arguments": {
                                                                                "0": {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "lt",
                                                                                    "arguments": {
                                                                                        "0": {
                                                                                            "type": "AssemblyExpression",
                                                                                            "functionName": "mc",
                                                                                            "arguments": {}
                                                                                        },
                                                                                        "1": {
                                                                                            "type": "AssemblyExpression",
                                                                                            "functionName": "end",
                                                                                            "arguments": {}
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "1": {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "cb",
                                                                                    "arguments": {}
                                                                                }
                                                                            }
                                                                        },
                                                                        "1": {
                                                                            "type": "DecimalNumber",
                                                                            "value": "2"
                                                                        }
                                                                    }
                                                                },
                                                                "post": {
                                                                    "type": "AssemblyBlock",
                                                                    "operations": {
                                                                        "0": {
                                                                            "type": "AssemblyAssignment",
                                                                            "names": {
                                                                                "0": {
                                                                                    "type": "Identifier",
                                                                                    "name": "mc"
                                                                                }
                                                                            },
                                                                            "expression": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "mc",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "HexNumber",
                                                                                        "value": "0x20"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "1": {
                                                                            "type": "AssemblyAssignment",
                                                                            "names": {
                                                                                "0": {
                                                                                    "type": "Identifier",
                                                                                    "name": "cc"
                                                                                }
                                                                            },
                                                                            "expression": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "cc",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "HexNumber",
                                                                                        "value": "0x20"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "body": {
                                                                    "type": "AssemblyBlock",
                                                                    "operations": {
                                                                        "0": {
                                                                            "type": "AssemblyIf",
                                                                            "condition": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "iszero",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "eq",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "mload",
                                                                                                "arguments": {
                                                                                                    "0": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "mc",
                                                                                                        "arguments": {}
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "mload",
                                                                                                "arguments": {
                                                                                                    "0": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "cc",
                                                                                                        "arguments": {}
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "body": {
                                                                                "type": "AssemblyBlock",
                                                                                "operations": {
                                                                                    "0": {
                                                                                        "type": "AssemblyAssignment",
                                                                                        "names": {
                                                                                            "0": {
                                                                                                "type": "Identifier",
                                                                                                "name": "success"
                                                                                            }
                                                                                        },
                                                                                        "expression": {
                                                                                            "type": "DecimalNumber",
                                                                                            "value": "0"
                                                                                        }
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyAssignment",
                                                                                        "names": {
                                                                                            "0": {
                                                                                                "type": "Identifier",
                                                                                                "name": "cb"
                                                                                            }
                                                                                        },
                                                                                        "expression": {
                                                                                            "type": "DecimalNumber",
                                                                                            "value": "0"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "value": {
                                                        "type": "DecimalNumber",
                                                        "value": "1"
                                                    }
                                                },
                                                "1": {
                                                    "type": "AssemblyCase",
                                                    "block": {
                                                        "type": "AssemblyBlock",
                                                        "operations": {
                                                            "0": {
                                                                "type": "AssemblyAssignment",
                                                                "names": {
                                                                    "0": {
                                                                        "type": "Identifier",
                                                                        "name": "success"
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "type": "DecimalNumber",
                                                                    "value": "0"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "default": true
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "2": {
                                "type": "Identifier",
                                "name": "success"
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "6": {
                    "type": "FunctionDefinition",
                    "name": "equalStorage",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes"
                                },
                                "name": "_preBytes",
                                "storageLocation": "storage",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes"
                                },
                                "name": "_postBytes",
                                "storageLocation": "memory",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "bool"
                                        },
                                        "name": "success",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "BooleanLiteral",
                                    "value": true
                                }
                            },
                            "1": {
                                "type": "InLineAssemblyStatement",
                                "language": null,
                                "body": {
                                    "type": "AssemblyBlock",
                                    "operations": {
                                        "0": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "fslot"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "sload",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "_preBytes_slot",
                                                        "arguments": {}
                                                    }
                                                }
                                            }
                                        },
                                        "1": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "slength"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "div",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "and",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "fslot",
                                                                "arguments": {}
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "sub",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mul",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "HexNumber",
                                                                                "value": "0x100"
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "iszero",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "and",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "fslot",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "DecimalNumber",
                                                                                                "value": "1"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "1": {
                                                                        "type": "DecimalNumber",
                                                                        "value": "1"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "1": {
                                                        "type": "DecimalNumber",
                                                        "value": "2"
                                                    }
                                                }
                                            }
                                        },
                                        "2": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "mlength"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "_postBytes",
                                                        "arguments": {}
                                                    }
                                                }
                                            }
                                        },
                                        "3": {
                                            "type": "AssemblySwitch",
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "eq",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "slength",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mlength",
                                                        "arguments": {}
                                                    }
                                                }
                                            },
                                            "cases": {
                                                "0": {
                                                    "type": "AssemblyCase",
                                                    "block": {
                                                        "type": "AssemblyBlock",
                                                        "operations": {
                                                            "0": {
                                                                "type": "AssemblyIf",
                                                                "condition": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "iszero",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "iszero",
                                                                            "arguments": {
                                                                                "0": {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "slength",
                                                                                    "arguments": {}
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "body": {
                                                                    "type": "AssemblyBlock",
                                                                    "operations": {
                                                                        "0": {
                                                                            "type": "AssemblySwitch",
                                                                            "expression": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "lt",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "slength",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "DecimalNumber",
                                                                                        "value": "32"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "cases": {
                                                                                "0": {
                                                                                    "type": "AssemblyCase",
                                                                                    "block": {
                                                                                        "type": "AssemblyBlock",
                                                                                        "operations": {
                                                                                            "0": {
                                                                                                "type": "AssemblyAssignment",
                                                                                                "names": {
                                                                                                    "0": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "fslot"
                                                                                                    }
                                                                                                },
                                                                                                "expression": {
                                                                                                    "type": "AssemblyExpression",
                                                                                                    "functionName": "mul",
                                                                                                    "arguments": {
                                                                                                        "0": {
                                                                                                            "type": "AssemblyExpression",
                                                                                                            "functionName": "div",
                                                                                                            "arguments": {
                                                                                                                "0": {
                                                                                                                    "type": "AssemblyExpression",
                                                                                                                    "functionName": "fslot",
                                                                                                                    "arguments": {}
                                                                                                                },
                                                                                                                "1": {
                                                                                                                    "type": "HexNumber",
                                                                                                                    "value": "0x100"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "1": {
                                                                                                            "type": "HexNumber",
                                                                                                            "value": "0x100"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "AssemblyIf",
                                                                                                "condition": {
                                                                                                    "type": "AssemblyExpression",
                                                                                                    "functionName": "iszero",
                                                                                                    "arguments": {
                                                                                                        "0": {
                                                                                                            "type": "AssemblyExpression",
                                                                                                            "functionName": "eq",
                                                                                                            "arguments": {
                                                                                                                "0": {
                                                                                                                    "type": "AssemblyExpression",
                                                                                                                    "functionName": "fslot",
                                                                                                                    "arguments": {}
                                                                                                                },
                                                                                                                "1": {
                                                                                                                    "type": "AssemblyExpression",
                                                                                                                    "functionName": "mload",
                                                                                                                    "arguments": {
                                                                                                                        "0": {
                                                                                                                            "type": "AssemblyExpression",
                                                                                                                            "functionName": "add",
                                                                                                                            "arguments": {
                                                                                                                                "0": {
                                                                                                                                    "type": "AssemblyExpression",
                                                                                                                                    "functionName": "_postBytes",
                                                                                                                                    "arguments": {}
                                                                                                                                },
                                                                                                                                "1": {
                                                                                                                                    "type": "HexNumber",
                                                                                                                                    "value": "0x20"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "body": {
                                                                                                    "type": "AssemblyBlock",
                                                                                                    "operations": {
                                                                                                        "0": {
                                                                                                            "type": "AssemblyAssignment",
                                                                                                            "names": {
                                                                                                                "0": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "success"
                                                                                                                }
                                                                                                            },
                                                                                                            "expression": {
                                                                                                                "type": "DecimalNumber",
                                                                                                                "value": "0"
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "value": {
                                                                                        "type": "DecimalNumber",
                                                                                        "value": "1"
                                                                                    }
                                                                                },
                                                                                "1": {
                                                                                    "type": "AssemblyCase",
                                                                                    "block": {
                                                                                        "type": "AssemblyBlock",
                                                                                        "operations": {
                                                                                            "0": {
                                                                                                "type": "AssemblyLocalDefinition",
                                                                                                "names": {
                                                                                                    "0": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "cb"
                                                                                                    }
                                                                                                },
                                                                                                "expression": {
                                                                                                    "type": "DecimalNumber",
                                                                                                    "value": "1"
                                                                                                }
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "mstore",
                                                                                                "arguments": {
                                                                                                    "0": {
                                                                                                        "type": "HexNumber",
                                                                                                        "value": "0x0"
                                                                                                    },
                                                                                                    "1": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "_preBytes_slot",
                                                                                                        "arguments": {}
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "2": {
                                                                                                "type": "AssemblyLocalDefinition",
                                                                                                "names": {
                                                                                                    "0": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "sc"
                                                                                                    }
                                                                                                },
                                                                                                "expression": {
                                                                                                    "type": "AssemblyExpression",
                                                                                                    "functionName": "keccak256",
                                                                                                    "arguments": {
                                                                                                        "0": {
                                                                                                            "type": "HexNumber",
                                                                                                            "value": "0x0"
                                                                                                        },
                                                                                                        "1": {
                                                                                                            "type": "HexNumber",
                                                                                                            "value": "0x20"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "3": {
                                                                                                "type": "AssemblyLocalDefinition",
                                                                                                "names": {
                                                                                                    "0": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "mc"
                                                                                                    }
                                                                                                },
                                                                                                "expression": {
                                                                                                    "type": "AssemblyExpression",
                                                                                                    "functionName": "add",
                                                                                                    "arguments": {
                                                                                                        "0": {
                                                                                                            "type": "AssemblyExpression",
                                                                                                            "functionName": "_postBytes",
                                                                                                            "arguments": {}
                                                                                                        },
                                                                                                        "1": {
                                                                                                            "type": "HexNumber",
                                                                                                            "value": "0x20"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "4": {
                                                                                                "type": "AssemblyLocalDefinition",
                                                                                                "names": {
                                                                                                    "0": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "end"
                                                                                                    }
                                                                                                },
                                                                                                "expression": {
                                                                                                    "type": "AssemblyExpression",
                                                                                                    "functionName": "add",
                                                                                                    "arguments": {
                                                                                                        "0": {
                                                                                                            "type": "AssemblyExpression",
                                                                                                            "functionName": "mc",
                                                                                                            "arguments": {}
                                                                                                        },
                                                                                                        "1": {
                                                                                                            "type": "AssemblyExpression",
                                                                                                            "functionName": "mlength",
                                                                                                            "arguments": {}
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "5": {
                                                                                                "type": "AssemblyFor",
                                                                                                "pre": {
                                                                                                    "type": "AssemblyBlock",
                                                                                                    "operations": {}
                                                                                                },
                                                                                                "condition": {
                                                                                                    "type": "AssemblyExpression",
                                                                                                    "functionName": "eq",
                                                                                                    "arguments": {
                                                                                                        "0": {
                                                                                                            "type": "AssemblyExpression",
                                                                                                            "functionName": "add",
                                                                                                            "arguments": {
                                                                                                                "0": {
                                                                                                                    "type": "AssemblyExpression",
                                                                                                                    "functionName": "lt",
                                                                                                                    "arguments": {
                                                                                                                        "0": {
                                                                                                                            "type": "AssemblyExpression",
                                                                                                                            "functionName": "mc",
                                                                                                                            "arguments": {}
                                                                                                                        },
                                                                                                                        "1": {
                                                                                                                            "type": "AssemblyExpression",
                                                                                                                            "functionName": "end",
                                                                                                                            "arguments": {}
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                                "1": {
                                                                                                                    "type": "AssemblyExpression",
                                                                                                                    "functionName": "cb",
                                                                                                                    "arguments": {}
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "1": {
                                                                                                            "type": "DecimalNumber",
                                                                                                            "value": "2"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "post": {
                                                                                                    "type": "AssemblyBlock",
                                                                                                    "operations": {
                                                                                                        "0": {
                                                                                                            "type": "AssemblyAssignment",
                                                                                                            "names": {
                                                                                                                "0": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "sc"
                                                                                                                }
                                                                                                            },
                                                                                                            "expression": {
                                                                                                                "type": "AssemblyExpression",
                                                                                                                "functionName": "add",
                                                                                                                "arguments": {
                                                                                                                    "0": {
                                                                                                                        "type": "AssemblyExpression",
                                                                                                                        "functionName": "sc",
                                                                                                                        "arguments": {}
                                                                                                                    },
                                                                                                                    "1": {
                                                                                                                        "type": "DecimalNumber",
                                                                                                                        "value": "1"
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "1": {
                                                                                                            "type": "AssemblyAssignment",
                                                                                                            "names": {
                                                                                                                "0": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "mc"
                                                                                                                }
                                                                                                            },
                                                                                                            "expression": {
                                                                                                                "type": "AssemblyExpression",
                                                                                                                "functionName": "add",
                                                                                                                "arguments": {
                                                                                                                    "0": {
                                                                                                                        "type": "AssemblyExpression",
                                                                                                                        "functionName": "mc",
                                                                                                                        "arguments": {}
                                                                                                                    },
                                                                                                                    "1": {
                                                                                                                        "type": "HexNumber",
                                                                                                                        "value": "0x20"
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "body": {
                                                                                                    "type": "AssemblyBlock",
                                                                                                    "operations": {
                                                                                                        "0": {
                                                                                                            "type": "AssemblyIf",
                                                                                                            "condition": {
                                                                                                                "type": "AssemblyExpression",
                                                                                                                "functionName": "iszero",
                                                                                                                "arguments": {
                                                                                                                    "0": {
                                                                                                                        "type": "AssemblyExpression",
                                                                                                                        "functionName": "eq",
                                                                                                                        "arguments": {
                                                                                                                            "0": {
                                                                                                                                "type": "AssemblyExpression",
                                                                                                                                "functionName": "sload",
                                                                                                                                "arguments": {
                                                                                                                                    "0": {
                                                                                                                                        "type": "AssemblyExpression",
                                                                                                                                        "functionName": "sc",
                                                                                                                                        "arguments": {}
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "1": {
                                                                                                                                "type": "AssemblyExpression",
                                                                                                                                "functionName": "mload",
                                                                                                                                "arguments": {
                                                                                                                                    "0": {
                                                                                                                                        "type": "AssemblyExpression",
                                                                                                                                        "functionName": "mc",
                                                                                                                                        "arguments": {}
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            "body": {
                                                                                                                "type": "AssemblyBlock",
                                                                                                                "operations": {
                                                                                                                    "0": {
                                                                                                                        "type": "AssemblyAssignment",
                                                                                                                        "names": {
                                                                                                                            "0": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "success"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "expression": {
                                                                                                                            "type": "DecimalNumber",
                                                                                                                            "value": "0"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "1": {
                                                                                                                        "type": "AssemblyAssignment",
                                                                                                                        "names": {
                                                                                                                            "0": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "cb"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "expression": {
                                                                                                                            "type": "DecimalNumber",
                                                                                                                            "value": "0"
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "default": true
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "value": {
                                                        "type": "DecimalNumber",
                                                        "value": "1"
                                                    }
                                                },
                                                "1": {
                                                    "type": "AssemblyCase",
                                                    "block": {
                                                        "type": "AssemblyBlock",
                                                        "operations": {
                                                            "0": {
                                                                "type": "AssemblyAssignment",
                                                                "names": {
                                                                    "0": {
                                                                        "type": "Identifier",
                                                                        "name": "success"
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "type": "DecimalNumber",
                                                                    "value": "0"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "default": true
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "2": {
                                "type": "Identifier",
                                "name": "success"
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                }
            },
            "kind": "library"
        }
    }
}