{
  "type": "SourceUnit",
  "children": [
    {
      "type": "PragmaDirective",
      "name": "solidity",
      "value": "0.5.15"
    },
    {
      "type": "ContractDefinition",
      "name": "IFactRegistry",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "isValid",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "fact",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "IMerkleVerifier",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MAX_N_MERKLE_VERIFIER_QUERIES",
              "expression": {
                "type": "NumberLiteral",
                "number": "128",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "128",
            "subdenomination": null
          }
        },
        {
          "type": "FunctionDefinition",
          "name": "verify",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "channelPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "queuePtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "root",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "n",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "hash",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "IQueryableFactRegistry",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "IFactRegistry"
          },
          "arguments": null
        }
      ],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "hasRegisteredFact",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": [],
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "MerkleVerifier",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "IMerkleVerifier"
          },
          "arguments": null
        }
      ],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "getHashMask",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "NumberLiteral",
                "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000",
                "subdenomination": null
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "verify",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "channelPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "queuePtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "root",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "n",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "hash",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "lhashMask",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "getHashMask"
                  },
                  "arguments": [],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<=",
                      "left": {
                        "type": "Identifier",
                        "name": "n"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "MAX_N_MERKLE_VERIFIER_QUERIES"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "TOO_MANY_MERKLE_QUERIES"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "hashesPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "queuePtr",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x20"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "queueSize"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mul",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "n",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x40"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "slotSize"
                        }
                      ],
                      "expression": {
                        "type": "HexNumber",
                        "value": "0x40"
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "rdIdx"
                        }
                      ],
                      "expression": {
                        "type": "DecimalNumber",
                        "value": "0"
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "wrIdx"
                        }
                      ],
                      "expression": {
                        "type": "DecimalNumber",
                        "value": "0"
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "index"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "rdIdx",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "queuePtr",
                                "arguments": []
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "proofPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "channelPtr",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyFor",
                      "pre": {
                        "type": "AssemblyBlock",
                        "operations": []
                      },
                      "condition": {
                        "type": "AssemblyExpression",
                        "functionName": "gt",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "index",
                            "arguments": []
                          },
                          {
                            "type": "DecimalNumber",
                            "value": "1"
                          }
                        ]
                      },
                      "post": {
                        "type": "AssemblyBlock",
                        "operations": []
                      },
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "siblingIndex"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "xor",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "index",
                                  "arguments": []
                                },
                                {
                                  "type": "DecimalNumber",
                                  "value": "1"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "sibblingOffset"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mulmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "siblingIndex",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x40"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "xor",
                                "arguments": [
                                  {
                                    "type": "HexNumber",
                                    "value": "0x20"
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sibblingOffset",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mload",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "rdIdx",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "hashesPtr",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "rdIdx"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "addmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "rdIdx",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "slotSize",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "queueSize",
                                  "arguments": []
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "newHashPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "proofPtr",
                              "arguments": []
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "proofPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "proofPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "wrIdx",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "queuePtr",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "div",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "index",
                                    "arguments": []
                                  },
                                  {
                                    "type": "DecimalNumber",
                                    "value": "2"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "index"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "mload",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "add",
                                  "arguments": [
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "rdIdx",
                                      "arguments": []
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "queuePtr",
                                      "arguments": []
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyIf",
                            "condition": {
                              "type": "AssemblyExpression",
                              "functionName": "eq",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "index",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "siblingIndex",
                                  "arguments": []
                                }
                              ]
                            },
                            "body": {
                              "type": "AssemblyBlock",
                              "operations": [
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "newHashPtr"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "rdIdx",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "hashesPtr",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "proofPtr"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "proofPtr",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x20"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "rdIdx"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "addmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "rdIdx",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "slotSize",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "queueSize",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "index"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "rdIdx",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "queuePtr",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "sibblingOffset",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mload",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "newHashPtr",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "wrIdx",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "hashesPtr",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "and",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "lhashMask",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "keccak256",
                                    "arguments": [
                                      {
                                        "type": "HexNumber",
                                        "value": "0x00"
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x40"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "wrIdx"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "addmod",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "wrIdx",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "slotSize",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "queueSize",
                                  "arguments": []
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "hash"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "rdIdx",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "hashesPtr",
                                "arguments": []
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "channelPtr",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "proofPtr",
                          "arguments": []
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "Identifier",
                        "name": "hash"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "root"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "INVALID_MERKLE_PROOF"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "PrimeFieldElement0",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "K_MODULUS",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x800000000000011000000000000000000000000000000000000000000000001",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x800000000000011000000000000000000000000000000000000000000000001",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "K_MODULUS_MASK",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "K_MONTGOMERY_R",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x7fffffffffffdf0ffffffffffffffffffffffffffffffffffffffffffffffe1",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x7fffffffffffdf0ffffffffffffffffffffffffffffffffffffffffffffffe1",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "K_MONTGOMERY_R_INV",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x40000000000001100000000000012100000000000000000000000000000000",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x40000000000001100000000000012100000000000000000000000000000000",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "GENERATOR_VAL",
              "expression": {
                "type": "NumberLiteral",
                "number": "3",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "3",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "ONE_VAL",
              "expression": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "GEN1024_VAL",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x659d83946a03edd72406af6711825f5653d9e35dc125289a206c054ec89c4f1",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x659d83946a03edd72406af6711825f5653d9e35dc125289a206c054ec89c4f1",
            "subdenomination": null
          }
        },
        {
          "type": "FunctionDefinition",
          "name": "fromMontgomery",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "val",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "res",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "res"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mulmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "val",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x40000000000001100000000000012100000000000000000000000000000000"
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x800000000000011000000000000000000000000000000000000000000000001"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "res"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "fromMontgomeryBytes",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "bs",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "res",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "bs"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "fromMontgomery"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "res"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "toMontgomeryInt",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "val",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "res",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "res"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mulmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "val",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x7fffffffffffdf0ffffffffffffffffffffffffffffffffffffffffffffffe1"
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x800000000000011000000000000000000000000000000000000000000000001"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "res"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "fmul",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "a",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "b",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "res",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "res"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mulmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "a",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "b",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x800000000000011000000000000000000000000000000000000000000000001"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "res"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "fadd",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "a",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "b",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "res",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "res"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "addmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "a",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "b",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x800000000000011000000000000000000000000000000000000000000000001"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "res"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "fsub",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "a",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "b",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "res",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "res"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "addmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "a",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "sub",
                            "arguments": [
                              {
                                "type": "HexNumber",
                                "value": "0x800000000000011000000000000000000000000000000000000000000000001"
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "b",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x800000000000011000000000000000000000000000000000000000000000001"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "res"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "fpow",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "val",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "exp",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "expmod"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "val"
                  },
                  {
                    "type": "Identifier",
                    "name": "exp"
                  },
                  {
                    "type": "Identifier",
                    "name": "K_MODULUS"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "expmod",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "base",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "exponent",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "modulus",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "res",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "p"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "HexNumber",
                            "value": "0x40"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "p",
                          "arguments": []
                        },
                        {
                          "type": "HexNumber",
                          "value": "0x20"
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "p",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x20"
                            }
                          ]
                        },
                        {
                          "type": "HexNumber",
                          "value": "0x20"
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "p",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x40"
                            }
                          ]
                        },
                        {
                          "type": "HexNumber",
                          "value": "0x20"
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "p",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x60"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "base",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "p",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x80"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "exponent",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "p",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0xa0"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "modulus",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyIf",
                      "condition": {
                        "type": "AssemblyExpression",
                        "functionName": "iszero",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "staticcall",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "gas",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x05"
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "p",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0xc0"
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "p",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x20"
                              }
                            ]
                          }
                        ]
                      },
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "revert",
                            "arguments": [
                              {
                                "type": "DecimalNumber",
                                "value": "0"
                              },
                              {
                                "type": "DecimalNumber",
                                "value": "0"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "res"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "p",
                            "arguments": []
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "inverse",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "val",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "expmod"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "val"
                  },
                  {
                    "type": "BinaryOperation",
                    "operator": "-",
                    "left": {
                      "type": "Identifier",
                      "name": "K_MODULUS"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  },
                  {
                    "type": "Identifier",
                    "name": "K_MODULUS"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "FactRegistry",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "IQueryableFactRegistry"
          },
          "arguments": null
        }
      ],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "Mapping",
                "keyType": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "valueType": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                }
              },
              "name": "verifiedFact",
              "expression": null,
              "visibility": "private",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "bool"
              },
              "name": "anyFactRegistered",
              "expression": null,
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false
            }
          ],
          "initialValue": null
        },
        {
          "type": "FunctionDefinition",
          "name": "isValid",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "fact",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "FunctionCall",
                "expression": {
                  "type": "Identifier",
                  "name": "_factCheck"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "fact"
                  }
                ],
                "names": []
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "_factCheck",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "fact",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "IndexAccess",
                "base": {
                  "type": "Identifier",
                  "name": "verifiedFact"
                },
                "index": {
                  "type": "Identifier",
                  "name": "fact"
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "registerFact",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32"
                },
                "name": "factHash",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "verifiedFact"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "factHash"
                    }
                  },
                  "right": {
                    "type": "BooleanLiteral",
                    "value": true
                  }
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "UnaryOperation",
                  "operator": "!",
                  "subExpression": {
                    "type": "Identifier",
                    "name": "anyFactRegistered"
                  },
                  "isPrefix": true
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "anyFactRegistered"
                        },
                        "right": {
                          "type": "BooleanLiteral",
                          "value": true
                        }
                      }
                    }
                  ]
                },
                "FalseBody": null
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "hasRegisteredFact",
          "parameters": {
            "type": "ParameterList",
            "parameters": []
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "bool"
                },
                "name": null,
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "Identifier",
                "name": "anyFactRegistered"
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "FriLayer",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "MerkleVerifier"
          },
          "arguments": null
        },
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "PrimeFieldElement0"
          },
          "arguments": null
        }
      ],
      "subNodes": [
        {
          "type": "EventDefinition",
          "name": "LogGas",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "string"
                },
                "name": "name",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "VariableDeclaration",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "val",
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "isAnonymous": false
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "FRI_MAX_FRI_STEP",
              "expression": {
                "type": "NumberLiteral",
                "number": "4",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "4",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "MAX_COSET_SIZE",
              "expression": {
                "type": "BinaryOperation",
                "operator": "**",
                "left": {
                  "type": "NumberLiteral",
                  "number": "2",
                  "subdenomination": null
                },
                "right": {
                  "type": "Identifier",
                  "name": "FRI_MAX_FRI_STEP"
                }
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "BinaryOperation",
            "operator": "**",
            "left": {
              "type": "NumberLiteral",
              "number": "2",
              "subdenomination": null
            },
            "right": {
              "type": "Identifier",
              "name": "FRI_MAX_FRI_STEP"
            }
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "FRI_GROUP_GEN",
              "expression": {
                "type": "NumberLiteral",
                "number": "0x5ec467b88826aba4537602d514425f3b0bdf467bbf302458337c45f6021e539",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0x5ec467b88826aba4537602d514425f3b0bdf467bbf302458337c45f6021e539",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "FRI_GROUP_SIZE",
              "expression": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                  "type": "NumberLiteral",
                  "number": "0x20",
                  "subdenomination": null
                },
                "right": {
                  "type": "Identifier",
                  "name": "MAX_COSET_SIZE"
                }
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "BinaryOperation",
            "operator": "*",
            "left": {
              "type": "NumberLiteral",
              "number": "0x20",
              "subdenomination": null
            },
            "right": {
              "type": "Identifier",
              "name": "MAX_COSET_SIZE"
            }
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "FRI_CTX_TO_COSET_EVALUATIONS_OFFSET",
              "expression": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "FRI_CTX_TO_FRI_GROUP_OFFSET",
              "expression": {
                "type": "Identifier",
                "name": "FRI_GROUP_SIZE"
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "Identifier",
            "name": "FRI_GROUP_SIZE"
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "FRI_CTX_TO_FRI_HALF_INV_GROUP_OFFSET",
              "expression": {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                  "type": "Identifier",
                  "name": "FRI_CTX_TO_FRI_GROUP_OFFSET"
                },
                "right": {
                  "type": "Identifier",
                  "name": "FRI_GROUP_SIZE"
                }
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "BinaryOperation",
            "operator": "+",
            "left": {
              "type": "Identifier",
              "name": "FRI_CTX_TO_FRI_GROUP_OFFSET"
            },
            "right": {
              "type": "Identifier",
              "name": "FRI_GROUP_SIZE"
            }
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256"
              },
              "name": "FRI_CTX_SIZE",
              "expression": {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                  "type": "Identifier",
                  "name": "FRI_CTX_TO_FRI_HALF_INV_GROUP_OFFSET"
                },
                "right": {
                  "type": "TupleExpression",
                  "components": [
                    {
                      "type": "BinaryOperation",
                      "operator": "/",
                      "left": {
                        "type": "Identifier",
                        "name": "FRI_GROUP_SIZE"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "2",
                        "subdenomination": null
                      }
                    }
                  ],
                  "isArray": false
                }
              },
              "visibility": "internal",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false
            }
          ],
          "initialValue": {
            "type": "BinaryOperation",
            "operator": "+",
            "left": {
              "type": "Identifier",
              "name": "FRI_CTX_TO_FRI_HALF_INV_GROUP_OFFSET"
            },
            "right": {
              "type": "TupleExpression",
              "components": [
                {
                  "type": "BinaryOperation",
                  "operator": "/",
                  "left": {
                    "type": "Identifier",
                    "name": "FRI_GROUP_SIZE"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "2",
                    "subdenomination": null
                  }
                }
              ],
              "isArray": false
            }
          }
        },
        {
          "type": "FunctionDefinition",
          "name": "nextLayerElementFromTwoPreviousLayerElements",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "fX",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "fMinusX",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "evalPoint",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "xInv",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "res",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "PRIME"
                        }
                      ],
                      "expression": {
                        "type": "HexNumber",
                        "value": "0x800000000000011000000000000000000000000000000000000000000000001"
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "res"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "addmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "fX",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "fMinusX",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mulmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "evalPoint",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "xInv",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "fX",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "fMinusX",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "PRIME",
                            "arguments": []
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "do2FriSteps",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friHalfInvGroupPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "evaluationsOnCosetPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "cosetOffset_",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friEvalPoint",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "nextLayerValue",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "nextXInv",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "PRIME"
                        }
                      ],
                      "expression": {
                        "type": "HexNumber",
                        "value": "0x800000000000011000000000000000000000000000000000000000000000001"
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "friEvalPointDivByX"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mulmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "friEvalPoint",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "cosetOffset_",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "PRIME",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "f0"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "evaluationsOnCosetPtr",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f1"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mload",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "evaluationsOnCosetPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x20"
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyAssignment",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f0"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f0",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f1",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friEvalPointDivByX",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f0",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "sub",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f1",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "f2"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "evaluationsOnCosetPtr",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x40"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f3"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mload",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "evaluationsOnCosetPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x60"
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyAssignment",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f2"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "addmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f2",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f3",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f2",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "sub",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f3",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "add",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "friHalfInvGroupPtr",
                                                "arguments": []
                                              },
                                              {
                                                "type": "HexNumber",
                                                "value": "0x20"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "friEvalPointDivByX",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "newXInv"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mulmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "cosetOffset_",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "cosetOffset_",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyAssignment",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "nextXInv"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mulmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "newXInv",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "newXInv",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "nextLayerValue"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "addmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "f0",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "f2",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mulmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friEvalPointDivByX",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friEvalPointDivByX",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f0",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f2",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "PRIME",
                            "arguments": []
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "do3FriSteps",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friHalfInvGroupPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "evaluationsOnCosetPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "cosetOffset_",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friEvalPoint",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "nextLayerValue",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "nextXInv",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "PRIME"
                        }
                      ],
                      "expression": {
                        "type": "HexNumber",
                        "value": "0x800000000000011000000000000000000000000000000000000000000000001"
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "MPRIME"
                        }
                      ],
                      "expression": {
                        "type": "HexNumber",
                        "value": "0x8000000000000110000000000000000000000000000000000000000000000010"
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "f0"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "evaluationsOnCosetPtr",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "friEvalPointDivByX"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mulmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "friEvalPoint",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "cosetOffset_",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "PRIME",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "friEvalPointDivByXSquared"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mulmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "friEvalPointDivByX",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "friEvalPointDivByX",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "PRIME",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "imaginaryUnit"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "friHalfInvGroupPtr",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x20"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f1"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mload",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "evaluationsOnCosetPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x20"
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyAssignment",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f0"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f0",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f1",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friEvalPointDivByX",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f0",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "sub",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f1",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f2"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mload",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "evaluationsOnCosetPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x40"
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "f3"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mload",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "evaluationsOnCosetPtr",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x60"
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "f2"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f2",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f3",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f2",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f3",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friEvalPointDivByX",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "imaginaryUnit",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyAssignment",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f0"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f0",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f2",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friEvalPointDivByXSquared",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f0",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "sub",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "MPRIME",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f2",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f4"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mload",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "evaluationsOnCosetPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x80"
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "friEvalPointDivByX2"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friEvalPointDivByX",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friHalfInvGroupPtr",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0x40"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyBlock",
                              "operations": [
                                {
                                  "type": "AssemblyLocalDefinition",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "f5"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "evaluationsOnCosetPtr",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0xa0"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "f4"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f4",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f5",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friEvalPointDivByX2",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "add",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f4",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "sub",
                                                "arguments": [
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "PRIME",
                                                    "arguments": []
                                                  },
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "f5",
                                                    "arguments": []
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "f6"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mload",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "evaluationsOnCosetPtr",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0xc0"
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyBlock",
                              "operations": [
                                {
                                  "type": "AssemblyLocalDefinition",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "f7"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "evaluationsOnCosetPtr",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0xe0"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "f6"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f6",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f7",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "add",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f6",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "sub",
                                                "arguments": [
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "PRIME",
                                                    "arguments": []
                                                  },
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "f7",
                                                    "arguments": []
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "friEvalPointDivByX2",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "imaginaryUnit",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "f4"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f4",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f6",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friEvalPointDivByX2",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friEvalPointDivByX2",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f4",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "MPRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f6",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyAssignment",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "nextLayerValue"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "addmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f0",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f4",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "friEvalPointDivByXSquared",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "friEvalPointDivByXSquared",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f0",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "sub",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "MPRIME",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f4",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "xInv2"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mulmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "cosetOffset_",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "cosetOffset_",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "xInv4"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mulmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "xInv2",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "xInv2",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyAssignment",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "nextXInv"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mulmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "xInv4",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "xInv4",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "do4FriSteps",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friHalfInvGroupPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "evaluationsOnCosetPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "cosetOffset_",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friEvalPoint",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "nextLayerValue",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "nextXInv",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "friEvalPointDivByXTessed"
                        }
                      ],
                      "expression": null
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "PRIME"
                        }
                      ],
                      "expression": {
                        "type": "HexNumber",
                        "value": "0x800000000000011000000000000000000000000000000000000000000000001"
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "MPRIME"
                        }
                      ],
                      "expression": {
                        "type": "HexNumber",
                        "value": "0x8000000000000110000000000000000000000000000000000000000000000010"
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "f0"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "evaluationsOnCosetPtr",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "friEvalPointDivByX"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mulmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "friEvalPoint",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "cosetOffset_",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "PRIME",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "imaginaryUnit"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "friHalfInvGroupPtr",
                                "arguments": []
                              },
                              {
                                "type": "HexNumber",
                                "value": "0x20"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f1"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mload",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "evaluationsOnCosetPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x20"
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyAssignment",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f0"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f0",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f1",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friEvalPointDivByX",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f0",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "sub",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f1",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f2"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mload",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "evaluationsOnCosetPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x40"
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "f3"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mload",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "evaluationsOnCosetPtr",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x60"
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "f2"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f2",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f3",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f2",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f3",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friEvalPointDivByX",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "imaginaryUnit",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "friEvalPointDivByXSquared"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friEvalPointDivByX",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friEvalPointDivByX",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "friEvalPointDivByXTessed"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friEvalPointDivByXSquared",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friEvalPointDivByXSquared",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "f0"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f0",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f2",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "friEvalPointDivByXSquared",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f0",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "MPRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f2",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f4"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mload",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "evaluationsOnCosetPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x80"
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "friEvalPointDivByX2"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friEvalPointDivByX",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friHalfInvGroupPtr",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0x40"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyBlock",
                              "operations": [
                                {
                                  "type": "AssemblyLocalDefinition",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "f5"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "evaluationsOnCosetPtr",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0xa0"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "f4"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f4",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f5",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friEvalPointDivByX2",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "add",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f4",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "sub",
                                                "arguments": [
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "PRIME",
                                                    "arguments": []
                                                  },
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "f5",
                                                    "arguments": []
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "f6"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mload",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "evaluationsOnCosetPtr",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0xc0"
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyBlock",
                              "operations": [
                                {
                                  "type": "AssemblyLocalDefinition",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "f7"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "evaluationsOnCosetPtr",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0xe0"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "f6"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f6",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f7",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "add",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f6",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "sub",
                                                "arguments": [
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "PRIME",
                                                    "arguments": []
                                                  },
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "f7",
                                                    "arguments": []
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "friEvalPointDivByX2",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "imaginaryUnit",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "f4"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f4",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f6",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friEvalPointDivByX2",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friEvalPointDivByX2",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f4",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "MPRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f6",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyAssignment",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f0"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "add",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f0",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f4",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friEvalPointDivByXTessed",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f0",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "sub",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "MPRIME",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f4",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "f8"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mload",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "evaluationsOnCosetPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x100"
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "friEvalPointDivByX4"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friEvalPointDivByX",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friHalfInvGroupPtr",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0x80"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyBlock",
                              "operations": [
                                {
                                  "type": "AssemblyLocalDefinition",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "f9"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "evaluationsOnCosetPtr",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0x120"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "f8"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f8",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f9",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friEvalPointDivByX4",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "add",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f8",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "sub",
                                                "arguments": [
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "PRIME",
                                                    "arguments": []
                                                  },
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "f9",
                                                    "arguments": []
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "f10"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mload",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "evaluationsOnCosetPtr",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x140"
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyBlock",
                              "operations": [
                                {
                                  "type": "AssemblyLocalDefinition",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "f11"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "evaluationsOnCosetPtr",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0x160"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "f10"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f10",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f11",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "add",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f10",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "sub",
                                                "arguments": [
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "PRIME",
                                                    "arguments": []
                                                  },
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "f11",
                                                    "arguments": []
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "friEvalPointDivByX4",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "imaginaryUnit",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "f8"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f8",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f10",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friEvalPointDivByX4",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friEvalPointDivByX4",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f8",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "MPRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f10",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyBlock",
                          "operations": [
                            {
                              "type": "AssemblyLocalDefinition",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "f12"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "mload",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "evaluationsOnCosetPtr",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x180"
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "AssemblyBlock",
                              "operations": [
                                {
                                  "type": "AssemblyLocalDefinition",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "friEvalPointDivByX6"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "friEvalPointDivByX",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "add",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "friHalfInvGroupPtr",
                                                "arguments": []
                                              },
                                              {
                                                "type": "HexNumber",
                                                "value": "0xc0"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "AssemblyBlock",
                                  "operations": [
                                    {
                                      "type": "AssemblyLocalDefinition",
                                      "names": [
                                        {
                                          "type": "Identifier",
                                          "name": "f13"
                                        }
                                      ],
                                      "expression": {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "add",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "evaluationsOnCosetPtr",
                                                "arguments": []
                                              },
                                              {
                                                "type": "HexNumber",
                                                "value": "0x1a0"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "AssemblyAssignment",
                                      "names": [
                                        {
                                          "type": "Identifier",
                                          "name": "f12"
                                        }
                                      ],
                                      "expression": {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "add",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f12",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f13",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "friEvalPointDivByX6",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "add",
                                                "arguments": [
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "f12",
                                                    "arguments": []
                                                  },
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "sub",
                                                    "arguments": [
                                                      {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "PRIME",
                                                        "arguments": []
                                                      },
                                                      {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "f13",
                                                        "arguments": []
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyLocalDefinition",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "f14"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "evaluationsOnCosetPtr",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0x1c0"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "AssemblyBlock",
                                  "operations": [
                                    {
                                      "type": "AssemblyLocalDefinition",
                                      "names": [
                                        {
                                          "type": "Identifier",
                                          "name": "f15"
                                        }
                                      ],
                                      "expression": {
                                        "type": "AssemblyExpression",
                                        "functionName": "mload",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "add",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "evaluationsOnCosetPtr",
                                                "arguments": []
                                              },
                                              {
                                                "type": "HexNumber",
                                                "value": "0x1e0"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "AssemblyAssignment",
                                      "names": [
                                        {
                                          "type": "Identifier",
                                          "name": "f14"
                                        }
                                      ],
                                      "expression": {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "add",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f14",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f15",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "add",
                                                "arguments": [
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "f14",
                                                    "arguments": []
                                                  },
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "sub",
                                                    "arguments": [
                                                      {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "PRIME",
                                                        "arguments": []
                                                      },
                                                      {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "f15",
                                                        "arguments": []
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "mulmod",
                                                "arguments": [
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "friEvalPointDivByX6",
                                                    "arguments": []
                                                  },
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "imaginaryUnit",
                                                    "arguments": []
                                                  },
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "PRIME",
                                                    "arguments": []
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "f12"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f12",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f14",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "mulmod",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "friEvalPointDivByX6",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "friEvalPointDivByX6",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "PRIME",
                                                "arguments": []
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "add",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f12",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "sub",
                                                "arguments": [
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "MPRIME",
                                                    "arguments": []
                                                  },
                                                  {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "f14",
                                                    "arguments": []
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "type": "AssemblyAssignment",
                              "names": [
                                {
                                  "type": "Identifier",
                                  "name": "f8"
                                }
                              ],
                              "expression": {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f8",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f12",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mulmod",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "friEvalPointDivByXTessed",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "imaginaryUnit",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "PRIME",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "add",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f8",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "sub",
                                            "arguments": [
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "MPRIME",
                                                "arguments": []
                                              },
                                              {
                                                "type": "AssemblyExpression",
                                                "functionName": "f12",
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "AssemblyAssignment",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "nextLayerValue"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "addmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f0",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "f8",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mulmod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mulmod",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "friEvalPointDivByXTessed",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "friEvalPointDivByXTessed",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "PRIME",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "f0",
                                        "arguments": []
                                      },
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "sub",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "MPRIME",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "f8",
                                            "arguments": []
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "type": "AssemblyBlock",
                      "operations": [
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "xInv2"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mulmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "cosetOffset_",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "cosetOffset_",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "xInv4"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mulmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "xInv2",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "xInv2",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyLocalDefinition",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "xInv8"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mulmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "xInv4",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "xInv4",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          }
                        },
                        {
                          "type": "AssemblyAssignment",
                          "names": [
                            {
                              "type": "Identifier",
                              "name": "nextXInv"
                            }
                          ],
                          "expression": {
                            "type": "AssemblyExpression",
                            "functionName": "mulmod",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "xInv8",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "xInv8",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "PRIME",
                                "arguments": []
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "gatherCosetInputs",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "channelPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friCtx",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friQueueHead_",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "cosetSize",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friQueueHead",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "cosetIdx",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "cosetOffset_",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "evaluationsOnCosetPtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "Identifier",
                    "name": "friCtx"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "FRI_CTX_TO_COSET_EVALUATIONS_OFFSET"
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friGroupPtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "Identifier",
                    "name": "friCtx"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "FRI_CTX_TO_FRI_GROUP_OFFSET"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "friQueueHead"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "friQueueHead_"
                  }
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "queueItemIdx"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "friQueueHead",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "cosetIdx"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "and",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "queueItemIdx",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "not",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "sub",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "cosetSize",
                                    "arguments": []
                                  },
                                  {
                                    "type": "DecimalNumber",
                                    "value": "1"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "nextCosetIdx"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "cosetIdx",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "cosetSize",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "PRIME"
                        }
                      ],
                      "expression": {
                        "type": "HexNumber",
                        "value": "0x800000000000011000000000000000000000000000000000000000000000001"
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "cosetOffset_"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mulmod",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mload",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friQueueHead",
                                    "arguments": []
                                  },
                                  {
                                    "type": "HexNumber",
                                    "value": "0x40"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mload",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friGroupPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mul",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "sub",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "queueItemIdx",
                                            "arguments": []
                                          },
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "cosetIdx",
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x20"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "PRIME",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "proofPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "channelPtr",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyFor",
                      "pre": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "index"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "cosetIdx",
                              "arguments": []
                            }
                          }
                        ]
                      },
                      "condition": {
                        "type": "AssemblyExpression",
                        "functionName": "lt",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "index",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "nextCosetIdx",
                            "arguments": []
                          }
                        ]
                      },
                      "post": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "index"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "index",
                                  "arguments": []
                                },
                                {
                                  "type": "DecimalNumber",
                                  "value": "1"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyLocalDefinition",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "fieldElementPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "proofPtr",
                              "arguments": []
                            }
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "proofPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "proofPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyIf",
                            "condition": {
                              "type": "AssemblyExpression",
                              "functionName": "eq",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "index",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "queueItemIdx",
                                  "arguments": []
                                }
                              ]
                            },
                            "body": {
                              "type": "AssemblyBlock",
                              "operations": [
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "fieldElementPtr"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "friQueueHead",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x20"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "proofPtr"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "sub",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "proofPtr",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x20"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "friQueueHead"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "friQueueHead",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x60"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "AssemblyAssignment",
                                  "names": [
                                    {
                                      "type": "Identifier",
                                      "name": "queueItemIdx"
                                    }
                                  ],
                                  "expression": {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "friQueueHead",
                                        "arguments": []
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "evaluationsOnCosetPtr",
                                "arguments": []
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "mod",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mload",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "fieldElementPtr",
                                        "arguments": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "PRIME",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "AssemblyAssignment",
                            "names": [
                              {
                                "type": "Identifier",
                                "name": "evaluationsOnCosetPtr"
                              }
                            ],
                            "expression": {
                              "type": "AssemblyExpression",
                              "functionName": "add",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "evaluationsOnCosetPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "HexNumber",
                                  "value": "0x20"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "channelPtr",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "proofPtr",
                          "arguments": []
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "bitReverse",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "num",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "numberOfBits",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "numReversed",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "assert"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "||",
                      "left": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "==",
                            "left": {
                              "type": "Identifier",
                              "name": "numberOfBits"
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "256",
                              "subdenomination": null
                            }
                          }
                        ],
                        "isArray": false
                      },
                      "right": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "<",
                            "left": {
                              "type": "Identifier",
                              "name": "num"
                            },
                            "right": {
                              "type": "BinaryOperation",
                              "operator": "**",
                              "left": {
                                "type": "NumberLiteral",
                                "number": "2",
                                "subdenomination": null
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "numberOfBits"
                              }
                            }
                          }
                        ],
                        "isArray": false
                      }
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "n",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "Identifier",
                  "name": "num"
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "r",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "name": "k",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "k"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "numberOfBits"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "k"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "r"
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": "|",
                          "left": {
                            "type": "TupleExpression",
                            "components": [
                              {
                                "type": "BinaryOperation",
                                "operator": "*",
                                "left": {
                                  "type": "Identifier",
                                  "name": "r"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "2",
                                  "subdenomination": null
                                }
                              }
                            ],
                            "isArray": false
                          },
                          "right": {
                            "type": "TupleExpression",
                            "components": [
                              {
                                "type": "BinaryOperation",
                                "operator": "%",
                                "left": {
                                  "type": "Identifier",
                                  "name": "n"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "2",
                                  "subdenomination": null
                                }
                              }
                            ],
                            "isArray": false
                          }
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "n"
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": "/",
                          "left": {
                            "type": "Identifier",
                            "name": "n"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "2",
                            "subdenomination": null
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "Identifier",
                "name": "r"
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "initFriGroups",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friCtx",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friGroupPtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "Identifier",
                    "name": "friCtx"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "FRI_CTX_TO_FRI_GROUP_OFFSET"
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friHalfInvGroupPtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "Identifier",
                    "name": "friCtx"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "FRI_CTX_TO_FRI_HALF_INV_GROUP_OFFSET"
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "genFriGroup",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "Identifier",
                  "name": "FRI_GROUP_GEN"
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "genFriGroupInv",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "fpow"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "genFriGroup"
                    },
                    {
                      "type": "TupleExpression",
                      "components": [
                        {
                          "type": "BinaryOperation",
                          "operator": "-",
                          "left": {
                            "type": "Identifier",
                            "name": "MAX_COSET_SIZE"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "1",
                            "subdenomination": null
                          }
                        }
                      ],
                      "isArray": false
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "lastVal",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "Identifier",
                  "name": "ONE_VAL"
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "lastValInv",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "Identifier",
                  "name": "ONE_VAL"
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "prime",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "Identifier",
                    "name": "PrimeFieldElement0"
                  },
                  "memberName": "K_MODULUS"
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "friHalfInvGroupPtr",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "lastValInv",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "friGroupPtr",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "lastVal",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "friGroupPtr",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x20"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "sub",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "prime",
                              "arguments": []
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "lastVal",
                              "arguments": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "halfCosetSize",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "/",
                  "left": {
                    "type": "Identifier",
                    "name": "MAX_COSET_SIZE"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "2",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "halfCosetSize"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "lastVal"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "fmul"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "lastVal"
                            },
                            {
                              "type": "Identifier",
                              "name": "genFriGroup"
                            }
                          ],
                          "names": []
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "lastValInv"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "fmul"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "lastValInv"
                            },
                            {
                              "type": "Identifier",
                              "name": "genFriGroupInv"
                            }
                          ],
                          "names": []
                        }
                      }
                    },
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint256"
                          },
                          "name": "idx",
                          "storageLocation": null
                        }
                      ],
                      "initialValue": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "bitReverse"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "i"
                          },
                          {
                            "type": "BinaryOperation",
                            "operator": "-",
                            "left": {
                              "type": "Identifier",
                              "name": "FRI_MAX_FRI_STEP"
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "1",
                              "subdenomination": null
                            }
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "InLineAssemblyStatement",
                      "language": null,
                      "body": {
                        "type": "AssemblyBlock",
                        "operations": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friHalfInvGroupPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mul",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "idx",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x20"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "lastValInv",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friGroupPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "mul",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "idx",
                                        "arguments": []
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x40"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "lastVal",
                                "arguments": []
                              }
                            ]
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mstore",
                            "arguments": [
                              {
                                "type": "AssemblyExpression",
                                "functionName": "add",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "friGroupPtr",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "add",
                                    "arguments": [
                                      {
                                        "type": "AssemblyExpression",
                                        "functionName": "mul",
                                        "arguments": [
                                          {
                                            "type": "AssemblyExpression",
                                            "functionName": "idx",
                                            "arguments": []
                                          },
                                          {
                                            "type": "HexNumber",
                                            "value": "0x40"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "HexNumber",
                                        "value": "0x20"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "sub",
                                "arguments": [
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "prime",
                                    "arguments": []
                                  },
                                  {
                                    "type": "AssemblyExpression",
                                    "functionName": "lastVal",
                                    "arguments": []
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "view"
        },
        {
          "type": "FunctionDefinition",
          "name": "doFriSteps",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friCtx",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friQueueTail",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "cosetOffset_",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friEvalPoint",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friCosetSize",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "index",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "merkleQueuePtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friValue",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "evaluationsOnCosetPtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "Identifier",
                    "name": "friCtx"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "FRI_CTX_TO_COSET_EVALUATIONS_OFFSET"
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friHalfInvGroupPtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "Identifier",
                    "name": "friCtx"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "FRI_CTX_TO_FRI_HALF_INV_GROUP_OFFSET"
                  }
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                    "type": "Identifier",
                    "name": "friCosetSize"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "8",
                    "subdenomination": null
                  }
                },
                "TrueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "TupleExpression",
                          "components": [
                            {
                              "type": "Identifier",
                              "name": "friValue"
                            },
                            {
                              "type": "Identifier",
                              "name": "cosetOffset_"
                            }
                          ],
                          "isArray": false
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "do3FriSteps"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "friHalfInvGroupPtr"
                            },
                            {
                              "type": "Identifier",
                              "name": "evaluationsOnCosetPtr"
                            },
                            {
                              "type": "Identifier",
                              "name": "cosetOffset_"
                            },
                            {
                              "type": "Identifier",
                              "name": "friEvalPoint"
                            }
                          ],
                          "names": []
                        }
                      }
                    }
                  ]
                },
                "FalseBody": {
                  "type": "IfStatement",
                  "condition": {
                    "type": "BinaryOperation",
                    "operator": "==",
                    "left": {
                      "type": "Identifier",
                      "name": "friCosetSize"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "4",
                      "subdenomination": null
                    }
                  },
                  "TrueBody": {
                    "type": "Block",
                    "statements": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "BinaryOperation",
                          "operator": "=",
                          "left": {
                            "type": "TupleExpression",
                            "components": [
                              {
                                "type": "Identifier",
                                "name": "friValue"
                              },
                              {
                                "type": "Identifier",
                                "name": "cosetOffset_"
                              }
                            ],
                            "isArray": false
                          },
                          "right": {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "Identifier",
                              "name": "do2FriSteps"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "friHalfInvGroupPtr"
                              },
                              {
                                "type": "Identifier",
                                "name": "evaluationsOnCosetPtr"
                              },
                              {
                                "type": "Identifier",
                                "name": "cosetOffset_"
                              },
                              {
                                "type": "Identifier",
                                "name": "friEvalPoint"
                              }
                            ],
                            "names": []
                          }
                        }
                      }
                    ]
                  },
                  "FalseBody": {
                    "type": "IfStatement",
                    "condition": {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "Identifier",
                        "name": "friCosetSize"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "16",
                        "subdenomination": null
                      }
                    },
                    "TrueBody": {
                      "type": "Block",
                      "statements": [
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "BinaryOperation",
                            "operator": "=",
                            "left": {
                              "type": "TupleExpression",
                              "components": [
                                {
                                  "type": "Identifier",
                                  "name": "friValue"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "cosetOffset_"
                                }
                              ],
                              "isArray": false
                            },
                            "right": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "Identifier",
                                "name": "do4FriSteps"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "friHalfInvGroupPtr"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "evaluationsOnCosetPtr"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "cosetOffset_"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "friEvalPoint"
                                }
                              ],
                              "names": []
                            }
                          }
                        }
                      ]
                    },
                    "FalseBody": {
                      "type": "Block",
                      "statements": [
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "Identifier",
                              "name": "require"
                            },
                            "arguments": [
                              {
                                "type": "BooleanLiteral",
                                "value": false
                              },
                              {
                                "type": "stringLiteral",
                                "value": "Only step sizes of 2, 3 or 4 are supported."
                              }
                            ],
                            "names": []
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "lhashMask",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "getHashMask"
                  },
                  "arguments": [],
                  "names": []
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "indexInNextStep"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "div",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "index",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "friCosetSize",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "merkleQueuePtr",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "indexInNextStep",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "merkleQueuePtr",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x20"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "and",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "lhashMask",
                              "arguments": []
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "keccak256",
                              "arguments": [
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "evaluationsOnCosetPtr",
                                  "arguments": []
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "mul",
                                  "arguments": [
                                    {
                                      "type": "HexNumber",
                                      "value": "0x20"
                                    },
                                    {
                                      "type": "AssemblyExpression",
                                      "functionName": "friCosetSize",
                                      "arguments": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "friQueueTail",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "indexInNextStep",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "friQueueTail",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x20"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "friValue",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "friQueueTail",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x40"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "cosetOffset_",
                          "arguments": []
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "computeNextLayer",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "channelPtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friQueuePtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "merkleQueuePtr",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "nQueries",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friEvalPoint",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friCosetSize",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friCtx",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "nLiveQueries",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "merkleQueueTail",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "Identifier",
                  "name": "merkleQueuePtr"
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friQueueHead",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "Identifier",
                  "name": "friQueuePtr"
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friQueueTail",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "Identifier",
                  "name": "friQueuePtr"
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friQueueEnd",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "Identifier",
                    "name": "friQueueHead"
                  },
                  "right": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                          "type": "NumberLiteral",
                          "number": "0x60",
                          "subdenomination": null
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "nQueries"
                        }
                      }
                    ],
                    "isArray": false
                  }
                }
              },
              {
                "type": "DoWhileStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "friQueueHead"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "friQueueEnd"
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint256"
                          },
                          "name": "cosetOffset",
                          "storageLocation": null
                        }
                      ],
                      "initialValue": null
                    },
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint256"
                          },
                          "name": "index",
                          "storageLocation": null
                        }
                      ],
                      "initialValue": null
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "TupleExpression",
                          "components": [
                            {
                              "type": "Identifier",
                              "name": "friQueueHead"
                            },
                            {
                              "type": "Identifier",
                              "name": "index"
                            },
                            {
                              "type": "Identifier",
                              "name": "cosetOffset"
                            }
                          ],
                          "isArray": false
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "gatherCosetInputs"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "channelPtr"
                            },
                            {
                              "type": "Identifier",
                              "name": "friCtx"
                            },
                            {
                              "type": "Identifier",
                              "name": "friQueueHead"
                            },
                            {
                              "type": "Identifier",
                              "name": "friCosetSize"
                            }
                          ],
                          "names": []
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "doFriSteps"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "friCtx"
                          },
                          {
                            "type": "Identifier",
                            "name": "friQueueTail"
                          },
                          {
                            "type": "Identifier",
                            "name": "cosetOffset"
                          },
                          {
                            "type": "Identifier",
                            "name": "friEvalPoint"
                          },
                          {
                            "type": "Identifier",
                            "name": "friCosetSize"
                          },
                          {
                            "type": "Identifier",
                            "name": "index"
                          },
                          {
                            "type": "Identifier",
                            "name": "merkleQueueTail"
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "+=",
                        "left": {
                          "type": "Identifier",
                          "name": "merkleQueueTail"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0x40",
                          "subdenomination": null
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "+=",
                        "left": {
                          "type": "Identifier",
                          "name": "friQueueTail"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0x60",
                          "subdenomination": null
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "BinaryOperation",
                "operator": "/",
                "left": {
                  "type": "TupleExpression",
                  "components": [
                    {
                      "type": "BinaryOperation",
                      "operator": "-",
                      "left": {
                        "type": "Identifier",
                        "name": "friQueueTail"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "friQueuePtr"
                      }
                    }
                  ],
                  "isArray": false
                },
                "right": {
                  "type": "NumberLiteral",
                  "number": "0x60",
                  "subdenomination": null
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": "pure"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "FriStatementContract",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "FriLayer"
          },
          "arguments": null
        },
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "FactRegistry"
          },
          "arguments": null
        }
      ],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "verifyFRI",
          "parameters": {
            "type": "ParameterList",
            "parameters": [
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "proof",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ArrayTypeName",
                  "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256"
                  },
                  "length": null
                },
                "name": "friQueue",
                "storageLocation": "memory",
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "evaluationPoint",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "friStepSize",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              },
              {
                "type": "Parameter",
                "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256"
                },
                "name": "expectedRoot",
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false
              }
            ]
          },
          "returnParameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<=",
                      "left": {
                        "type": "Identifier",
                        "name": "friStepSize"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "FRI_MAX_FRI_STEP"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "FRI step size too large"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "%",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "friQueue"
                          },
                          "memberName": "length"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "3",
                          "subdenomination": null
                        }
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "1",
                        "subdenomination": null
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "FRI Queue must be composed of triplets plus one delimiter cell"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": ">=",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "friQueue"
                        },
                        "memberName": "length"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "4",
                        "subdenomination": null
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "No query to process"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "mmFriCtxSize",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "Identifier",
                  "name": "FRI_CTX_SIZE"
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "nQueries",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "/",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "friQueue"
                    },
                    "memberName": "length"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "3",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "friQueue"
                    },
                    "index": {
                      "type": "BinaryOperation",
                      "operator": "*",
                      "left": {
                        "type": "NumberLiteral",
                        "number": "3",
                        "subdenomination": null
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "nQueries"
                      }
                    }
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "merkleQueuePtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friQueuePtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "channelPtr",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "friCtx",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "dataToHash",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "evaluationPoint"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "K_MODULUS"
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "INVALID_EVAL_POINT"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256"
                    },
                    "name": "prevQuery",
                    "storageLocation": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                }
              },
              {
                "type": "ForStatement",
                "initExpression": {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                    {
                      "type": "VariableDeclaration",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                      },
                      "name": "i",
                      "storageLocation": null
                    }
                  ],
                  "initialValue": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "nQueries"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "BinaryOperation",
                            "operator": ">",
                            "left": {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "friQueue"
                              },
                              "index": {
                                "type": "BinaryOperation",
                                "operator": "*",
                                "left": {
                                  "type": "NumberLiteral",
                                  "number": "3",
                                  "subdenomination": null
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "i"
                                }
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "prevQuery"
                            }
                          },
                          {
                            "type": "stringLiteral",
                            "value": "INVALID_QUERY_VALUE"
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "BinaryOperation",
                            "operator": "<",
                            "left": {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "friQueue"
                              },
                              "index": {
                                "type": "BinaryOperation",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryOperation",
                                  "operator": "*",
                                  "left": {
                                    "type": "NumberLiteral",
                                    "number": "3",
                                    "subdenomination": null
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "i"
                                  }
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "1",
                                  "subdenomination": null
                                }
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "K_MODULUS"
                            }
                          },
                          {
                            "type": "stringLiteral",
                            "value": "INVALID_FRI_VALUE"
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "BinaryOperation",
                            "operator": "<",
                            "left": {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "friQueue"
                              },
                              "index": {
                                "type": "BinaryOperation",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryOperation",
                                  "operator": "*",
                                  "left": {
                                    "type": "NumberLiteral",
                                    "number": "3",
                                    "subdenomination": null
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "i"
                                  }
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "2",
                                  "subdenomination": null
                                }
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "K_MODULUS"
                            }
                          },
                          {
                            "type": "stringLiteral",
                            "value": "INVALID_FRI_INVERSE_POINT"
                          }
                        ],
                        "names": []
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "prevQuery"
                        },
                        "right": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "friQueue"
                          },
                          "index": {
                            "type": "BinaryOperation",
                            "operator": "*",
                            "left": {
                              "type": "NumberLiteral",
                              "number": "3",
                              "subdenomination": null
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<",
                      "left": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "^",
                            "left": {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "friQueue"
                              },
                              "index": {
                                "type": "NumberLiteral",
                                "number": "0",
                                "subdenomination": null
                              }
                            },
                            "right": {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "friQueue"
                              },
                              "index": {
                                "type": "BinaryOperation",
                                "operator": "-",
                                "left": {
                                  "type": "BinaryOperation",
                                  "operator": "*",
                                  "left": {
                                    "type": "NumberLiteral",
                                    "number": "3",
                                    "subdenomination": null
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "nQueries"
                                  }
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "3",
                                  "subdenomination": null
                                }
                              }
                            }
                          }
                        ],
                        "isArray": false
                      },
                      "right": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "friQueue"
                        },
                        "index": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      }
                    },
                    {
                      "type": "stringLiteral",
                      "value": "INVALID_QUERIES_RANGE"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "friQueuePtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "friQueue",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x20"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "channelPtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "mload",
                        "arguments": [
                          {
                            "type": "HexNumber",
                            "value": "0x40"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "channelPtr",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "proof",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x20"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "merkleQueuePtr"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "channelPtr",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0x20"
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "friCtx"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "merkleQueuePtr",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mul",
                            "arguments": [
                              {
                                "type": "HexNumber",
                                "value": "0x40"
                              },
                              {
                                "type": "AssemblyExpression",
                                "functionName": "nQueries",
                                "arguments": []
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "dataToHash"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "add",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "friCtx",
                            "arguments": []
                          },
                          {
                            "type": "AssemblyExpression",
                            "functionName": "mmFriCtxSize",
                            "arguments": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "HexNumber",
                          "value": "0x40"
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "dataToHash",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0xa0"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "dataToHash",
                          "arguments": []
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "evaluationPoint",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "dataToHash",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x20"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "friStepSize",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "dataToHash",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x80"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "expectedRoot",
                          "arguments": []
                        }
                      ]
                    },
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "dataToHash",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x40"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "keccak256",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "friQueuePtr",
                              "arguments": []
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "mul",
                              "arguments": [
                                {
                                  "type": "HexNumber",
                                  "value": "0x60"
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "nQueries",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "initFriGroups"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "friCtx"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "nQueries"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "computeNextLayer"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "channelPtr"
                      },
                      {
                        "type": "Identifier",
                        "name": "friQueuePtr"
                      },
                      {
                        "type": "Identifier",
                        "name": "merkleQueuePtr"
                      },
                      {
                        "type": "Identifier",
                        "name": "nQueries"
                      },
                      {
                        "type": "Identifier",
                        "name": "evaluationPoint"
                      },
                      {
                        "type": "BinaryOperation",
                        "operator": "**",
                        "left": {
                          "type": "NumberLiteral",
                          "number": "2",
                          "subdenomination": null
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "friStepSize"
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "friCtx"
                      }
                    ],
                    "names": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "verify"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "channelPtr"
                    },
                    {
                      "type": "Identifier",
                      "name": "merkleQueuePtr"
                    },
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "ElementaryTypeName",
                        "name": "bytes32"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "expectedRoot"
                        }
                      ],
                      "names": []
                    },
                    {
                      "type": "Identifier",
                      "name": "nQueries"
                    }
                  ],
                  "names": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes32"
                    },
                    "name": "factHash",
                    "storageLocation": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "InLineAssemblyStatement",
                "language": null,
                "body": {
                  "type": "AssemblyBlock",
                  "operations": [
                    {
                      "type": "AssemblyExpression",
                      "functionName": "mstore",
                      "arguments": [
                        {
                          "type": "AssemblyExpression",
                          "functionName": "add",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "dataToHash",
                              "arguments": []
                            },
                            {
                              "type": "HexNumber",
                              "value": "0x60"
                            }
                          ]
                        },
                        {
                          "type": "AssemblyExpression",
                          "functionName": "keccak256",
                          "arguments": [
                            {
                              "type": "AssemblyExpression",
                              "functionName": "friQueuePtr",
                              "arguments": []
                            },
                            {
                              "type": "AssemblyExpression",
                              "functionName": "mul",
                              "arguments": [
                                {
                                  "type": "HexNumber",
                                  "value": "0x60"
                                },
                                {
                                  "type": "AssemblyExpression",
                                  "functionName": "nQueries",
                                  "arguments": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AssemblyAssignment",
                      "names": [
                        {
                          "type": "Identifier",
                          "name": "factHash"
                        }
                      ],
                      "expression": {
                        "type": "AssemblyExpression",
                        "functionName": "keccak256",
                        "arguments": [
                          {
                            "type": "AssemblyExpression",
                            "functionName": "dataToHash",
                            "arguments": []
                          },
                          {
                            "type": "HexNumber",
                            "value": "0xa0"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "registerFact"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "factHash"
                    }
                  ],
                  "names": []
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [],
          "isConstructor": false,
          "isFallback": false,
          "isReceive": false,
          "stateMutability": null
        }
      ],
      "kind": "contract"
    }
  ]
}