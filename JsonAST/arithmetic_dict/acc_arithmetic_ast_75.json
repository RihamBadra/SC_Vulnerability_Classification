{
    "type": "SourceUnit",
    "children": {
        "0": {
            "type": "PragmaDirective",
            "name": "solidity",
            "value": "^0.8.12"
        },
        "1": {
            "type": "ContractDefinition",
            "name": "GuestlistedLibrary",
            "baseContracts": {},
            "subNodes": {
                "0": {
                    "type": "StructDefinition",
                    "name": "Venue",
                    "members": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "string"
                            },
                            "name": "name",
                            "storageLocation": null
                        },
                        "1": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "string"
                            },
                            "name": "location",
                            "storageLocation": null
                        },
                        "2": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ArrayTypeName",
                                "baseTypeName": {
                                    "type": "ArrayTypeName",
                                    "baseTypeName": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint"
                                    },
                                    "length": {
                                        "type": "NumberLiteral",
                                        "number": "2",
                                        "subdenomination": null
                                    }
                                },
                                "length": null
                            },
                            "name": "indexes",
                            "storageLocation": null
                        },
                        "3": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ArrayTypeName",
                                "baseTypeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "string"
                                },
                                "length": null
                            },
                            "name": "colors",
                            "storageLocation": null
                        },
                        "4": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ArrayTypeName",
                                "baseTypeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "length": null
                            },
                            "name": "djIndexes",
                            "storageLocation": null
                        }
                    }
                },
                "1": {
                    "type": "StructDefinition",
                    "name": "DJ",
                    "members": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "string"
                            },
                            "name": "firstName",
                            "storageLocation": null
                        },
                        "1": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "string"
                            },
                            "name": "lastName",
                            "storageLocation": null
                        },
                        "2": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint"
                            },
                            "name": "fontSize",
                            "storageLocation": null
                        }
                    }
                },
                "2": {
                    "type": "StructDefinition",
                    "name": "TokenData",
                    "members": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint"
                            },
                            "name": "tokenId",
                            "storageLocation": null
                        },
                        "1": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint"
                            },
                            "name": "deterministicNumber",
                            "storageLocation": null
                        },
                        "2": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint"
                            },
                            "name": "randomNumber",
                            "storageLocation": null
                        },
                        "3": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint"
                            },
                            "name": "shapeRandomNumber",
                            "storageLocation": null
                        },
                        "4": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint"
                            },
                            "name": "shapeIndex",
                            "storageLocation": null
                        },
                        "5": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "string"
                            },
                            "name": "json",
                            "storageLocation": null
                        },
                        "6": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "string"
                            },
                            "name": "date",
                            "storageLocation": null
                        },
                        "7": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "string"
                            },
                            "name": "bg",
                            "storageLocation": null
                        },
                        "8": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "string"
                            },
                            "name": "color",
                            "storageLocation": null
                        },
                        "9": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "string"
                            },
                            "name": "shape",
                            "storageLocation": null
                        },
                        "10": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "string"
                            },
                            "name": "attributes",
                            "storageLocation": null
                        },
                        "11": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "string"
                            },
                            "name": "customMetadata",
                            "storageLocation": null
                        },
                        "12": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "string"
                            },
                            "name": "djFullName",
                            "storageLocation": null
                        },
                        "13": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "UserDefinedTypeName",
                                "namePath": "Venue"
                            },
                            "name": "venue",
                            "storageLocation": null
                        },
                        "14": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "UserDefinedTypeName",
                                "namePath": "DJ"
                            },
                            "name": "dj",
                            "storageLocation": null
                        }
                    }
                },
                "3": {
                    "type": "FunctionDefinition",
                    "name": "toString",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "value",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "string"
                                },
                                "name": null,
                                "storageLocation": "memory",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "==",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "value"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": {
                                        "0": {
                                            "type": "stringLiteral",
                                            "value": "0"
                                        }
                                    }
                                },
                                "FalseBody": null
                            },
                            "1": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "temp",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "Identifier",
                                    "name": "value"
                                }
                            },
                            "2": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "digits",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": null
                            },
                            "3": {
                                "type": "WhileStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "!=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "temp"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": {
                                        "0": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "UnaryOperation",
                                                "operator": "++",
                                                "subExpression": {
                                                    "type": "Identifier",
                                                    "name": "digits"
                                                },
                                                "isPrefix": false
                                            }
                                        },
                                        "1": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "/=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "temp"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "10",
                                                    "subdenomination": null
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "4": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "bytes"
                                        },
                                        "name": "buffer",
                                        "storageLocation": "memory"
                                    }
                                },
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "NewExpression",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "bytes"
                                        }
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "Identifier",
                                            "name": "digits"
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "5": {
                                "type": "WhileStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "!=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "value"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": {
                                        "0": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "-=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "digits"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "1",
                                                    "subdenomination": null
                                                }
                                            }
                                        },
                                        "1": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "buffer"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "digits"
                                                    }
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "bytes1"
                                                    },
                                                    "arguments": {
                                                        "0": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "ElementaryTypeName",
                                                                "name": "uint8"
                                                            },
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "NumberLiteral",
                                                                        "number": "48",
                                                                        "subdenomination": null
                                                                    },
                                                                    "right": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "ElementaryTypeName",
                                                                            "name": "uint"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "BinaryOperation",
                                                                                "operator": "%",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "value"
                                                                                },
                                                                                "right": {
                                                                                    "type": "NumberLiteral",
                                                                                    "number": "10",
                                                                                    "subdenomination": null
                                                                                }
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    }
                                                                }
                                                            },
                                                            "names": {}
                                                        }
                                                    },
                                                    "names": {}
                                                }
                                            }
                                        },
                                        "2": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "/=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "value"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "10",
                                                    "subdenomination": null
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "6": {
                                "type": "FunctionCall",
                                "expression": {
                                    "type": "ElementaryTypeName",
                                    "name": "string"
                                },
                                "arguments": {
                                    "0": {
                                        "type": "Identifier",
                                        "name": "buffer"
                                    }
                                },
                                "names": {}
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                }
            },
            "kind": "library"
        },
        "2": {
            "type": "ContractDefinition",
            "name": "Base64",
            "baseContracts": {},
            "subNodes": {
                "0": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "bytes"
                            },
                            "name": "TABLE",
                            "expression": {
                                "type": "stringLiteral",
                                "value": "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
                            },
                            "visibility": "internal",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "stringLiteral",
                        "value": "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
                    }
                },
                "1": {
                    "type": "FunctionDefinition",
                    "name": "encode",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes"
                                },
                                "name": "data",
                                "storageLocation": "memory",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "string"
                                },
                                "name": null,
                                "storageLocation": "memory",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "len",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "MemberAccess",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "data"
                                    },
                                    "memberName": "length"
                                }
                            },
                            "1": {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "==",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "len"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "stringLiteral",
                                    "value": ""
                                },
                                "FalseBody": null
                            },
                            "2": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "encodedLen",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "*",
                                    "left": {
                                        "type": "NumberLiteral",
                                        "number": "4",
                                        "subdenomination": null
                                    },
                                    "right": {
                                        "type": "TupleExpression",
                                        "components": {
                                            "0": {
                                                "type": "BinaryOperation",
                                                "operator": "/",
                                                "left": {
                                                    "type": "TupleExpression",
                                                    "components": {
                                                        "0": {
                                                            "type": "BinaryOperation",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "len"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "2",
                                                                "subdenomination": null
                                                            }
                                                        }
                                                    },
                                                    "isArray": false
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "3",
                                                    "subdenomination": null
                                                }
                                            }
                                        },
                                        "isArray": false
                                    }
                                }
                            },
                            "3": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "bytes"
                                        },
                                        "name": "result",
                                        "storageLocation": "memory"
                                    }
                                },
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "NewExpression",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "bytes"
                                        }
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "BinaryOperation",
                                            "operator": "+",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "encodedLen"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "32",
                                                "subdenomination": null
                                            }
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "4": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "bytes"
                                        },
                                        "name": "table",
                                        "storageLocation": "memory"
                                    }
                                },
                                "initialValue": {
                                    "type": "Identifier",
                                    "name": "TABLE"
                                }
                            },
                            "5": {
                                "type": "InLineAssemblyStatement",
                                "language": null,
                                "body": {
                                    "type": "AssemblyBlock",
                                    "operations": {
                                        "0": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "tablePtr"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "add",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "table",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "DecimalNumber",
                                                        "value": "1"
                                                    }
                                                }
                                            }
                                        },
                                        "1": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "resultPtr"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "add",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "result",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "DecimalNumber",
                                                        "value": "32"
                                                    }
                                                }
                                            }
                                        },
                                        "2": {
                                            "type": "AssemblyFor",
                                            "pre": {
                                                "type": "AssemblyBlock",
                                                "operations": {
                                                    "0": {
                                                        "type": "AssemblyLocalDefinition",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "i"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "DecimalNumber",
                                                            "value": "0"
                                                        }
                                                    }
                                                }
                                            },
                                            "condition": {
                                                "type": "AssemblyExpression",
                                                "functionName": "lt",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "i",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "len",
                                                        "arguments": {}
                                                    }
                                                }
                                            },
                                            "post": {
                                                "type": "AssemblyBlock",
                                                "operations": {}
                                            },
                                            "body": {
                                                "type": "AssemblyBlock",
                                                "operations": {
                                                    "0": {
                                                        "type": "AssemblyAssignment",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "i"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "add",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "i",
                                                                    "arguments": {}
                                                                },
                                                                "1": {
                                                                    "type": "DecimalNumber",
                                                                    "value": "3"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "1": {
                                                        "type": "AssemblyLocalDefinition",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "input"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "and",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "mload",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "add",
                                                                            "arguments": {
                                                                                "0": {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "data",
                                                                                    "arguments": {}
                                                                                },
                                                                                "1": {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "i",
                                                                                    "arguments": {}
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "1": {
                                                                    "type": "HexNumber",
                                                                    "value": "0xffffff"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "2": {
                                                        "type": "AssemblyLocalDefinition",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "out"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "mload",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "add",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "tablePtr",
                                                                            "arguments": {}
                                                                        },
                                                                        "1": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "and",
                                                                            "arguments": {
                                                                                "0": {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "shr",
                                                                                    "arguments": {
                                                                                        "0": {
                                                                                            "type": "DecimalNumber",
                                                                                            "value": "18"
                                                                                        },
                                                                                        "1": {
                                                                                            "type": "AssemblyExpression",
                                                                                            "functionName": "input",
                                                                                            "arguments": {}
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "1": {
                                                                                    "type": "HexNumber",
                                                                                    "value": "0x3F"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "3": {
                                                        "type": "AssemblyAssignment",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "out"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "shl",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "DecimalNumber",
                                                                    "value": "8"
                                                                },
                                                                "1": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "out",
                                                                    "arguments": {}
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "4": {
                                                        "type": "AssemblyAssignment",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "out"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "add",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "out",
                                                                    "arguments": {}
                                                                },
                                                                "1": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "and",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "mload",
                                                                            "arguments": {
                                                                                "0": {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "add",
                                                                                    "arguments": {
                                                                                        "0": {
                                                                                            "type": "AssemblyExpression",
                                                                                            "functionName": "tablePtr",
                                                                                            "arguments": {}
                                                                                        },
                                                                                        "1": {
                                                                                            "type": "AssemblyExpression",
                                                                                            "functionName": "and",
                                                                                            "arguments": {
                                                                                                "0": {
                                                                                                    "type": "AssemblyExpression",
                                                                                                    "functionName": "shr",
                                                                                                    "arguments": {
                                                                                                        "0": {
                                                                                                            "type": "DecimalNumber",
                                                                                                            "value": "12"
                                                                                                        },
                                                                                                        "1": {
                                                                                                            "type": "AssemblyExpression",
                                                                                                            "functionName": "input",
                                                                                                            "arguments": {}
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "1": {
                                                                                                    "type": "HexNumber",
                                                                                                    "value": "0x3F"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "1": {
                                                                            "type": "HexNumber",
                                                                            "value": "0xFF"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "5": {
                                                        "type": "AssemblyAssignment",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "out"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "shl",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "DecimalNumber",
                                                                    "value": "8"
                                                                },
                                                                "1": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "out",
                                                                    "arguments": {}
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "6": {
                                                        "type": "AssemblyAssignment",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "out"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "add",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "out",
                                                                    "arguments": {}
                                                                },
                                                                "1": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "and",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "mload",
                                                                            "arguments": {
                                                                                "0": {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "add",
                                                                                    "arguments": {
                                                                                        "0": {
                                                                                            "type": "AssemblyExpression",
                                                                                            "functionName": "tablePtr",
                                                                                            "arguments": {}
                                                                                        },
                                                                                        "1": {
                                                                                            "type": "AssemblyExpression",
                                                                                            "functionName": "and",
                                                                                            "arguments": {
                                                                                                "0": {
                                                                                                    "type": "AssemblyExpression",
                                                                                                    "functionName": "shr",
                                                                                                    "arguments": {
                                                                                                        "0": {
                                                                                                            "type": "DecimalNumber",
                                                                                                            "value": "6"
                                                                                                        },
                                                                                                        "1": {
                                                                                                            "type": "AssemblyExpression",
                                                                                                            "functionName": "input",
                                                                                                            "arguments": {}
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "1": {
                                                                                                    "type": "HexNumber",
                                                                                                    "value": "0x3F"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "1": {
                                                                            "type": "HexNumber",
                                                                            "value": "0xFF"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "7": {
                                                        "type": "AssemblyAssignment",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "out"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "shl",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "DecimalNumber",
                                                                    "value": "8"
                                                                },
                                                                "1": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "out",
                                                                    "arguments": {}
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "8": {
                                                        "type": "AssemblyAssignment",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "out"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "add",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "out",
                                                                    "arguments": {}
                                                                },
                                                                "1": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "and",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "mload",
                                                                            "arguments": {
                                                                                "0": {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "add",
                                                                                    "arguments": {
                                                                                        "0": {
                                                                                            "type": "AssemblyExpression",
                                                                                            "functionName": "tablePtr",
                                                                                            "arguments": {}
                                                                                        },
                                                                                        "1": {
                                                                                            "type": "AssemblyExpression",
                                                                                            "functionName": "and",
                                                                                            "arguments": {
                                                                                                "0": {
                                                                                                    "type": "AssemblyExpression",
                                                                                                    "functionName": "input",
                                                                                                    "arguments": {}
                                                                                                },
                                                                                                "1": {
                                                                                                    "type": "HexNumber",
                                                                                                    "value": "0x3F"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "1": {
                                                                            "type": "HexNumber",
                                                                            "value": "0xFF"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "9": {
                                                        "type": "AssemblyAssignment",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "out"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "shl",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "DecimalNumber",
                                                                    "value": "224"
                                                                },
                                                                "1": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "out",
                                                                    "arguments": {}
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "10": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mstore",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "resultPtr",
                                                                "arguments": {}
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "out",
                                                                "arguments": {}
                                                            }
                                                        }
                                                    },
                                                    "11": {
                                                        "type": "AssemblyAssignment",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "resultPtr"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "add",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "resultPtr",
                                                                    "arguments": {}
                                                                },
                                                                "1": {
                                                                    "type": "DecimalNumber",
                                                                    "value": "4"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "3": {
                                            "type": "AssemblySwitch",
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mod",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "len",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "DecimalNumber",
                                                        "value": "3"
                                                    }
                                                }
                                            },
                                            "cases": {
                                                "0": {
                                                    "type": "AssemblyCase",
                                                    "block": {
                                                        "type": "AssemblyBlock",
                                                        "operations": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mstore",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "sub",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "resultPtr",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "DecimalNumber",
                                                                                "value": "2"
                                                                            }
                                                                        }
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "shl",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "DecimalNumber",
                                                                                "value": "240"
                                                                            },
                                                                            "1": {
                                                                                "type": "HexNumber",
                                                                                "value": "0x3d3d"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "value": {
                                                        "type": "DecimalNumber",
                                                        "value": "1"
                                                    }
                                                },
                                                "1": {
                                                    "type": "AssemblyCase",
                                                    "block": {
                                                        "type": "AssemblyBlock",
                                                        "operations": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mstore",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "sub",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "resultPtr",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "DecimalNumber",
                                                                                "value": "1"
                                                                            }
                                                                        }
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "shl",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "DecimalNumber",
                                                                                "value": "248"
                                                                            },
                                                                            "1": {
                                                                                "type": "HexNumber",
                                                                                "value": "0x3d"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "value": {
                                                        "type": "DecimalNumber",
                                                        "value": "2"
                                                    }
                                                }
                                            }
                                        },
                                        "4": {
                                            "type": "AssemblyExpression",
                                            "functionName": "mstore",
                                            "arguments": {
                                                "0": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "result",
                                                    "arguments": {}
                                                },
                                                "1": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "encodedLen",
                                                    "arguments": {}
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "6": {
                                "type": "FunctionCall",
                                "expression": {
                                    "type": "ElementaryTypeName",
                                    "name": "string"
                                },
                                "arguments": {
                                    "0": {
                                        "type": "Identifier",
                                        "name": "result"
                                    }
                                },
                                "names": {}
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                }
            },
            "kind": "library"
        },
        "3": {
            "type": "PragmaDirective",
            "name": "solidity",
            "value": "^0.8.12"
        },
        "4": {
            "type": "PragmaDirective",
            "name": "experimental",
            "value": "ABIEncoderV2"
        },
        "5": {
            "type": "ContractDefinition",
            "name": "GuestlistedArt",
            "baseContracts": {},
            "subNodes": {
                "0": {
                    "type": "FunctionDefinition",
                    "name": "draw",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "GuestlistedLibrary.TokenData"
                                },
                                "name": "tokenData",
                                "storageLocation": "memory",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "string"
                                },
                                "name": null,
                                "storageLocation": "memory",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint"
                                        },
                                        "name": "rotate",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "%",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "tokenData"
                                        },
                                        "memberName": "randomNumber"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "360",
                                        "subdenomination": null
                                    }
                                }
                            },
                            "1": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint"
                                        },
                                        "name": "patternSize",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "NumberLiteral",
                                    "number": "150",
                                    "subdenomination": null
                                }
                            },
                            "2": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint"
                                        },
                                        "name": "dasharray",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "%",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "tokenData"
                                        },
                                        "memberName": "randomNumber"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "3",
                                        "subdenomination": null
                                    }
                                }
                            },
                            "3": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint"
                                        },
                                        "name": "scale",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": null
                            },
                            "4": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "string"
                                        },
                                        "name": "drawing",
                                        "storageLocation": "memory"
                                    }
                                },
                                "initialValue": null
                            },
                            "5": {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "==",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "tokenData"
                                        },
                                        "memberName": "shapeIndex"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": {
                                        "0": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "rotate"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "0",
                                                    "subdenomination": null
                                                }
                                            }
                                        },
                                        "1": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "scale"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "8",
                                                    "subdenomination": null
                                                }
                                            }
                                        }
                                    }
                                },
                                "FalseBody": {
                                    "type": "IfStatement",
                                    "condition": {
                                        "type": "BinaryOperation",
                                        "operator": "==",
                                        "left": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "tokenData"
                                            },
                                            "memberName": "shapeIndex"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "1",
                                            "subdenomination": null
                                        }
                                    },
                                    "TrueBody": {
                                        "type": "Block",
                                        "statements": {
                                            "0": {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "BinaryOperation",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "scale"
                                                    },
                                                    "right": {
                                                        "type": "BinaryOperation",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "BinaryOperation",
                                                            "operator": "%",
                                                            "left": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "tokenData"
                                                                },
                                                                "memberName": "randomNumber"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "8",
                                                                "subdenomination": null
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "4",
                                                            "subdenomination": null
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "FalseBody": {
                                        "type": "IfStatement",
                                        "condition": {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "tokenData"
                                                },
                                                "memberName": "shapeIndex"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            }
                                        },
                                        "TrueBody": {
                                            "type": "Block",
                                            "statements": {
                                                "0": {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "BinaryOperation",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "scale"
                                                        },
                                                        "right": {
                                                            "type": "BinaryOperation",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "BinaryOperation",
                                                                "operator": "%",
                                                                "left": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "tokenData"
                                                                    },
                                                                    "memberName": "randomNumber"
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "4",
                                                                    "subdenomination": null
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "4",
                                                                "subdenomination": null
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "FalseBody": {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "==",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "tokenData"
                                                    },
                                                    "memberName": "shapeIndex"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "3",
                                                    "subdenomination": null
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "Block",
                                                "statements": {
                                                    "0": {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "scale"
                                                            },
                                                            "right": {
                                                                "type": "BinaryOperation",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "%",
                                                                    "left": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "tokenData"
                                                                        },
                                                                        "memberName": "randomNumber"
                                                                    },
                                                                    "right": {
                                                                        "type": "NumberLiteral",
                                                                        "number": "4",
                                                                        "subdenomination": null
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "3",
                                                                    "subdenomination": null
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "1": {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "patternSize"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "210",
                                                                "subdenomination": null
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "FalseBody": {
                                                "type": "IfStatement",
                                                "condition": {
                                                    "type": "BinaryOperation",
                                                    "operator": "==",
                                                    "left": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "tokenData"
                                                        },
                                                        "memberName": "shapeIndex"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "4",
                                                        "subdenomination": null
                                                    }
                                                },
                                                "TrueBody": {
                                                    "type": "Block",
                                                    "statements": {
                                                        "0": {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "BinaryOperation",
                                                                "operator": "=",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "scale"
                                                                },
                                                                "right": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "%",
                                                                        "left": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "tokenData"
                                                                            },
                                                                            "memberName": "randomNumber"
                                                                        },
                                                                        "right": {
                                                                            "type": "NumberLiteral",
                                                                            "number": "5",
                                                                            "subdenomination": null
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "NumberLiteral",
                                                                        "number": "1",
                                                                        "subdenomination": null
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "1": {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "BinaryOperation",
                                                                "operator": "=",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "patternSize"
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "50",
                                                                    "subdenomination": null
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "FalseBody": null
                                            }
                                        }
                                    }
                                }
                            },
                            "6": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "string"
                                        },
                                        "name": "pattern",
                                        "storageLocation": "memory"
                                    }
                                },
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "ElementaryTypeName",
                                        "name": "string"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "abi"
                                                },
                                                "memberName": "encodePacked"
                                            },
                                            "arguments": {
                                                "0": {
                                                    "type": "stringLiteral",
                                                    "value": "<pattern id=\"p-"
                                                },
                                                "1": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "GuestlistedLibrary"
                                                        },
                                                        "memberName": "toString"
                                                    },
                                                    "arguments": {
                                                        "0": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "tokenData"
                                                            },
                                                            "memberName": "tokenId"
                                                        }
                                                    },
                                                    "names": {}
                                                },
                                                "2": {
                                                    "type": "stringLiteral",
                                                    "value": "\" patternUnits=\"userSpaceOnUse\" width=\""
                                                },
                                                "3": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "GuestlistedLibrary"
                                                        },
                                                        "memberName": "toString"
                                                    },
                                                    "arguments": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "patternSize"
                                                        }
                                                    },
                                                    "names": {}
                                                },
                                                "4": {
                                                    "type": "stringLiteral",
                                                    "value": "\" height=\""
                                                },
                                                "5": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "GuestlistedLibrary"
                                                        },
                                                        "memberName": "toString"
                                                    },
                                                    "arguments": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "patternSize"
                                                        }
                                                    },
                                                    "names": {}
                                                },
                                                "6": {
                                                    "type": "stringLiteral",
                                                    "value": "\" patternTransform=\"scale("
                                                },
                                                "7": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "GuestlistedLibrary"
                                                        },
                                                        "memberName": "toString"
                                                    },
                                                    "arguments": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "scale"
                                                        }
                                                    },
                                                    "names": {}
                                                },
                                                "8": {
                                                    "type": "stringLiteral",
                                                    "value": ") rotate("
                                                },
                                                "9": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "GuestlistedLibrary"
                                                        },
                                                        "memberName": "toString"
                                                    },
                                                    "arguments": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "rotate"
                                                        }
                                                    },
                                                    "names": {}
                                                },
                                                "10": {
                                                    "type": "stringLiteral",
                                                    "value": ")\"><rect width=\"100%\" height=\"100%\" fill=\"#"
                                                },
                                                "11": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "tokenData"
                                                    },
                                                    "memberName": "bg"
                                                },
                                                "12": {
                                                    "type": "stringLiteral",
                                                    "value": "\"/>"
                                                }
                                            },
                                            "names": {}
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "7": {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "==",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "tokenData"
                                        },
                                        "memberName": "shapeIndex"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": {
                                        "0": {
                                            "type": "VariableDeclarationStatement",
                                            "variables": {
                                                "0": {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "uint"
                                                    },
                                                    "name": "position",
                                                    "storageLocation": null
                                                }
                                            },
                                            "initialValue": {
                                                "type": "BinaryOperation",
                                                "operator": "+",
                                                "left": {
                                                    "type": "BinaryOperation",
                                                    "operator": "%",
                                                    "left": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "tokenData"
                                                        },
                                                        "memberName": "randomNumber"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "70",
                                                        "subdenomination": null
                                                    }
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "30",
                                                    "subdenomination": null
                                                }
                                            }
                                        },
                                        "1": {
                                            "type": "VariableDeclarationStatement",
                                            "variables": {
                                                "0": {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "uint"
                                                    },
                                                    "name": "radius",
                                                    "storageLocation": null
                                                }
                                            },
                                            "initialValue": {
                                                "type": "BinaryOperation",
                                                "operator": "+",
                                                "left": {
                                                    "type": "BinaryOperation",
                                                    "operator": "%",
                                                    "left": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "tokenData"
                                                        },
                                                        "memberName": "randomNumber"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "50",
                                                        "subdenomination": null
                                                    }
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "20",
                                                    "subdenomination": null
                                                }
                                            }
                                        },
                                        "2": {
                                            "type": "VariableDeclarationStatement",
                                            "variables": {
                                                "0": {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "string"
                                                    },
                                                    "name": "random",
                                                    "storageLocation": "memory"
                                                }
                                            },
                                            "initialValue": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "ElementaryTypeName",
                                                    "name": "string"
                                                },
                                                "arguments": {
                                                    "0": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "abi"
                                                            },
                                                            "memberName": "encodePacked"
                                                        },
                                                        "arguments": {
                                                            "0": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "GuestlistedLibrary"
                                                                    },
                                                                    "memberName": "toString"
                                                                },
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "%",
                                                                        "left": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "tokenData"
                                                                            },
                                                                            "memberName": "randomNumber"
                                                                        },
                                                                        "right": {
                                                                            "type": "NumberLiteral",
                                                                            "number": "10",
                                                                            "subdenomination": null
                                                                        }
                                                                    }
                                                                },
                                                                "names": {}
                                                            },
                                                            "1": {
                                                                "type": "stringLiteral",
                                                                "value": ".2"
                                                            }
                                                        },
                                                        "names": {}
                                                    }
                                                },
                                                "names": {}
                                            }
                                        },
                                        "3": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "pattern"
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "string"
                                                    },
                                                    "arguments": {
                                                        "0": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "abi"
                                                                },
                                                                "memberName": "encodePacked"
                                                            },
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "Identifier",
                                                                    "name": "pattern"
                                                                },
                                                                "1": {
                                                                    "type": "stringLiteral",
                                                                    "value": "<circle cx=\""
                                                                },
                                                                "2": {
                                                                    "type": "FunctionCall",
                                                                    "expression": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "GuestlistedLibrary"
                                                                        },
                                                                        "memberName": "toString"
                                                                    },
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "Identifier",
                                                                            "name": "position"
                                                                        }
                                                                    },
                                                                    "names": {}
                                                                },
                                                                "3": {
                                                                    "type": "stringLiteral",
                                                                    "value": "\" cy=\""
                                                                },
                                                                "4": {
                                                                    "type": "FunctionCall",
                                                                    "expression": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "GuestlistedLibrary"
                                                                        },
                                                                        "memberName": "toString"
                                                                    },
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "Identifier",
                                                                            "name": "position"
                                                                        }
                                                                    },
                                                                    "names": {}
                                                                },
                                                                "5": {
                                                                    "type": "stringLiteral",
                                                                    "value": "\" r=\""
                                                                },
                                                                "6": {
                                                                    "type": "FunctionCall",
                                                                    "expression": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "GuestlistedLibrary"
                                                                        },
                                                                        "memberName": "toString"
                                                                    },
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "Identifier",
                                                                            "name": "radius"
                                                                        }
                                                                    },
                                                                    "names": {}
                                                                },
                                                                "7": {
                                                                    "type": "stringLiteral",
                                                                    "value": "\" fill=\"none\" stroke=\"#"
                                                                },
                                                                "8": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "tokenData"
                                                                    },
                                                                    "memberName": "color"
                                                                },
                                                                "9": {
                                                                    "type": "stringLiteral",
                                                                    "value": "\" stroke-width=\"0.2\"/>"
                                                                },
                                                                "10": {
                                                                    "type": "stringLiteral",
                                                                    "value": "<circle cx=\""
                                                                },
                                                                "11": {
                                                                    "type": "FunctionCall",
                                                                    "expression": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "GuestlistedLibrary"
                                                                        },
                                                                        "memberName": "toString"
                                                                    },
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "-",
                                                                            "left": {
                                                                                "type": "BinaryOperation",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "position"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "radius"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "NumberLiteral",
                                                                                "number": "50",
                                                                                "subdenomination": null
                                                                            }
                                                                        }
                                                                    },
                                                                    "names": {}
                                                                },
                                                                "12": {
                                                                    "type": "stringLiteral",
                                                                    "value": "\" cy=\""
                                                                },
                                                                "13": {
                                                                    "type": "FunctionCall",
                                                                    "expression": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "GuestlistedLibrary"
                                                                        },
                                                                        "memberName": "toString"
                                                                    },
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "-",
                                                                            "left": {
                                                                                "type": "BinaryOperation",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "position"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "radius"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "NumberLiteral",
                                                                                "number": "50",
                                                                                "subdenomination": null
                                                                            }
                                                                        }
                                                                    },
                                                                    "names": {}
                                                                },
                                                                "14": {
                                                                    "type": "stringLiteral",
                                                                    "value": "\" r=\""
                                                                },
                                                                "15": {
                                                                    "type": "FunctionCall",
                                                                    "expression": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "GuestlistedLibrary"
                                                                        },
                                                                        "memberName": "toString"
                                                                    },
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "/",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "radius"
                                                                            },
                                                                            "right": {
                                                                                "type": "NumberLiteral",
                                                                                "number": "2",
                                                                                "subdenomination": null
                                                                            }
                                                                        }
                                                                    },
                                                                    "names": {}
                                                                },
                                                                "16": {
                                                                    "type": "stringLiteral",
                                                                    "value": "\" fill=\"none\" stroke=\"#"
                                                                }
                                                            },
                                                            "names": {}
                                                        }
                                                    },
                                                    "names": {}
                                                }
                                            }
                                        },
                                        "4": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "pattern"
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "string"
                                                    },
                                                    "arguments": {
                                                        "0": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "abi"
                                                                },
                                                                "memberName": "encodePacked"
                                                            },
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "Identifier",
                                                                    "name": "pattern"
                                                                },
                                                                "1": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "tokenData"
                                                                    },
                                                                    "memberName": "color"
                                                                },
                                                                "2": {
                                                                    "type": "stringLiteral",
                                                                    "value": "\" stroke-width=\"0.2\"><animate attributeName=\"stroke-width\" values=\"0.2;"
                                                                },
                                                                "3": {
                                                                    "type": "Identifier",
                                                                    "name": "random"
                                                                },
                                                                "4": {
                                                                    "type": "stringLiteral",
                                                                    "value": ";0.2\" dur=\"20s\" calcMode=\"paced\" repeatCount=\"indefinite\"/></circle>"
                                                                }
                                                            },
                                                            "names": {}
                                                        }
                                                    },
                                                    "names": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "FalseBody": {
                                    "type": "IfStatement",
                                    "condition": {
                                        "type": "BinaryOperation",
                                        "operator": "==",
                                        "left": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "tokenData"
                                            },
                                            "memberName": "shapeIndex"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "1",
                                            "subdenomination": null
                                        }
                                    },
                                    "TrueBody": {
                                        "type": "Block",
                                        "statements": {
                                            "0": {
                                                "type": "VariableDeclarationStatement",
                                                "variables": {
                                                    "0": {
                                                        "type": "VariableDeclaration",
                                                        "typeName": {
                                                            "type": "ElementaryTypeName",
                                                            "name": "uint"
                                                        },
                                                        "name": "position",
                                                        "storageLocation": null
                                                    }
                                                },
                                                "initialValue": {
                                                    "type": "BinaryOperation",
                                                    "operator": "%",
                                                    "left": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "tokenData"
                                                        },
                                                        "memberName": "randomNumber"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "100",
                                                        "subdenomination": null
                                                    }
                                                }
                                            },
                                            "1": {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "BinaryOperation",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "pattern"
                                                    },
                                                    "right": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "ElementaryTypeName",
                                                            "name": "string"
                                                        },
                                                        "arguments": {
                                                            "0": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "abi"
                                                                    },
                                                                    "memberName": "encodePacked"
                                                                },
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "Identifier",
                                                                        "name": "pattern"
                                                                    },
                                                                    "1": {
                                                                        "type": "stringLiteral",
                                                                        "value": "<polygon points=\"50,16 85,85 15,85 50,16\" fill=\"none\" stroke=\"#"
                                                                    },
                                                                    "2": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "tokenData"
                                                                        },
                                                                        "memberName": "color"
                                                                    },
                                                                    "3": {
                                                                        "type": "stringLiteral",
                                                                        "value": "\" stroke-width=\"0.3\"/><polygon points=\""
                                                                    },
                                                                    "4": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "GuestlistedLibrary"
                                                                            },
                                                                            "memberName": "toString"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "Identifier",
                                                                                "name": "position"
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    },
                                                                    "5": {
                                                                        "type": "stringLiteral",
                                                                        "value": ",16 85,85 15,85 50,16\" fill=\"none\" stroke=\"#"
                                                                    },
                                                                    "6": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "tokenData"
                                                                        },
                                                                        "memberName": "color"
                                                                    },
                                                                    "7": {
                                                                        "type": "stringLiteral",
                                                                        "value": "\" stroke-width=\"0.3\"><animate id=\"polygon_animation_1_"
                                                                    },
                                                                    "8": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "GuestlistedLibrary"
                                                                            },
                                                                            "memberName": "toString"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "tokenData"
                                                                                },
                                                                                "memberName": "tokenId"
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    },
                                                                    "9": {
                                                                        "type": "stringLiteral",
                                                                        "value": "\" begin=\"0s;polygon_animation_2_"
                                                                    },
                                                                    "10": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "GuestlistedLibrary"
                                                                            },
                                                                            "memberName": "toString"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "tokenData"
                                                                                },
                                                                                "memberName": "tokenId"
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    },
                                                                    "11": {
                                                                        "type": "stringLiteral",
                                                                        "value": ".end\" attributeName=\"points\"  from=\""
                                                                    }
                                                                },
                                                                "names": {}
                                                            }
                                                        },
                                                        "names": {}
                                                    }
                                                }
                                            },
                                            "2": {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "BinaryOperation",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "pattern"
                                                    },
                                                    "right": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "ElementaryTypeName",
                                                            "name": "string"
                                                        },
                                                        "arguments": {
                                                            "0": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "abi"
                                                                    },
                                                                    "memberName": "encodePacked"
                                                                },
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "Identifier",
                                                                        "name": "pattern"
                                                                    },
                                                                    "1": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "GuestlistedLibrary"
                                                                            },
                                                                            "memberName": "toString"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "Identifier",
                                                                                "name": "position"
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    },
                                                                    "2": {
                                                                        "type": "stringLiteral",
                                                                        "value": ",16 85,85 15,85 50,16\" to=\""
                                                                    },
                                                                    "3": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "GuestlistedLibrary"
                                                                            },
                                                                            "memberName": "toString"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "BinaryOperation",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "position"
                                                                                },
                                                                                "right": {
                                                                                    "type": "NumberLiteral",
                                                                                    "number": "50",
                                                                                    "subdenomination": null
                                                                                }
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    },
                                                                    "4": {
                                                                        "type": "stringLiteral",
                                                                        "value": ",16 85,85 15,85 50,16\"  dur=\"60s\" calcMode=\"paced\"/><animate id=\"polygon_animation_2_"
                                                                    },
                                                                    "5": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "GuestlistedLibrary"
                                                                            },
                                                                            "memberName": "toString"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "tokenData"
                                                                                },
                                                                                "memberName": "tokenId"
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    },
                                                                    "6": {
                                                                        "type": "stringLiteral",
                                                                        "value": "\" begin=\"polygon_animation_1_"
                                                                    },
                                                                    "7": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "GuestlistedLibrary"
                                                                            },
                                                                            "memberName": "toString"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "tokenData"
                                                                                },
                                                                                "memberName": "tokenId"
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    },
                                                                    "8": {
                                                                        "type": "stringLiteral",
                                                                        "value": ".end\" attributeName=\"points\" from=\""
                                                                    },
                                                                    "9": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "GuestlistedLibrary"
                                                                            },
                                                                            "memberName": "toString"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "BinaryOperation",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "position"
                                                                                },
                                                                                "right": {
                                                                                    "type": "NumberLiteral",
                                                                                    "number": "50",
                                                                                    "subdenomination": null
                                                                                }
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    },
                                                                    "10": {
                                                                        "type": "stringLiteral",
                                                                        "value": ",16 85,85 15,85 50,16\" to=\""
                                                                    },
                                                                    "11": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "GuestlistedLibrary"
                                                                            },
                                                                            "memberName": "toString"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "Identifier",
                                                                                "name": "position"
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    },
                                                                    "12": {
                                                                        "type": "stringLiteral",
                                                                        "value": ",16 85,85 15,85 50,16\"  dur=\"60s\" calcMode=\"paced\"/></polygon><line x1=\""
                                                                    }
                                                                },
                                                                "names": {}
                                                            }
                                                        },
                                                        "names": {}
                                                    }
                                                }
                                            },
                                            "3": {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "BinaryOperation",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "pattern"
                                                    },
                                                    "right": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "ElementaryTypeName",
                                                            "name": "string"
                                                        },
                                                        "arguments": {
                                                            "0": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "abi"
                                                                    },
                                                                    "memberName": "encodePacked"
                                                                },
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "Identifier",
                                                                        "name": "pattern"
                                                                    },
                                                                    "1": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "GuestlistedLibrary"
                                                                            },
                                                                            "memberName": "toString"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "Identifier",
                                                                                "name": "position"
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    },
                                                                    "2": {
                                                                        "type": "stringLiteral",
                                                                        "value": "\" y1=\"16\" x2=\"15\" y2=\"85\" stroke=\"#"
                                                                    },
                                                                    "3": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "tokenData"
                                                                        },
                                                                        "memberName": "color"
                                                                    },
                                                                    "4": {
                                                                        "type": "stringLiteral",
                                                                        "value": "\" stroke-width=\"0.3\" stroke-dasharray=\""
                                                                    },
                                                                    "5": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "GuestlistedLibrary"
                                                                            },
                                                                            "memberName": "toString"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "Identifier",
                                                                                "name": "dasharray"
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    },
                                                                    "6": {
                                                                        "type": "stringLiteral",
                                                                        "value": "\"><animate id=\"line_animation_1_"
                                                                    },
                                                                    "7": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "GuestlistedLibrary"
                                                                            },
                                                                            "memberName": "toString"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "tokenData"
                                                                                },
                                                                                "memberName": "tokenId"
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    },
                                                                    "8": {
                                                                        "type": "stringLiteral",
                                                                        "value": "\" begin=\"0s;line_animation_2_"
                                                                    },
                                                                    "9": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "GuestlistedLibrary"
                                                                            },
                                                                            "memberName": "toString"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "tokenData"
                                                                                },
                                                                                "memberName": "tokenId"
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    },
                                                                    "10": {
                                                                        "type": "stringLiteral",
                                                                        "value": ".end\" attributeName=\"x1\"  from=\""
                                                                    },
                                                                    "11": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "GuestlistedLibrary"
                                                                            },
                                                                            "memberName": "toString"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "Identifier",
                                                                                "name": "position"
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    }
                                                                },
                                                                "names": {}
                                                            }
                                                        },
                                                        "names": {}
                                                    }
                                                }
                                            },
                                            "4": {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "BinaryOperation",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "pattern"
                                                    },
                                                    "right": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "ElementaryTypeName",
                                                            "name": "string"
                                                        },
                                                        "arguments": {
                                                            "0": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "abi"
                                                                    },
                                                                    "memberName": "encodePacked"
                                                                },
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "Identifier",
                                                                        "name": "pattern"
                                                                    },
                                                                    "1": {
                                                                        "type": "stringLiteral",
                                                                        "value": "\" to=\""
                                                                    },
                                                                    "2": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "GuestlistedLibrary"
                                                                            },
                                                                            "memberName": "toString"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "BinaryOperation",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "position"
                                                                                },
                                                                                "right": {
                                                                                    "type": "NumberLiteral",
                                                                                    "number": "50",
                                                                                    "subdenomination": null
                                                                                }
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    },
                                                                    "3": {
                                                                        "type": "stringLiteral",
                                                                        "value": "\"  dur=\"60s\" calcMode=\"paced\"/><animate id=\"line_animation_2_"
                                                                    },
                                                                    "4": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "GuestlistedLibrary"
                                                                            },
                                                                            "memberName": "toString"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "tokenData"
                                                                                },
                                                                                "memberName": "tokenId"
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    },
                                                                    "5": {
                                                                        "type": "stringLiteral",
                                                                        "value": "\" begin=\"line_animation_1_"
                                                                    },
                                                                    "6": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "GuestlistedLibrary"
                                                                            },
                                                                            "memberName": "toString"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "tokenData"
                                                                                },
                                                                                "memberName": "tokenId"
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    },
                                                                    "7": {
                                                                        "type": "stringLiteral",
                                                                        "value": ".end\" attributeName=\"x1\" from=\""
                                                                    },
                                                                    "8": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "GuestlistedLibrary"
                                                                            },
                                                                            "memberName": "toString"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "BinaryOperation",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "position"
                                                                                },
                                                                                "right": {
                                                                                    "type": "NumberLiteral",
                                                                                    "number": "50",
                                                                                    "subdenomination": null
                                                                                }
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    },
                                                                    "9": {
                                                                        "type": "stringLiteral",
                                                                        "value": "\" to=\""
                                                                    },
                                                                    "10": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "GuestlistedLibrary"
                                                                            },
                                                                            "memberName": "toString"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "Identifier",
                                                                                "name": "position"
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    },
                                                                    "11": {
                                                                        "type": "stringLiteral",
                                                                        "value": "\"  dur=\"60s\" calcMode=\"paced\"/></line>"
                                                                    }
                                                                },
                                                                "names": {}
                                                            }
                                                        },
                                                        "names": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "FalseBody": {
                                        "type": "IfStatement",
                                        "condition": {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "tokenData"
                                                },
                                                "memberName": "shapeIndex"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            }
                                        },
                                        "TrueBody": {
                                            "type": "Block",
                                            "statements": {
                                                "0": {
                                                    "type": "VariableDeclarationStatement",
                                                    "variables": {
                                                        "0": {
                                                            "type": "VariableDeclaration",
                                                            "typeName": {
                                                                "type": "ElementaryTypeName",
                                                                "name": "uint"
                                                            },
                                                            "name": "size",
                                                            "storageLocation": null
                                                        }
                                                    },
                                                    "initialValue": {
                                                        "type": "BinaryOperation",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "BinaryOperation",
                                                            "operator": "%",
                                                            "left": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "tokenData"
                                                                },
                                                                "memberName": "randomNumber"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "100",
                                                                "subdenomination": null
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "40",
                                                            "subdenomination": null
                                                        }
                                                    }
                                                },
                                                "1": {
                                                    "type": "VariableDeclarationStatement",
                                                    "variables": {
                                                        "0": {
                                                            "type": "VariableDeclaration",
                                                            "typeName": {
                                                                "type": "ElementaryTypeName",
                                                                "name": "uint"
                                                            },
                                                            "name": "random",
                                                            "storageLocation": null
                                                        }
                                                    },
                                                    "initialValue": {
                                                        "type": "BinaryOperation",
                                                        "operator": "%",
                                                        "left": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "tokenData"
                                                            },
                                                            "memberName": "randomNumber"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "50",
                                                            "subdenomination": null
                                                        }
                                                    }
                                                },
                                                "2": {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "BinaryOperation",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "pattern"
                                                        },
                                                        "right": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "ElementaryTypeName",
                                                                "name": "string"
                                                            },
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "FunctionCall",
                                                                    "expression": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "abi"
                                                                        },
                                                                        "memberName": "encodePacked"
                                                                    },
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "Identifier",
                                                                            "name": "pattern"
                                                                        },
                                                                        "1": {
                                                                            "type": "stringLiteral",
                                                                            "value": "<rect x=\"0\" y=\"0\" width=\""
                                                                        },
                                                                        "2": {
                                                                            "type": "FunctionCall",
                                                                            "expression": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "GuestlistedLibrary"
                                                                                },
                                                                                "memberName": "toString"
                                                                            },
                                                                            "arguments": {
                                                                                "0": {
                                                                                    "type": "Identifier",
                                                                                    "name": "size"
                                                                                }
                                                                            },
                                                                            "names": {}
                                                                        },
                                                                        "3": {
                                                                            "type": "stringLiteral",
                                                                            "value": "\" height=\""
                                                                        },
                                                                        "4": {
                                                                            "type": "FunctionCall",
                                                                            "expression": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "GuestlistedLibrary"
                                                                                },
                                                                                "memberName": "toString"
                                                                            },
                                                                            "arguments": {
                                                                                "0": {
                                                                                    "type": "Identifier",
                                                                                    "name": "size"
                                                                                }
                                                                            },
                                                                            "names": {}
                                                                        },
                                                                        "5": {
                                                                            "type": "stringLiteral",
                                                                            "value": "\" fill=\"none\" stroke=\"#"
                                                                        },
                                                                        "6": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "tokenData"
                                                                            },
                                                                            "memberName": "color"
                                                                        },
                                                                        "7": {
                                                                            "type": "stringLiteral",
                                                                            "value": "\" stroke-width=\"0.5\"><animate attributeName=\"x\" values=\"0;50;0\" dur=\"60s\" repeatCount=\"indefinite\" calcMode=\"paced\" /></rect><rect x=\"0\" y=\"0\" width=\""
                                                                        },
                                                                        "8": {
                                                                            "type": "FunctionCall",
                                                                            "expression": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "GuestlistedLibrary"
                                                                                },
                                                                                "memberName": "toString"
                                                                            },
                                                                            "arguments": {
                                                                                "0": {
                                                                                    "type": "BinaryOperation",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "size"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "random"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "names": {}
                                                                        },
                                                                        "9": {
                                                                            "type": "stringLiteral",
                                                                            "value": "\" height=\""
                                                                        },
                                                                        "10": {
                                                                            "type": "FunctionCall",
                                                                            "expression": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "GuestlistedLibrary"
                                                                                },
                                                                                "memberName": "toString"
                                                                            },
                                                                            "arguments": {
                                                                                "0": {
                                                                                    "type": "BinaryOperation",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "size"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "random"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "names": {}
                                                                        },
                                                                        "11": {
                                                                            "type": "stringLiteral",
                                                                            "value": "\" fill=\"none\" stroke=\"#"
                                                                        },
                                                                        "12": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "tokenData"
                                                                            },
                                                                            "memberName": "color"
                                                                        },
                                                                        "13": {
                                                                            "type": "stringLiteral",
                                                                            "value": "\" stroke-width=\"0.5\"/>"
                                                                        }
                                                                    },
                                                                    "names": {}
                                                                }
                                                            },
                                                            "names": {}
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "FalseBody": {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "==",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "tokenData"
                                                    },
                                                    "memberName": "shapeIndex"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "3",
                                                    "subdenomination": null
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "Block",
                                                "statements": {
                                                    "0": {
                                                        "type": "VariableDeclarationStatement",
                                                        "variables": {
                                                            "0": {
                                                                "type": "VariableDeclaration",
                                                                "typeName": {
                                                                    "type": "ElementaryTypeName",
                                                                    "name": "uint"
                                                                },
                                                                "name": "size",
                                                                "storageLocation": null
                                                            }
                                                        },
                                                        "initialValue": {
                                                            "type": "BinaryOperation",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "BinaryOperation",
                                                                "operator": "%",
                                                                "left": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "tokenData"
                                                                    },
                                                                    "memberName": "randomNumber"
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "100",
                                                                    "subdenomination": null
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "50",
                                                                "subdenomination": null
                                                            }
                                                        }
                                                    },
                                                    "1": {
                                                        "type": "VariableDeclarationStatement",
                                                        "variables": {
                                                            "0": {
                                                                "type": "VariableDeclaration",
                                                                "typeName": {
                                                                    "type": "ElementaryTypeName",
                                                                    "name": "uint"
                                                                },
                                                                "name": "position",
                                                                "storageLocation": null
                                                            }
                                                        },
                                                        "initialValue": {
                                                            "type": "BinaryOperation",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "BinaryOperation",
                                                                "operator": "%",
                                                                "left": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "tokenData"
                                                                    },
                                                                    "memberName": "randomNumber"
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "50",
                                                                    "subdenomination": null
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "10",
                                                                "subdenomination": null
                                                            }
                                                        }
                                                    },
                                                    "2": {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "pattern"
                                                            },
                                                            "right": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "ElementaryTypeName",
                                                                    "name": "string"
                                                                },
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "abi"
                                                                            },
                                                                            "memberName": "encodePacked"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "Identifier",
                                                                                "name": "pattern"
                                                                            },
                                                                            "1": {
                                                                                "type": "stringLiteral",
                                                                                "value": "<rect x=\"0\" y=\"0\" width=\""
                                                                            },
                                                                            "2": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "size"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "3": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\" height=\""
                                                                            },
                                                                            "4": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "size"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "5": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\" fill=\"none\" stroke=\"#"
                                                                            },
                                                                            "6": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "tokenData"
                                                                                },
                                                                                "memberName": "color"
                                                                            },
                                                                            "7": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\" stroke-width=\"0.5\"></rect><rect x=\""
                                                                            },
                                                                            "8": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "position"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "9": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\" y=\""
                                                                            },
                                                                            "10": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "position"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "11": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\" width=\""
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    }
                                                                },
                                                                "names": {}
                                                            }
                                                        }
                                                    },
                                                    "3": {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "pattern"
                                                            },
                                                            "right": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "ElementaryTypeName",
                                                                    "name": "string"
                                                                },
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "abi"
                                                                            },
                                                                            "memberName": "encodePacked"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "Identifier",
                                                                                "name": "pattern"
                                                                            },
                                                                            "1": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "size"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "2": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\" height=\""
                                                                            },
                                                                            "3": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "size"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "4": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\" fill=\"none\" stroke=\"#"
                                                                            },
                                                                            "5": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "tokenData"
                                                                                },
                                                                                "memberName": "color"
                                                                            },
                                                                            "6": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\" stroke-width=\"0.5\"><animate attributeName=\"x\" values=\""
                                                                            },
                                                                            "7": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "position"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "8": {
                                                                                "type": "stringLiteral",
                                                                                "value": ";0;"
                                                                            },
                                                                            "9": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "position"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "10": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\" dur=\"60s\" repeatCount=\"indefinite\" calcMode=\"paced\" /><animate attributeName=\"y\" values=\""
                                                                            },
                                                                            "11": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "position"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "12": {
                                                                                "type": "stringLiteral",
                                                                                "value": ";0;"
                                                                            },
                                                                            "13": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "position"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "14": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\" dur=\"60s\" repeatCount=\"indefinite\" calcMode=\"paced\" /></rect>"
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    }
                                                                },
                                                                "names": {}
                                                            }
                                                        }
                                                    },
                                                    "4": {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "pattern"
                                                            },
                                                            "right": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "ElementaryTypeName",
                                                                    "name": "string"
                                                                },
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "abi"
                                                                            },
                                                                            "memberName": "encodePacked"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "Identifier",
                                                                                "name": "pattern"
                                                                            },
                                                                            "1": {
                                                                                "type": "stringLiteral",
                                                                                "value": "<line x1=\"0\" y1=\"0\" x2=\""
                                                                            },
                                                                            "2": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "position"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "3": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\" y2=\""
                                                                            },
                                                                            "4": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "position"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "5": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\" stroke=\"#"
                                                                            },
                                                                            "6": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "tokenData"
                                                                                },
                                                                                "memberName": "color"
                                                                            },
                                                                            "7": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\" stroke-width=\"0.3\" stroke-dasharray=\""
                                                                            },
                                                                            "8": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "dasharray"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    }
                                                                },
                                                                "names": {}
                                                            }
                                                        }
                                                    },
                                                    "5": {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "pattern"
                                                            },
                                                            "right": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "ElementaryTypeName",
                                                                    "name": "string"
                                                                },
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "abi"
                                                                            },
                                                                            "memberName": "encodePacked"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "Identifier",
                                                                                "name": "pattern"
                                                                            },
                                                                            "1": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\"><animate attributeName=\"x2\" values=\""
                                                                            },
                                                                            "2": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "position"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "3": {
                                                                                "type": "stringLiteral",
                                                                                "value": ";0;"
                                                                            },
                                                                            "4": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "position"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "5": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\"  dur=\"60s\" repeatCount=\"indefinite\" calcMode=\"paced\"/><animate attributeName=\"y2\" values=\""
                                                                            },
                                                                            "6": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "position"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "7": {
                                                                                "type": "stringLiteral",
                                                                                "value": ";0;"
                                                                            },
                                                                            "8": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "position"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "9": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\"  dur=\"60s\" repeatCount=\"indefinite\" calcMode=\"paced\"/></line>"
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    }
                                                                },
                                                                "names": {}
                                                            }
                                                        }
                                                    },
                                                    "6": {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "pattern"
                                                            },
                                                            "right": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "ElementaryTypeName",
                                                                    "name": "string"
                                                                },
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "abi"
                                                                            },
                                                                            "memberName": "encodePacked"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "Identifier",
                                                                                "name": "pattern"
                                                                            },
                                                                            "1": {
                                                                                "type": "stringLiteral",
                                                                                "value": "<line x1=\""
                                                                            },
                                                                            "2": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "size"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "3": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\" y1=\"0\" x2=\""
                                                                            },
                                                                            "4": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "BinaryOperation",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "position"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "size"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "5": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\" y2=\""
                                                                            },
                                                                            "6": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "position"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "7": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\" stroke=\"#"
                                                                            },
                                                                            "8": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "tokenData"
                                                                                },
                                                                                "memberName": "color"
                                                                            },
                                                                            "9": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\" stroke-width=\"0.3\" stroke-dasharray=\""
                                                                            },
                                                                            "10": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "dasharray"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    }
                                                                },
                                                                "names": {}
                                                            }
                                                        }
                                                    },
                                                    "7": {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "pattern"
                                                            },
                                                            "right": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "ElementaryTypeName",
                                                                    "name": "string"
                                                                },
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "abi"
                                                                            },
                                                                            "memberName": "encodePacked"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "Identifier",
                                                                                "name": "pattern"
                                                                            },
                                                                            "1": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\">"
                                                                            },
                                                                            "2": {
                                                                                "type": "stringLiteral",
                                                                                "value": "<animate attributeName=\"x2\" values=\""
                                                                            },
                                                                            "3": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "BinaryOperation",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "position"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "size"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "4": {
                                                                                "type": "stringLiteral",
                                                                                "value": ";"
                                                                            },
                                                                            "5": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "size"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "6": {
                                                                                "type": "stringLiteral",
                                                                                "value": ";"
                                                                            },
                                                                            "7": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "BinaryOperation",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "position"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "size"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "8": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\"  dur=\"60s\" repeatCount=\"indefinite\" calcMode=\"paced\"/><animate attributeName=\"y2\" values=\""
                                                                            },
                                                                            "9": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "position"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "10": {
                                                                                "type": "stringLiteral",
                                                                                "value": ";0;"
                                                                            },
                                                                            "11": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "position"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "12": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\"  dur=\"60s\" repeatCount=\"indefinite\" calcMode=\"paced\"/></line>"
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    }
                                                                },
                                                                "names": {}
                                                            }
                                                        }
                                                    },
                                                    "8": {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "pattern"
                                                            },
                                                            "right": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "ElementaryTypeName",
                                                                    "name": "string"
                                                                },
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "abi"
                                                                            },
                                                                            "memberName": "encodePacked"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "Identifier",
                                                                                "name": "pattern"
                                                                            },
                                                                            "1": {
                                                                                "type": "stringLiteral",
                                                                                "value": "<line x1=\"0\" y1=\""
                                                                            },
                                                                            "2": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "size"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "3": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\" x2=\""
                                                                            },
                                                                            "4": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "position"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "5": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\" y2=\""
                                                                            },
                                                                            "6": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "BinaryOperation",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "position"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "size"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "7": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\" stroke=\"#"
                                                                            },
                                                                            "8": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "tokenData"
                                                                                },
                                                                                "memberName": "color"
                                                                            },
                                                                            "9": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\" stroke-width=\"0.3\" stroke-dasharray=\""
                                                                            },
                                                                            "10": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "dasharray"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    }
                                                                },
                                                                "names": {}
                                                            }
                                                        }
                                                    },
                                                    "9": {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "pattern"
                                                            },
                                                            "right": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "ElementaryTypeName",
                                                                    "name": "string"
                                                                },
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "abi"
                                                                            },
                                                                            "memberName": "encodePacked"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "Identifier",
                                                                                "name": "pattern"
                                                                            },
                                                                            "1": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\"><animate attributeName=\"x2\" values=\""
                                                                            },
                                                                            "2": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "position"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "3": {
                                                                                "type": "stringLiteral",
                                                                                "value": ";0;"
                                                                            },
                                                                            "4": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "position"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "5": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\"  dur=\"60s\" repeatCount=\"indefinite\" calcMode=\"paced\"/><animate attributeName=\"y2\" values=\""
                                                                            },
                                                                            "6": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "BinaryOperation",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "position"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "size"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "7": {
                                                                                "type": "stringLiteral",
                                                                                "value": ";"
                                                                            },
                                                                            "8": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "size"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "9": {
                                                                                "type": "stringLiteral",
                                                                                "value": ";"
                                                                            },
                                                                            "10": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "BinaryOperation",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "position"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "size"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "11": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\"  dur=\"60s\" repeatCount=\"indefinite\" calcMode=\"paced\"/></line>"
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    }
                                                                },
                                                                "names": {}
                                                            }
                                                        }
                                                    },
                                                    "10": {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "pattern"
                                                            },
                                                            "right": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "ElementaryTypeName",
                                                                    "name": "string"
                                                                },
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "abi"
                                                                            },
                                                                            "memberName": "encodePacked"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "Identifier",
                                                                                "name": "pattern"
                                                                            },
                                                                            "1": {
                                                                                "type": "stringLiteral",
                                                                                "value": "<line x1=\""
                                                                            },
                                                                            "2": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "size"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "3": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\" y1=\""
                                                                            },
                                                                            "4": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "size"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "5": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\" x2=\""
                                                                            },
                                                                            "6": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "BinaryOperation",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "position"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "size"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "7": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\" y2=\""
                                                                            },
                                                                            "8": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "BinaryOperation",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "position"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "size"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "9": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\" stroke=\"#"
                                                                            },
                                                                            "10": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "tokenData"
                                                                                },
                                                                                "memberName": "color"
                                                                            },
                                                                            "11": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\" stroke-width=\"0.3\" stroke-dasharray=\""
                                                                            },
                                                                            "12": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "dasharray"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    }
                                                                },
                                                                "names": {}
                                                            }
                                                        }
                                                    },
                                                    "11": {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "pattern"
                                                            },
                                                            "right": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "ElementaryTypeName",
                                                                    "name": "string"
                                                                },
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "abi"
                                                                            },
                                                                            "memberName": "encodePacked"
                                                                        },
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "Identifier",
                                                                                "name": "pattern"
                                                                            },
                                                                            "1": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\"><animate attributeName=\"x2\" values=\""
                                                                            },
                                                                            "2": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "BinaryOperation",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "position"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "size"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "3": {
                                                                                "type": "stringLiteral",
                                                                                "value": ";"
                                                                            },
                                                                            "4": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "size"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "5": {
                                                                                "type": "stringLiteral",
                                                                                "value": ";"
                                                                            },
                                                                            "6": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "BinaryOperation",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "position"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "size"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "7": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\"  dur=\"60s\" repeatCount=\"indefinite\" calcMode=\"paced\"/><animate attributeName=\"y2\" values=\""
                                                                            },
                                                                            "8": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "BinaryOperation",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "position"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "size"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "9": {
                                                                                "type": "stringLiteral",
                                                                                "value": ";"
                                                                            },
                                                                            "10": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "Identifier",
                                                                                        "name": "size"
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "11": {
                                                                                "type": "stringLiteral",
                                                                                "value": ";"
                                                                            },
                                                                            "12": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GuestlistedLibrary"
                                                                                    },
                                                                                    "memberName": "toString"
                                                                                },
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "BinaryOperation",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "position"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "size"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "names": {}
                                                                            },
                                                                            "13": {
                                                                                "type": "stringLiteral",
                                                                                "value": "\"  dur=\"60s\" repeatCount=\"indefinite\" calcMode=\"paced\"/></line>"
                                                                            }
                                                                        },
                                                                        "names": {}
                                                                    }
                                                                },
                                                                "names": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "FalseBody": {
                                                "type": "IfStatement",
                                                "condition": {
                                                    "type": "BinaryOperation",
                                                    "operator": "==",
                                                    "left": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "tokenData"
                                                        },
                                                        "memberName": "shapeIndex"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "4",
                                                        "subdenomination": null
                                                    }
                                                },
                                                "TrueBody": {
                                                    "type": "Block",
                                                    "statements": {
                                                        "0": {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "BinaryOperation",
                                                                "operator": "=",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "pattern"
                                                                },
                                                                "right": {
                                                                    "type": "FunctionCall",
                                                                    "expression": {
                                                                        "type": "ElementaryTypeName",
                                                                        "name": "string"
                                                                    },
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "FunctionCall",
                                                                            "expression": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "abi"
                                                                                },
                                                                                "memberName": "encodePacked"
                                                                            },
                                                                            "arguments": {
                                                                                "0": {
                                                                                    "type": "Identifier",
                                                                                    "name": "pattern"
                                                                                },
                                                                                "1": {
                                                                                    "type": "stringLiteral",
                                                                                    "value": "<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"50\" fill=\"none\" stroke=\"#"
                                                                                },
                                                                                "2": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "tokenData"
                                                                                    },
                                                                                    "memberName": "color"
                                                                                },
                                                                                "3": {
                                                                                    "type": "stringLiteral",
                                                                                    "value": "\" stroke-width=\"1\"/>"
                                                                                }
                                                                            },
                                                                            "names": {}
                                                                        }
                                                                    },
                                                                    "names": {}
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "FalseBody": null
                                            }
                                        }
                                    }
                                }
                            },
                            "8": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "pattern"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "ElementaryTypeName",
                                            "name": "string"
                                        },
                                        "arguments": {
                                            "0": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "abi"
                                                    },
                                                    "memberName": "encodePacked"
                                                },
                                                "arguments": {
                                                    "0": {
                                                        "type": "Identifier",
                                                        "name": "pattern"
                                                    },
                                                    "1": {
                                                        "type": "stringLiteral",
                                                        "value": "</pattern>"
                                                    }
                                                },
                                                "names": {}
                                            }
                                        },
                                        "names": {}
                                    }
                                }
                            },
                            "9": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "drawing"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "ElementaryTypeName",
                                            "name": "string"
                                        },
                                        "arguments": {
                                            "0": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "abi"
                                                    },
                                                    "memberName": "encodePacked"
                                                },
                                                "arguments": {
                                                    "0": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "GuestlistedLibrary"
                                                            },
                                                            "memberName": "toString"
                                                        },
                                                        "arguments": {
                                                            "0": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "tokenData"
                                                                },
                                                                "memberName": "tokenId"
                                                            }
                                                        },
                                                        "names": {}
                                                    },
                                                    "1": {
                                                        "type": "stringLiteral",
                                                        "value": ") #"
                                                    },
                                                    "2": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "tokenData"
                                                        },
                                                        "memberName": "bg"
                                                    },
                                                    "3": {
                                                        "type": "stringLiteral",
                                                        "value": ";}.dj, .venue,.id, .location, .date {fill: #"
                                                    }
                                                },
                                                "names": {}
                                            }
                                        },
                                        "names": {}
                                    }
                                }
                            },
                            "10": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "drawing"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "ElementaryTypeName",
                                            "name": "string"
                                        },
                                        "arguments": {
                                            "0": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "abi"
                                                    },
                                                    "memberName": "encodePacked"
                                                },
                                                "arguments": {
                                                    "0": {
                                                        "type": "Identifier",
                                                        "name": "drawing"
                                                    },
                                                    "1": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "tokenData"
                                                        },
                                                        "memberName": "color"
                                                    },
                                                    "2": {
                                                        "type": "stringLiteral",
                                                        "value": ";font-family:Arial;font-weight:700;}.venue{font-size:60px;}.date{font-size:40px;}.location{font-size:30px;}.id{font-size:20px;}.figure{fill:none;stroke: #"
                                                    },
                                                    "3": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "tokenData"
                                                        },
                                                        "memberName": "color"
                                                    },
                                                    "4": {
                                                        "type": "stringLiteral",
                                                        "value": ";} .bg { transform-origin: center; animation: spin 120s linear infinite; }@keyframes spin{0% { transform: rotate(0deg) scale(1);} 50%{ transform: rotate(180deg) scale(2);} 100%{ transform: rotate(360deg) scale(1);}}</style>"
                                                    },
                                                    "5": {
                                                        "type": "Identifier",
                                                        "name": "pattern"
                                                    },
                                                    "6": {
                                                        "type": "stringLiteral",
                                                        "value": "</defs>"
                                                    }
                                                },
                                                "names": {}
                                            }
                                        },
                                        "names": {}
                                    }
                                }
                            },
                            "11": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "drawing"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "ElementaryTypeName",
                                            "name": "string"
                                        },
                                        "arguments": {
                                            "0": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "abi"
                                                    },
                                                    "memberName": "encodePacked"
                                                },
                                                "arguments": {
                                                    "0": {
                                                        "type": "Identifier",
                                                        "name": "drawing"
                                                    },
                                                    "1": {
                                                        "type": "stringLiteral",
                                                        "value": "<rect class=\"bg\" x=\"-300\" y=\"-425\" width=\"1200\" height=\"1700\"/><text class=\"id\" x=\"75\" y=\"70\"><tspan x=\"75\" dy=\"0\">#"
                                                    },
                                                    "2": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "GuestlistedLibrary"
                                                            },
                                                            "memberName": "toString"
                                                        },
                                                        "arguments": {
                                                            "0": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "tokenData"
                                                                },
                                                                "memberName": "tokenId"
                                                            }
                                                        },
                                                        "names": {}
                                                    },
                                                    "3": {
                                                        "type": "stringLiteral",
                                                        "value": "</tspan></text><text x=\"70\" y=\"80\" class=\"dj\"><tspan x=\"70\" dy=\"0\" alignment-baseline=\"hanging\" style=\"font-size:"
                                                    },
                                                    "4": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "GuestlistedLibrary"
                                                            },
                                                            "memberName": "toString"
                                                        },
                                                        "arguments": {
                                                            "0": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "tokenData"
                                                                    },
                                                                    "memberName": "dj"
                                                                },
                                                                "memberName": "fontSize"
                                                            }
                                                        },
                                                        "names": {}
                                                    },
                                                    "5": {
                                                        "type": "stringLiteral",
                                                        "value": "\">"
                                                    },
                                                    "6": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "tokenData"
                                                            },
                                                            "memberName": "dj"
                                                        },
                                                        "memberName": "firstName"
                                                    },
                                                    "7": {
                                                        "type": "stringLiteral",
                                                        "value": "</tspan><tspan x=\"70\" dy=\""
                                                    },
                                                    "8": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "GuestlistedLibrary"
                                                            },
                                                            "memberName": "toString"
                                                        },
                                                        "arguments": {
                                                            "0": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "tokenData"
                                                                    },
                                                                    "memberName": "dj"
                                                                },
                                                                "memberName": "fontSize"
                                                            }
                                                        },
                                                        "names": {}
                                                    },
                                                    "9": {
                                                        "type": "stringLiteral",
                                                        "value": "\" alignment-baseline=\"hanging\" style=\"font-size:"
                                                    },
                                                    "10": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "GuestlistedLibrary"
                                                            },
                                                            "memberName": "toString"
                                                        },
                                                        "arguments": {
                                                            "0": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "tokenData"
                                                                    },
                                                                    "memberName": "dj"
                                                                },
                                                                "memberName": "fontSize"
                                                            }
                                                        },
                                                        "names": {}
                                                    },
                                                    "11": {
                                                        "type": "stringLiteral",
                                                        "value": "\">"
                                                    }
                                                },
                                                "names": {}
                                            }
                                        },
                                        "names": {}
                                    }
                                }
                            },
                            "12": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "drawing"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "ElementaryTypeName",
                                            "name": "string"
                                        },
                                        "arguments": {
                                            "0": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "abi"
                                                    },
                                                    "memberName": "encodePacked"
                                                },
                                                "arguments": {
                                                    "0": {
                                                        "type": "Identifier",
                                                        "name": "drawing"
                                                    },
                                                    "1": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "tokenData"
                                                            },
                                                            "memberName": "dj"
                                                        },
                                                        "memberName": "lastName"
                                                    },
                                                    "2": {
                                                        "type": "stringLiteral",
                                                        "value": "</tspan></text><text class=\"date\" text-anchor=\"end\" x=\"530\" y=\"650\">"
                                                    },
                                                    "3": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "tokenData"
                                                        },
                                                        "memberName": "date"
                                                    },
                                                    "4": {
                                                        "type": "stringLiteral",
                                                        "value": "</text><text class=\"venue\" text-anchor=\"end\" x=\"530\" y=\"720\">"
                                                    },
                                                    "5": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "tokenData"
                                                            },
                                                            "memberName": "venue"
                                                        },
                                                        "memberName": "name"
                                                    },
                                                    "6": {
                                                        "type": "stringLiteral",
                                                        "value": "</text><text class=\"location\" text-anchor=\"end\" x=\"530\" y=\"770\">"
                                                    },
                                                    "7": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "tokenData"
                                                            },
                                                            "memberName": "venue"
                                                        },
                                                        "memberName": "location"
                                                    },
                                                    "8": {
                                                        "type": "stringLiteral",
                                                        "value": "</text></svg>"
                                                    }
                                                },
                                                "names": {}
                                            }
                                        },
                                        "names": {}
                                    }
                                }
                            },
                            "13": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "drawing"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "Base64"
                                            },
                                            "memberName": "encode"
                                        },
                                        "arguments": {
                                            "0": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "ElementaryTypeName",
                                                    "name": "bytes"
                                                },
                                                "arguments": {
                                                    "0": {
                                                        "type": "Identifier",
                                                        "name": "drawing"
                                                    }
                                                },
                                                "names": {}
                                            }
                                        },
                                        "names": {}
                                    }
                                }
                            },
                            "14": {
                                "type": "FunctionCall",
                                "expression": {
                                    "type": "ElementaryTypeName",
                                    "name": "string"
                                },
                                "arguments": {
                                    "0": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "abi"
                                            },
                                            "memberName": "encodePacked"
                                        },
                                        "arguments": {
                                            "0": {
                                                "type": "stringLiteral",
                                                "value": "data:image/svg+xml;base64,"
                                            },
                                            "1": {
                                                "type": "Identifier",
                                                "name": "drawing"
                                            }
                                        },
                                        "names": {}
                                    }
                                },
                                "names": {}
                            }
                        }
                    },
                    "visibility": "external",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "1": {
                    "type": "FunctionDefinition",
                    "name": "constructor",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {}
                    },
                    "returnParameters": {},
                    "body": {
                        "type": "Block",
                        "statements": {}
                    },
                    "visibility": "default",
                    "modifiers": {},
                    "isConstructor": true,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                }
            },
            "kind": "contract"
        }
    }
}