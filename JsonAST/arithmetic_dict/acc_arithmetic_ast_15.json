{
    "type": "SourceUnit",
    "children": {
        "0": {
            "type": "PragmaDirective",
            "name": "solidity",
            "value": "0.5.15"
        },
        "1": {
            "type": "ContractDefinition",
            "name": "IFactRegistry",
            "baseContracts": {},
            "subNodes": {
                "0": {
                    "type": "FunctionDefinition",
                    "name": "isValid",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes32"
                                },
                                "name": "fact",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {},
                    "visibility": "external",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                }
            },
            "kind": "contract"
        },
        "2": {
            "type": "ContractDefinition",
            "name": "IMerkleVerifier",
            "baseContracts": {},
            "subNodes": {
                "0": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "MAX_N_MERKLE_VERIFIER_QUERIES",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "128",
                                "subdenomination": null
                            },
                            "visibility": "internal",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                    }
                },
                "1": {
                    "type": "FunctionDefinition",
                    "name": "verify",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "channelPtr",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "queuePtr",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "2": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes32"
                                },
                                "name": "root",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "3": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "n",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes32"
                                },
                                "name": "hash",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {},
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                }
            },
            "kind": "contract"
        },
        "3": {
            "type": "ContractDefinition",
            "name": "IQueryableFactRegistry",
            "baseContracts": {
                "0": {
                    "type": "InheritanceSpecifier",
                    "baseName": {
                        "type": "UserDefinedTypeName",
                        "namePath": "IFactRegistry"
                    },
                    "arguments": null
                }
            },
            "subNodes": {
                "0": {
                    "type": "FunctionDefinition",
                    "name": "hasRegisteredFact",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {}
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {},
                    "visibility": "external",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                }
            },
            "kind": "contract"
        },
        "4": {
            "type": "ContractDefinition",
            "name": "MerkleVerifier",
            "baseContracts": {
                "0": {
                    "type": "InheritanceSpecifier",
                    "baseName": {
                        "type": "UserDefinedTypeName",
                        "namePath": "IMerkleVerifier"
                    },
                    "arguments": null
                }
            },
            "subNodes": {
                "0": {
                    "type": "FunctionDefinition",
                    "name": "getHashMask",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {}
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "NumberLiteral",
                                "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000",
                                "subdenomination": null
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "1": {
                    "type": "FunctionDefinition",
                    "name": "verify",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "channelPtr",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "queuePtr",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "2": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes32"
                                },
                                "name": "root",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "3": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "n",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes32"
                                },
                                "name": "hash",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "lhashMask",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "getHashMask"
                                    },
                                    "arguments": {},
                                    "names": {}
                                }
                            },
                            "1": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "BinaryOperation",
                                            "operator": "<=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "n"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "MAX_N_MERKLE_VERIFIER_QUERIES"
                                            }
                                        },
                                        "1": {
                                            "type": "stringLiteral",
                                            "value": "TOO_MANY_MERKLE_QUERIES"
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "2": {
                                "type": "InLineAssemblyStatement",
                                "language": null,
                                "body": {
                                    "type": "AssemblyBlock",
                                    "operations": {
                                        "0": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "hashesPtr"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "add",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "queuePtr",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "HexNumber",
                                                        "value": "0x20"
                                                    }
                                                }
                                            }
                                        },
                                        "1": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "queueSize"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mul",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "n",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "HexNumber",
                                                        "value": "0x40"
                                                    }
                                                }
                                            }
                                        },
                                        "2": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "slotSize"
                                                }
                                            },
                                            "expression": {
                                                "type": "HexNumber",
                                                "value": "0x40"
                                            }
                                        },
                                        "3": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "rdIdx"
                                                }
                                            },
                                            "expression": {
                                                "type": "DecimalNumber",
                                                "value": "0"
                                            }
                                        },
                                        "4": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "wrIdx"
                                                }
                                            },
                                            "expression": {
                                                "type": "DecimalNumber",
                                                "value": "0"
                                            }
                                        },
                                        "5": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "index"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "add",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "rdIdx",
                                                                "arguments": {}
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "queuePtr",
                                                                "arguments": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "6": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "proofPtr"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "channelPtr",
                                                        "arguments": {}
                                                    }
                                                }
                                            }
                                        },
                                        "7": {
                                            "type": "AssemblyFor",
                                            "pre": {
                                                "type": "AssemblyBlock",
                                                "operations": {}
                                            },
                                            "condition": {
                                                "type": "AssemblyExpression",
                                                "functionName": "gt",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "index",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "DecimalNumber",
                                                        "value": "1"
                                                    }
                                                }
                                            },
                                            "post": {
                                                "type": "AssemblyBlock",
                                                "operations": {}
                                            },
                                            "body": {
                                                "type": "AssemblyBlock",
                                                "operations": {
                                                    "0": {
                                                        "type": "AssemblyLocalDefinition",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "siblingIndex"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "xor",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "index",
                                                                    "arguments": {}
                                                                },
                                                                "1": {
                                                                    "type": "DecimalNumber",
                                                                    "value": "1"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "1": {
                                                        "type": "AssemblyLocalDefinition",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "sibblingOffset"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "mulmod",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "siblingIndex",
                                                                    "arguments": {}
                                                                },
                                                                "1": {
                                                                    "type": "HexNumber",
                                                                    "value": "0x20"
                                                                },
                                                                "2": {
                                                                    "type": "HexNumber",
                                                                    "value": "0x40"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "2": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mstore",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "xor",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "HexNumber",
                                                                        "value": "0x20"
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "sibblingOffset",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mload",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "rdIdx",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "hashesPtr",
                                                                                "arguments": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "3": {
                                                        "type": "AssemblyAssignment",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "rdIdx"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "addmod",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "rdIdx",
                                                                    "arguments": {}
                                                                },
                                                                "1": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "slotSize",
                                                                    "arguments": {}
                                                                },
                                                                "2": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "queueSize",
                                                                    "arguments": {}
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "4": {
                                                        "type": "AssemblyLocalDefinition",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "newHashPtr"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "proofPtr",
                                                            "arguments": {}
                                                        }
                                                    },
                                                    "5": {
                                                        "type": "AssemblyAssignment",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "proofPtr"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "add",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "proofPtr",
                                                                    "arguments": {}
                                                                },
                                                                "1": {
                                                                    "type": "HexNumber",
                                                                    "value": "0x20"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "6": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mstore",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "wrIdx",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "queuePtr",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "div",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "index",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "DecimalNumber",
                                                                        "value": "2"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "7": {
                                                        "type": "AssemblyAssignment",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "index"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "mload",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "add",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "rdIdx",
                                                                            "arguments": {}
                                                                        },
                                                                        "1": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "queuePtr",
                                                                            "arguments": {}
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "8": {
                                                        "type": "AssemblyIf",
                                                        "condition": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "eq",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "index",
                                                                    "arguments": {}
                                                                },
                                                                "1": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "siblingIndex",
                                                                    "arguments": {}
                                                                }
                                                            }
                                                        },
                                                        "body": {
                                                            "type": "AssemblyBlock",
                                                            "operations": {
                                                                "0": {
                                                                    "type": "AssemblyAssignment",
                                                                    "names": {
                                                                        "0": {
                                                                            "type": "Identifier",
                                                                            "name": "newHashPtr"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "rdIdx",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "hashesPtr",
                                                                                "arguments": {}
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "1": {
                                                                    "type": "AssemblyAssignment",
                                                                    "names": {
                                                                        "0": {
                                                                            "type": "Identifier",
                                                                            "name": "proofPtr"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "sub",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "proofPtr",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "HexNumber",
                                                                                "value": "0x20"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "2": {
                                                                    "type": "AssemblyAssignment",
                                                                    "names": {
                                                                        "0": {
                                                                            "type": "Identifier",
                                                                            "name": "rdIdx"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "addmod",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "rdIdx",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "slotSize",
                                                                                "arguments": {}
                                                                            },
                                                                            "2": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "queueSize",
                                                                                "arguments": {}
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "3": {
                                                                    "type": "AssemblyAssignment",
                                                                    "names": {
                                                                        "0": {
                                                                            "type": "Identifier",
                                                                            "name": "index"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mload",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "rdIdx",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "queuePtr",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "9": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mstore",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "sibblingOffset",
                                                                "arguments": {}
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mload",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "newHashPtr",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "10": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mstore",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "wrIdx",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "hashesPtr",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "and",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "lhashMask",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "keccak256",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "HexNumber",
                                                                                "value": "0x00"
                                                                            },
                                                                            "1": {
                                                                                "type": "HexNumber",
                                                                                "value": "0x40"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "11": {
                                                        "type": "AssemblyAssignment",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "wrIdx"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "addmod",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "wrIdx",
                                                                    "arguments": {}
                                                                },
                                                                "1": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "slotSize",
                                                                    "arguments": {}
                                                                },
                                                                "2": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "queueSize",
                                                                    "arguments": {}
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "8": {
                                            "type": "AssemblyAssignment",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "hash"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "add",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "rdIdx",
                                                                "arguments": {}
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "hashesPtr",
                                                                "arguments": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "9": {
                                            "type": "AssemblyExpression",
                                            "functionName": "mstore",
                                            "arguments": {
                                                "0": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "channelPtr",
                                                    "arguments": {}
                                                },
                                                "1": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "proofPtr",
                                                    "arguments": {}
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "3": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "hash"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "root"
                                            }
                                        },
                                        "1": {
                                            "type": "stringLiteral",
                                            "value": "INVALID_MERKLE_PROOF"
                                        }
                                    },
                                    "names": {}
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                }
            },
            "kind": "contract"
        },
        "5": {
            "type": "ContractDefinition",
            "name": "PrimeFieldElement0",
            "baseContracts": {},
            "subNodes": {
                "0": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "K_MODULUS",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "0x800000000000011000000000000000000000000000000000000000000000001",
                                "subdenomination": null
                            },
                            "visibility": "internal",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "0x800000000000011000000000000000000000000000000000000000000000001",
                        "subdenomination": null
                    }
                },
                "1": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "K_MODULUS_MASK",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "0x0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
                                "subdenomination": null
                            },
                            "visibility": "internal",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "0x0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
                        "subdenomination": null
                    }
                },
                "2": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "K_MONTGOMERY_R",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "0x7fffffffffffdf0ffffffffffffffffffffffffffffffffffffffffffffffe1",
                                "subdenomination": null
                            },
                            "visibility": "internal",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "0x7fffffffffffdf0ffffffffffffffffffffffffffffffffffffffffffffffe1",
                        "subdenomination": null
                    }
                },
                "3": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "K_MONTGOMERY_R_INV",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "0x40000000000001100000000000012100000000000000000000000000000000",
                                "subdenomination": null
                            },
                            "visibility": "internal",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "0x40000000000001100000000000012100000000000000000000000000000000",
                        "subdenomination": null
                    }
                },
                "4": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "GENERATOR_VAL",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "3",
                                "subdenomination": null
                            },
                            "visibility": "internal",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "3",
                        "subdenomination": null
                    }
                },
                "5": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "ONE_VAL",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "1",
                                "subdenomination": null
                            },
                            "visibility": "internal",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "1",
                        "subdenomination": null
                    }
                },
                "6": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "GEN1024_VAL",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "0x659d83946a03edd72406af6711825f5653d9e35dc125289a206c054ec89c4f1",
                                "subdenomination": null
                            },
                            "visibility": "internal",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "0x659d83946a03edd72406af6711825f5653d9e35dc125289a206c054ec89c4f1",
                        "subdenomination": null
                    }
                },
                "7": {
                    "type": "FunctionDefinition",
                    "name": "fromMontgomery",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "val",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "res",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "InLineAssemblyStatement",
                                "language": null,
                                "body": {
                                    "type": "AssemblyBlock",
                                    "operations": {
                                        "0": {
                                            "type": "AssemblyAssignment",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "res"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mulmod",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "val",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "HexNumber",
                                                        "value": "0x40000000000001100000000000012100000000000000000000000000000000"
                                                    },
                                                    "2": {
                                                        "type": "HexNumber",
                                                        "value": "0x800000000000011000000000000000000000000000000000000000000000001"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "1": {
                                "type": "Identifier",
                                "name": "res"
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "8": {
                    "type": "FunctionDefinition",
                    "name": "fromMontgomeryBytes",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes32"
                                },
                                "name": "bs",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "res",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "Identifier",
                                            "name": "bs"
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "1": {
                                "type": "FunctionCall",
                                "expression": {
                                    "type": "Identifier",
                                    "name": "fromMontgomery"
                                },
                                "arguments": {
                                    "0": {
                                        "type": "Identifier",
                                        "name": "res"
                                    }
                                },
                                "names": {}
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "9": {
                    "type": "FunctionDefinition",
                    "name": "toMontgomeryInt",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "val",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "res",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "InLineAssemblyStatement",
                                "language": null,
                                "body": {
                                    "type": "AssemblyBlock",
                                    "operations": {
                                        "0": {
                                            "type": "AssemblyAssignment",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "res"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mulmod",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "val",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "HexNumber",
                                                        "value": "0x7fffffffffffdf0ffffffffffffffffffffffffffffffffffffffffffffffe1"
                                                    },
                                                    "2": {
                                                        "type": "HexNumber",
                                                        "value": "0x800000000000011000000000000000000000000000000000000000000000001"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "1": {
                                "type": "Identifier",
                                "name": "res"
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "10": {
                    "type": "FunctionDefinition",
                    "name": "fmul",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "a",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "res",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "InLineAssemblyStatement",
                                "language": null,
                                "body": {
                                    "type": "AssemblyBlock",
                                    "operations": {
                                        "0": {
                                            "type": "AssemblyAssignment",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "res"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mulmod",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "a",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "b",
                                                        "arguments": {}
                                                    },
                                                    "2": {
                                                        "type": "HexNumber",
                                                        "value": "0x800000000000011000000000000000000000000000000000000000000000001"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "1": {
                                "type": "Identifier",
                                "name": "res"
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "11": {
                    "type": "FunctionDefinition",
                    "name": "fadd",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "a",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "res",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "InLineAssemblyStatement",
                                "language": null,
                                "body": {
                                    "type": "AssemblyBlock",
                                    "operations": {
                                        "0": {
                                            "type": "AssemblyAssignment",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "res"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "addmod",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "a",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "b",
                                                        "arguments": {}
                                                    },
                                                    "2": {
                                                        "type": "HexNumber",
                                                        "value": "0x800000000000011000000000000000000000000000000000000000000000001"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "1": {
                                "type": "Identifier",
                                "name": "res"
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "12": {
                    "type": "FunctionDefinition",
                    "name": "fsub",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "a",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "res",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "InLineAssemblyStatement",
                                "language": null,
                                "body": {
                                    "type": "AssemblyBlock",
                                    "operations": {
                                        "0": {
                                            "type": "AssemblyAssignment",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "res"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "addmod",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "a",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "sub",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "HexNumber",
                                                                "value": "0x800000000000011000000000000000000000000000000000000000000000001"
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "b",
                                                                "arguments": {}
                                                            }
                                                        }
                                                    },
                                                    "2": {
                                                        "type": "HexNumber",
                                                        "value": "0x800000000000011000000000000000000000000000000000000000000000001"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "1": {
                                "type": "Identifier",
                                "name": "res"
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "13": {
                    "type": "FunctionDefinition",
                    "name": "fpow",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "val",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "exp",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "FunctionCall",
                                "expression": {
                                    "type": "Identifier",
                                    "name": "expmod"
                                },
                                "arguments": {
                                    "0": {
                                        "type": "Identifier",
                                        "name": "val"
                                    },
                                    "1": {
                                        "type": "Identifier",
                                        "name": "exp"
                                    },
                                    "2": {
                                        "type": "Identifier",
                                        "name": "K_MODULUS"
                                    }
                                },
                                "names": {}
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                "14": {
                    "type": "FunctionDefinition",
                    "name": "expmod",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "base",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "exponent",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "2": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "modulus",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "res",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "InLineAssemblyStatement",
                                "language": null,
                                "body": {
                                    "type": "AssemblyBlock",
                                    "operations": {
                                        "0": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "p"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": {
                                                    "0": {
                                                        "type": "HexNumber",
                                                        "value": "0x40"
                                                    }
                                                }
                                            }
                                        },
                                        "1": {
                                            "type": "AssemblyExpression",
                                            "functionName": "mstore",
                                            "arguments": {
                                                "0": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "p",
                                                    "arguments": {}
                                                },
                                                "1": {
                                                    "type": "HexNumber",
                                                    "value": "0x20"
                                                }
                                            }
                                        },
                                        "2": {
                                            "type": "AssemblyExpression",
                                            "functionName": "mstore",
                                            "arguments": {
                                                "0": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "add",
                                                    "arguments": {
                                                        "0": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "p",
                                                            "arguments": {}
                                                        },
                                                        "1": {
                                                            "type": "HexNumber",
                                                            "value": "0x20"
                                                        }
                                                    }
                                                },
                                                "1": {
                                                    "type": "HexNumber",
                                                    "value": "0x20"
                                                }
                                            }
                                        },
                                        "3": {
                                            "type": "AssemblyExpression",
                                            "functionName": "mstore",
                                            "arguments": {
                                                "0": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "add",
                                                    "arguments": {
                                                        "0": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "p",
                                                            "arguments": {}
                                                        },
                                                        "1": {
                                                            "type": "HexNumber",
                                                            "value": "0x40"
                                                        }
                                                    }
                                                },
                                                "1": {
                                                    "type": "HexNumber",
                                                    "value": "0x20"
                                                }
                                            }
                                        },
                                        "4": {
                                            "type": "AssemblyExpression",
                                            "functionName": "mstore",
                                            "arguments": {
                                                "0": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "add",
                                                    "arguments": {
                                                        "0": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "p",
                                                            "arguments": {}
                                                        },
                                                        "1": {
                                                            "type": "HexNumber",
                                                            "value": "0x60"
                                                        }
                                                    }
                                                },
                                                "1": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "base",
                                                    "arguments": {}
                                                }
                                            }
                                        },
                                        "5": {
                                            "type": "AssemblyExpression",
                                            "functionName": "mstore",
                                            "arguments": {
                                                "0": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "add",
                                                    "arguments": {
                                                        "0": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "p",
                                                            "arguments": {}
                                                        },
                                                        "1": {
                                                            "type": "HexNumber",
                                                            "value": "0x80"
                                                        }
                                                    }
                                                },
                                                "1": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "exponent",
                                                    "arguments": {}
                                                }
                                            }
                                        },
                                        "6": {
                                            "type": "AssemblyExpression",
                                            "functionName": "mstore",
                                            "arguments": {
                                                "0": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "add",
                                                    "arguments": {
                                                        "0": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "p",
                                                            "arguments": {}
                                                        },
                                                        "1": {
                                                            "type": "HexNumber",
                                                            "value": "0xa0"
                                                        }
                                                    }
                                                },
                                                "1": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "modulus",
                                                    "arguments": {}
                                                }
                                            }
                                        },
                                        "7": {
                                            "type": "AssemblyIf",
                                            "condition": {
                                                "type": "AssemblyExpression",
                                                "functionName": "iszero",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "staticcall",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "gas",
                                                                "arguments": {}
                                                            },
                                                            "1": {
                                                                "type": "HexNumber",
                                                                "value": "0x05"
                                                            },
                                                            "2": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "p",
                                                                "arguments": {}
                                                            },
                                                            "3": {
                                                                "type": "HexNumber",
                                                                "value": "0xc0"
                                                            },
                                                            "4": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "p",
                                                                "arguments": {}
                                                            },
                                                            "5": {
                                                                "type": "HexNumber",
                                                                "value": "0x20"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "body": {
                                                "type": "AssemblyBlock",
                                                "operations": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "revert",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "DecimalNumber",
                                                                "value": "0"
                                                            },
                                                            "1": {
                                                                "type": "DecimalNumber",
                                                                "value": "0"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "8": {
                                            "type": "AssemblyAssignment",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "res"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "p",
                                                        "arguments": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                "15": {
                    "type": "FunctionDefinition",
                    "name": "inverse",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "val",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "FunctionCall",
                                "expression": {
                                    "type": "Identifier",
                                    "name": "expmod"
                                },
                                "arguments": {
                                    "0": {
                                        "type": "Identifier",
                                        "name": "val"
                                    },
                                    "1": {
                                        "type": "BinaryOperation",
                                        "operator": "-",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "K_MODULUS"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "2",
                                            "subdenomination": null
                                        }
                                    },
                                    "2": {
                                        "type": "Identifier",
                                        "name": "K_MODULUS"
                                    }
                                },
                                "names": {}
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                }
            },
            "kind": "contract"
        },
        "6": {
            "type": "ContractDefinition",
            "name": "FactRegistry",
            "baseContracts": {
                "0": {
                    "type": "InheritanceSpecifier",
                    "baseName": {
                        "type": "UserDefinedTypeName",
                        "namePath": "IQueryableFactRegistry"
                    },
                    "arguments": null
                }
            },
            "subNodes": {
                "0": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes32"
                                },
                                "valueType": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                }
                            },
                            "name": "verifiedFact",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    },
                    "initialValue": null
                },
                "1": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "bool"
                            },
                            "name": "anyFactRegistered",
                            "expression": null,
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    },
                    "initialValue": null
                },
                "2": {
                    "type": "FunctionDefinition",
                    "name": "isValid",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes32"
                                },
                                "name": "fact",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "FunctionCall",
                                "expression": {
                                    "type": "Identifier",
                                    "name": "_factCheck"
                                },
                                "arguments": {
                                    "0": {
                                        "type": "Identifier",
                                        "name": "fact"
                                    }
                                },
                                "names": {}
                            }
                        }
                    },
                    "visibility": "external",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                "3": {
                    "type": "FunctionDefinition",
                    "name": "_factCheck",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes32"
                                },
                                "name": "fact",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "IndexAccess",
                                "base": {
                                    "type": "Identifier",
                                    "name": "verifiedFact"
                                },
                                "index": {
                                    "type": "Identifier",
                                    "name": "fact"
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                "4": {
                    "type": "FunctionDefinition",
                    "name": "registerFact",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes32"
                                },
                                "name": "factHash",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {},
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "verifiedFact"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "factHash"
                                        }
                                    },
                                    "right": {
                                        "type": "BooleanLiteral",
                                        "value": true
                                    }
                                }
                            },
                            "1": {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "UnaryOperation",
                                    "operator": "!",
                                    "subExpression": {
                                        "type": "Identifier",
                                        "name": "anyFactRegistered"
                                    },
                                    "isPrefix": true
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": {
                                        "0": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "anyFactRegistered"
                                                },
                                                "right": {
                                                    "type": "BooleanLiteral",
                                                    "value": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "FalseBody": null
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                "5": {
                    "type": "FunctionDefinition",
                    "name": "hasRegisteredFact",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {}
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "Identifier",
                                "name": "anyFactRegistered"
                            }
                        }
                    },
                    "visibility": "external",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                }
            },
            "kind": "contract"
        },
        "7": {
            "type": "ContractDefinition",
            "name": "FriLayer",
            "baseContracts": {
                "0": {
                    "type": "InheritanceSpecifier",
                    "baseName": {
                        "type": "UserDefinedTypeName",
                        "namePath": "MerkleVerifier"
                    },
                    "arguments": null
                },
                "1": {
                    "type": "InheritanceSpecifier",
                    "baseName": {
                        "type": "UserDefinedTypeName",
                        "namePath": "PrimeFieldElement0"
                    },
                    "arguments": null
                }
            },
            "subNodes": {
                "0": {
                    "type": "EventDefinition",
                    "name": "LogGas",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "string"
                                },
                                "name": "name",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "val",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "isAnonymous": false
                },
                "1": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "FRI_MAX_FRI_STEP",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "4",
                                "subdenomination": null
                            },
                            "visibility": "internal",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "4",
                        "subdenomination": null
                    }
                },
                "2": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "MAX_COSET_SIZE",
                            "expression": {
                                "type": "BinaryOperation",
                                "operator": "**",
                                "left": {
                                    "type": "NumberLiteral",
                                    "number": "2",
                                    "subdenomination": null
                                },
                                "right": {
                                    "type": "Identifier",
                                    "name": "FRI_MAX_FRI_STEP"
                                }
                            },
                            "visibility": "internal",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "BinaryOperation",
                        "operator": "**",
                        "left": {
                            "type": "NumberLiteral",
                            "number": "2",
                            "subdenomination": null
                        },
                        "right": {
                            "type": "Identifier",
                            "name": "FRI_MAX_FRI_STEP"
                        }
                    }
                },
                "3": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "FRI_GROUP_GEN",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "0x5ec467b88826aba4537602d514425f3b0bdf467bbf302458337c45f6021e539",
                                "subdenomination": null
                            },
                            "visibility": "internal",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "0x5ec467b88826aba4537602d514425f3b0bdf467bbf302458337c45f6021e539",
                        "subdenomination": null
                    }
                },
                "4": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "FRI_GROUP_SIZE",
                            "expression": {
                                "type": "BinaryOperation",
                                "operator": "*",
                                "left": {
                                    "type": "NumberLiteral",
                                    "number": "0x20",
                                    "subdenomination": null
                                },
                                "right": {
                                    "type": "Identifier",
                                    "name": "MAX_COSET_SIZE"
                                }
                            },
                            "visibility": "internal",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                            "type": "NumberLiteral",
                            "number": "0x20",
                            "subdenomination": null
                        },
                        "right": {
                            "type": "Identifier",
                            "name": "MAX_COSET_SIZE"
                        }
                    }
                },
                "5": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "FRI_CTX_TO_COSET_EVALUATIONS_OFFSET",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "0",
                                "subdenomination": null
                            },
                            "visibility": "internal",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                    }
                },
                "6": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "FRI_CTX_TO_FRI_GROUP_OFFSET",
                            "expression": {
                                "type": "Identifier",
                                "name": "FRI_GROUP_SIZE"
                            },
                            "visibility": "internal",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "Identifier",
                        "name": "FRI_GROUP_SIZE"
                    }
                },
                "7": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "FRI_CTX_TO_FRI_HALF_INV_GROUP_OFFSET",
                            "expression": {
                                "type": "BinaryOperation",
                                "operator": "+",
                                "left": {
                                    "type": "Identifier",
                                    "name": "FRI_CTX_TO_FRI_GROUP_OFFSET"
                                },
                                "right": {
                                    "type": "Identifier",
                                    "name": "FRI_GROUP_SIZE"
                                }
                            },
                            "visibility": "internal",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                            "type": "Identifier",
                            "name": "FRI_CTX_TO_FRI_GROUP_OFFSET"
                        },
                        "right": {
                            "type": "Identifier",
                            "name": "FRI_GROUP_SIZE"
                        }
                    }
                },
                "8": {
                    "type": "StateVariableDeclaration",
                    "variables": {
                        "0": {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "FRI_CTX_SIZE",
                            "expression": {
                                "type": "BinaryOperation",
                                "operator": "+",
                                "left": {
                                    "type": "Identifier",
                                    "name": "FRI_CTX_TO_FRI_HALF_INV_GROUP_OFFSET"
                                },
                                "right": {
                                    "type": "TupleExpression",
                                    "components": {
                                        "0": {
                                            "type": "BinaryOperation",
                                            "operator": "/",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "FRI_GROUP_SIZE"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            }
                                        }
                                    },
                                    "isArray": false
                                }
                            },
                            "visibility": "internal",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    },
                    "initialValue": {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                            "type": "Identifier",
                            "name": "FRI_CTX_TO_FRI_HALF_INV_GROUP_OFFSET"
                        },
                        "right": {
                            "type": "TupleExpression",
                            "components": {
                                "0": {
                                    "type": "BinaryOperation",
                                    "operator": "/",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "FRI_GROUP_SIZE"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "2",
                                        "subdenomination": null
                                    }
                                }
                            },
                            "isArray": false
                        }
                    }
                },
                "9": {
                    "type": "FunctionDefinition",
                    "name": "nextLayerElementFromTwoPreviousLayerElements",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "fX",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "fMinusX",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "2": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "evalPoint",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "3": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "xInv",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "res",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "InLineAssemblyStatement",
                                "language": null,
                                "body": {
                                    "type": "AssemblyBlock",
                                    "operations": {
                                        "0": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "PRIME"
                                                }
                                            },
                                            "expression": {
                                                "type": "HexNumber",
                                                "value": "0x800000000000011000000000000000000000000000000000000000000000001"
                                            }
                                        },
                                        "1": {
                                            "type": "AssemblyAssignment",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "res"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "addmod",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "add",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "fX",
                                                                "arguments": {}
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "fMinusX",
                                                                "arguments": {}
                                                            }
                                                        }
                                                    },
                                                    "1": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mulmod",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mulmod",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "evalPoint",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "xInv",
                                                                        "arguments": {}
                                                                    },
                                                                    "2": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "PRIME",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "fX",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "sub",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "PRIME",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "fMinusX",
                                                                                "arguments": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "2": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "PRIME",
                                                                "arguments": {}
                                                            }
                                                        }
                                                    },
                                                    "2": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "PRIME",
                                                        "arguments": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "10": {
                    "type": "FunctionDefinition",
                    "name": "do2FriSteps",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "friHalfInvGroupPtr",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "evaluationsOnCosetPtr",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "2": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "cosetOffset_",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "3": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "friEvalPoint",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "nextLayerValue",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "nextXInv",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "InLineAssemblyStatement",
                                "language": null,
                                "body": {
                                    "type": "AssemblyBlock",
                                    "operations": {
                                        "0": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "PRIME"
                                                }
                                            },
                                            "expression": {
                                                "type": "HexNumber",
                                                "value": "0x800000000000011000000000000000000000000000000000000000000000001"
                                            }
                                        },
                                        "1": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "friEvalPointDivByX"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mulmod",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "friEvalPoint",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "cosetOffset_",
                                                        "arguments": {}
                                                    },
                                                    "2": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "PRIME",
                                                        "arguments": {}
                                                    }
                                                }
                                            }
                                        },
                                        "2": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "f0"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "evaluationsOnCosetPtr",
                                                        "arguments": {}
                                                    }
                                                }
                                            }
                                        },
                                        "3": {
                                            "type": "AssemblyBlock",
                                            "operations": {
                                                "0": {
                                                    "type": "AssemblyLocalDefinition",
                                                    "names": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "f1"
                                                        }
                                                    },
                                                    "expression": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mload",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "evaluationsOnCosetPtr",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "HexNumber",
                                                                        "value": "0x20"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "1": {
                                                    "type": "AssemblyAssignment",
                                                    "names": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "f0"
                                                        }
                                                    },
                                                    "expression": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "add",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "f0",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "f1",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mulmod",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "friEvalPointDivByX",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "f0",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "sub",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "PRIME",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "f1",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "2": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "PRIME",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "4": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "f2"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "add",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "evaluationsOnCosetPtr",
                                                                "arguments": {}
                                                            },
                                                            "1": {
                                                                "type": "HexNumber",
                                                                "value": "0x40"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "5": {
                                            "type": "AssemblyBlock",
                                            "operations": {
                                                "0": {
                                                    "type": "AssemblyLocalDefinition",
                                                    "names": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "f3"
                                                        }
                                                    },
                                                    "expression": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mload",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "evaluationsOnCosetPtr",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "HexNumber",
                                                                        "value": "0x60"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "1": {
                                                    "type": "AssemblyAssignment",
                                                    "names": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "f2"
                                                        }
                                                    },
                                                    "expression": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "addmod",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "f2",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "f3",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mulmod",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "f2",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "sub",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "PRIME",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "f3",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mulmod",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "mload",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "add",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "friHalfInvGroupPtr",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "HexNumber",
                                                                                                "value": "0x20"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "friEvalPointDivByX",
                                                                                "arguments": {}
                                                                            },
                                                                            "2": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "PRIME",
                                                                                "arguments": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "2": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "PRIME",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            },
                                                            "2": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "PRIME",
                                                                "arguments": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "6": {
                                            "type": "AssemblyBlock",
                                            "operations": {
                                                "0": {
                                                    "type": "AssemblyLocalDefinition",
                                                    "names": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "newXInv"
                                                        }
                                                    },
                                                    "expression": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mulmod",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "cosetOffset_",
                                                                "arguments": {}
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "cosetOffset_",
                                                                "arguments": {}
                                                            },
                                                            "2": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "PRIME",
                                                                "arguments": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "1": {
                                                    "type": "AssemblyAssignment",
                                                    "names": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "nextXInv"
                                                        }
                                                    },
                                                    "expression": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mulmod",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "newXInv",
                                                                "arguments": {}
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "newXInv",
                                                                "arguments": {}
                                                            },
                                                            "2": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "PRIME",
                                                                "arguments": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "7": {
                                            "type": "AssemblyAssignment",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "nextLayerValue"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "addmod",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "add",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "f0",
                                                                "arguments": {}
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "f2",
                                                                "arguments": {}
                                                            }
                                                        }
                                                    },
                                                    "1": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mulmod",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mulmod",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "friEvalPointDivByX",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "friEvalPointDivByX",
                                                                        "arguments": {}
                                                                    },
                                                                    "2": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "PRIME",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "f0",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "sub",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "PRIME",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "f2",
                                                                                "arguments": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "2": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "PRIME",
                                                                "arguments": {}
                                                            }
                                                        }
                                                    },
                                                    "2": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "PRIME",
                                                        "arguments": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "11": {
                    "type": "FunctionDefinition",
                    "name": "do3FriSteps",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "friHalfInvGroupPtr",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "evaluationsOnCosetPtr",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "2": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "cosetOffset_",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "3": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "friEvalPoint",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "nextLayerValue",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "nextXInv",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "InLineAssemblyStatement",
                                "language": null,
                                "body": {
                                    "type": "AssemblyBlock",
                                    "operations": {
                                        "0": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "PRIME"
                                                }
                                            },
                                            "expression": {
                                                "type": "HexNumber",
                                                "value": "0x800000000000011000000000000000000000000000000000000000000000001"
                                            }
                                        },
                                        "1": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "MPRIME"
                                                }
                                            },
                                            "expression": {
                                                "type": "HexNumber",
                                                "value": "0x8000000000000110000000000000000000000000000000000000000000000010"
                                            }
                                        },
                                        "2": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "f0"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "evaluationsOnCosetPtr",
                                                        "arguments": {}
                                                    }
                                                }
                                            }
                                        },
                                        "3": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "friEvalPointDivByX"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mulmod",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "friEvalPoint",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "cosetOffset_",
                                                        "arguments": {}
                                                    },
                                                    "2": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "PRIME",
                                                        "arguments": {}
                                                    }
                                                }
                                            }
                                        },
                                        "4": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "friEvalPointDivByXSquared"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mulmod",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "friEvalPointDivByX",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "friEvalPointDivByX",
                                                        "arguments": {}
                                                    },
                                                    "2": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "PRIME",
                                                        "arguments": {}
                                                    }
                                                }
                                            }
                                        },
                                        "5": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "imaginaryUnit"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "add",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "friHalfInvGroupPtr",
                                                                "arguments": {}
                                                            },
                                                            "1": {
                                                                "type": "HexNumber",
                                                                "value": "0x20"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "6": {
                                            "type": "AssemblyBlock",
                                            "operations": {
                                                "0": {
                                                    "type": "AssemblyLocalDefinition",
                                                    "names": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "f1"
                                                        }
                                                    },
                                                    "expression": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mload",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "evaluationsOnCosetPtr",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "HexNumber",
                                                                        "value": "0x20"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "1": {
                                                    "type": "AssemblyAssignment",
                                                    "names": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "f0"
                                                        }
                                                    },
                                                    "expression": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "add",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "f0",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "f1",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mulmod",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "friEvalPointDivByX",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "f0",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "sub",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "PRIME",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "f1",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "2": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "PRIME",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "7": {
                                            "type": "AssemblyBlock",
                                            "operations": {
                                                "0": {
                                                    "type": "AssemblyLocalDefinition",
                                                    "names": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "f2"
                                                        }
                                                    },
                                                    "expression": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mload",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "evaluationsOnCosetPtr",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "HexNumber",
                                                                        "value": "0x40"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "1": {
                                                    "type": "AssemblyBlock",
                                                    "operations": {
                                                        "0": {
                                                            "type": "AssemblyLocalDefinition",
                                                            "names": {
                                                                "0": {
                                                                    "type": "Identifier",
                                                                    "name": "f3"
                                                                }
                                                            },
                                                            "expression": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mload",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "evaluationsOnCosetPtr",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "HexNumber",
                                                                                "value": "0x60"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "1": {
                                                            "type": "AssemblyAssignment",
                                                            "names": {
                                                                "0": {
                                                                    "type": "Identifier",
                                                                    "name": "f2"
                                                                }
                                                            },
                                                            "expression": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "f2",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "f3",
                                                                                "arguments": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mulmod",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "f2",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "sub",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "PRIME",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "f3",
                                                                                                "arguments": {}
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "mulmod",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "friEvalPointDivByX",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "imaginaryUnit",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "2": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "PRIME",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "2": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "PRIME",
                                                                                "arguments": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "2": {
                                                    "type": "AssemblyAssignment",
                                                    "names": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "f0"
                                                        }
                                                    },
                                                    "expression": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "add",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "f0",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "f2",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mulmod",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "friEvalPointDivByXSquared",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "f0",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "sub",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "MPRIME",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "f2",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "2": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "PRIME",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "8": {
                                            "type": "AssemblyBlock",
                                            "operations": {
                                                "0": {
                                                    "type": "AssemblyLocalDefinition",
                                                    "names": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "f4"
                                                        }
                                                    },
                                                    "expression": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mload",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "evaluationsOnCosetPtr",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "HexNumber",
                                                                        "value": "0x80"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "1": {
                                                    "type": "AssemblyBlock",
                                                    "operations": {
                                                        "0": {
                                                            "type": "AssemblyLocalDefinition",
                                                            "names": {
                                                                "0": {
                                                                    "type": "Identifier",
                                                                    "name": "friEvalPointDivByX2"
                                                                }
                                                            },
                                                            "expression": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mulmod",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "friEvalPointDivByX",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mload",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "friHalfInvGroupPtr",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "HexNumber",
                                                                                        "value": "0x40"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "2": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "PRIME",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "1": {
                                                            "type": "AssemblyBlock",
                                                            "operations": {
                                                                "0": {
                                                                    "type": "AssemblyLocalDefinition",
                                                                    "names": {
                                                                        "0": {
                                                                            "type": "Identifier",
                                                                            "name": "f5"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mload",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "evaluationsOnCosetPtr",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "HexNumber",
                                                                                        "value": "0xa0"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "1": {
                                                                    "type": "AssemblyAssignment",
                                                                    "names": {
                                                                        "0": {
                                                                            "type": "Identifier",
                                                                            "name": "f4"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "f4",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "f5",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "mulmod",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "friEvalPointDivByX2",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "add",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "f4",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "sub",
                                                                                                "arguments": {
                                                                                                    "0": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "PRIME",
                                                                                                        "arguments": {}
                                                                                                    },
                                                                                                    "1": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "f5",
                                                                                                        "arguments": {}
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "2": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "PRIME",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "2": {
                                                            "type": "AssemblyLocalDefinition",
                                                            "names": {
                                                                "0": {
                                                                    "type": "Identifier",
                                                                    "name": "f6"
                                                                }
                                                            },
                                                            "expression": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mload",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "evaluationsOnCosetPtr",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "HexNumber",
                                                                                "value": "0xc0"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "3": {
                                                            "type": "AssemblyBlock",
                                                            "operations": {
                                                                "0": {
                                                                    "type": "AssemblyLocalDefinition",
                                                                    "names": {
                                                                        "0": {
                                                                            "type": "Identifier",
                                                                            "name": "f7"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mload",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "evaluationsOnCosetPtr",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "HexNumber",
                                                                                        "value": "0xe0"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "1": {
                                                                    "type": "AssemblyAssignment",
                                                                    "names": {
                                                                        "0": {
                                                                            "type": "Identifier",
                                                                            "name": "f6"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "f6",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "f7",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "mulmod",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "add",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "f6",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "sub",
                                                                                                "arguments": {
                                                                                                    "0": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "PRIME",
                                                                                                        "arguments": {}
                                                                                                    },
                                                                                                    "1": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "f7",
                                                                                                        "arguments": {}
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "mulmod",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "friEvalPointDivByX2",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "imaginaryUnit",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "2": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "PRIME",
                                                                                                "arguments": {}
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "2": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "PRIME",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "4": {
                                                            "type": "AssemblyAssignment",
                                                            "names": {
                                                                "0": {
                                                                    "type": "Identifier",
                                                                    "name": "f4"
                                                                }
                                                            },
                                                            "expression": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "f4",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "f6",
                                                                                "arguments": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mulmod",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "mulmod",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "friEvalPointDivByX2",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "friEvalPointDivByX2",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "2": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "PRIME",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "f4",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "sub",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "MPRIME",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "f6",
                                                                                                "arguments": {}
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "2": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "PRIME",
                                                                                "arguments": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "2": {
                                                    "type": "AssemblyAssignment",
                                                    "names": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "nextLayerValue"
                                                        }
                                                    },
                                                    "expression": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "addmod",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "f0",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "f4",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mulmod",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mulmod",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "friEvalPointDivByXSquared",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "friEvalPointDivByXSquared",
                                                                                "arguments": {}
                                                                            },
                                                                            "2": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "PRIME",
                                                                                "arguments": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "f0",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "sub",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "MPRIME",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "f4",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "2": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "PRIME",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            },
                                                            "2": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "PRIME",
                                                                "arguments": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "9": {
                                            "type": "AssemblyBlock",
                                            "operations": {
                                                "0": {
                                                    "type": "AssemblyLocalDefinition",
                                                    "names": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "xInv2"
                                                        }
                                                    },
                                                    "expression": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mulmod",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "cosetOffset_",
                                                                "arguments": {}
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "cosetOffset_",
                                                                "arguments": {}
                                                            },
                                                            "2": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "PRIME",
                                                                "arguments": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "1": {
                                                    "type": "AssemblyLocalDefinition",
                                                    "names": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "xInv4"
                                                        }
                                                    },
                                                    "expression": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mulmod",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "xInv2",
                                                                "arguments": {}
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "xInv2",
                                                                "arguments": {}
                                                            },
                                                            "2": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "PRIME",
                                                                "arguments": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "2": {
                                                    "type": "AssemblyAssignment",
                                                    "names": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "nextXInv"
                                                        }
                                                    },
                                                    "expression": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mulmod",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "xInv4",
                                                                "arguments": {}
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "xInv4",
                                                                "arguments": {}
                                                            },
                                                            "2": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "PRIME",
                                                                "arguments": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "12": {
                    "type": "FunctionDefinition",
                    "name": "do4FriSteps",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "friHalfInvGroupPtr",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "evaluationsOnCosetPtr",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "2": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "cosetOffset_",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "3": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "friEvalPoint",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "nextLayerValue",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "nextXInv",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "InLineAssemblyStatement",
                                "language": null,
                                "body": {
                                    "type": "AssemblyBlock",
                                    "operations": {
                                        "0": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "friEvalPointDivByXTessed"
                                                }
                                            },
                                            "expression": null
                                        },
                                        "1": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "PRIME"
                                                }
                                            },
                                            "expression": {
                                                "type": "HexNumber",
                                                "value": "0x800000000000011000000000000000000000000000000000000000000000001"
                                            }
                                        },
                                        "2": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "MPRIME"
                                                }
                                            },
                                            "expression": {
                                                "type": "HexNumber",
                                                "value": "0x8000000000000110000000000000000000000000000000000000000000000010"
                                            }
                                        },
                                        "3": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "f0"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "evaluationsOnCosetPtr",
                                                        "arguments": {}
                                                    }
                                                }
                                            }
                                        },
                                        "4": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "friEvalPointDivByX"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mulmod",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "friEvalPoint",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "cosetOffset_",
                                                        "arguments": {}
                                                    },
                                                    "2": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "PRIME",
                                                        "arguments": {}
                                                    }
                                                }
                                            }
                                        },
                                        "5": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "imaginaryUnit"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "add",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "friHalfInvGroupPtr",
                                                                "arguments": {}
                                                            },
                                                            "1": {
                                                                "type": "HexNumber",
                                                                "value": "0x20"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "6": {
                                            "type": "AssemblyBlock",
                                            "operations": {
                                                "0": {
                                                    "type": "AssemblyLocalDefinition",
                                                    "names": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "f1"
                                                        }
                                                    },
                                                    "expression": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mload",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "evaluationsOnCosetPtr",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "HexNumber",
                                                                        "value": "0x20"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "1": {
                                                    "type": "AssemblyAssignment",
                                                    "names": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "f0"
                                                        }
                                                    },
                                                    "expression": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "add",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "f0",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "f1",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mulmod",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "friEvalPointDivByX",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "f0",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "sub",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "PRIME",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "f1",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "2": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "PRIME",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "7": {
                                            "type": "AssemblyBlock",
                                            "operations": {
                                                "0": {
                                                    "type": "AssemblyLocalDefinition",
                                                    "names": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "f2"
                                                        }
                                                    },
                                                    "expression": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mload",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "evaluationsOnCosetPtr",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "HexNumber",
                                                                        "value": "0x40"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "1": {
                                                    "type": "AssemblyBlock",
                                                    "operations": {
                                                        "0": {
                                                            "type": "AssemblyLocalDefinition",
                                                            "names": {
                                                                "0": {
                                                                    "type": "Identifier",
                                                                    "name": "f3"
                                                                }
                                                            },
                                                            "expression": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mload",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "evaluationsOnCosetPtr",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "HexNumber",
                                                                                "value": "0x60"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "1": {
                                                            "type": "AssemblyAssignment",
                                                            "names": {
                                                                "0": {
                                                                    "type": "Identifier",
                                                                    "name": "f2"
                                                                }
                                                            },
                                                            "expression": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "f2",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "f3",
                                                                                "arguments": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mulmod",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "f2",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "sub",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "PRIME",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "f3",
                                                                                                "arguments": {}
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "mulmod",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "friEvalPointDivByX",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "imaginaryUnit",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "2": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "PRIME",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "2": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "PRIME",
                                                                                "arguments": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "2": {
                                                    "type": "AssemblyBlock",
                                                    "operations": {
                                                        "0": {
                                                            "type": "AssemblyLocalDefinition",
                                                            "names": {
                                                                "0": {
                                                                    "type": "Identifier",
                                                                    "name": "friEvalPointDivByXSquared"
                                                                }
                                                            },
                                                            "expression": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mulmod",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "friEvalPointDivByX",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "friEvalPointDivByX",
                                                                        "arguments": {}
                                                                    },
                                                                    "2": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "PRIME",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "1": {
                                                            "type": "AssemblyAssignment",
                                                            "names": {
                                                                "0": {
                                                                    "type": "Identifier",
                                                                    "name": "friEvalPointDivByXTessed"
                                                                }
                                                            },
                                                            "expression": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mulmod",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "friEvalPointDivByXSquared",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "friEvalPointDivByXSquared",
                                                                        "arguments": {}
                                                                    },
                                                                    "2": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "PRIME",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "2": {
                                                            "type": "AssemblyAssignment",
                                                            "names": {
                                                                "0": {
                                                                    "type": "Identifier",
                                                                    "name": "f0"
                                                                }
                                                            },
                                                            "expression": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "f0",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "f2",
                                                                                "arguments": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mulmod",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "friEvalPointDivByXSquared",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "f0",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "sub",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "MPRIME",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "f2",
                                                                                                "arguments": {}
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "2": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "PRIME",
                                                                                "arguments": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "8": {
                                            "type": "AssemblyBlock",
                                            "operations": {
                                                "0": {
                                                    "type": "AssemblyLocalDefinition",
                                                    "names": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "f4"
                                                        }
                                                    },
                                                    "expression": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mload",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "evaluationsOnCosetPtr",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "HexNumber",
                                                                        "value": "0x80"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "1": {
                                                    "type": "AssemblyBlock",
                                                    "operations": {
                                                        "0": {
                                                            "type": "AssemblyLocalDefinition",
                                                            "names": {
                                                                "0": {
                                                                    "type": "Identifier",
                                                                    "name": "friEvalPointDivByX2"
                                                                }
                                                            },
                                                            "expression": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mulmod",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "friEvalPointDivByX",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mload",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "friHalfInvGroupPtr",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "HexNumber",
                                                                                        "value": "0x40"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "2": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "PRIME",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "1": {
                                                            "type": "AssemblyBlock",
                                                            "operations": {
                                                                "0": {
                                                                    "type": "AssemblyLocalDefinition",
                                                                    "names": {
                                                                        "0": {
                                                                            "type": "Identifier",
                                                                            "name": "f5"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mload",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "evaluationsOnCosetPtr",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "HexNumber",
                                                                                        "value": "0xa0"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "1": {
                                                                    "type": "AssemblyAssignment",
                                                                    "names": {
                                                                        "0": {
                                                                            "type": "Identifier",
                                                                            "name": "f4"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "f4",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "f5",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "mulmod",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "friEvalPointDivByX2",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "add",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "f4",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "sub",
                                                                                                "arguments": {
                                                                                                    "0": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "PRIME",
                                                                                                        "arguments": {}
                                                                                                    },
                                                                                                    "1": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "f5",
                                                                                                        "arguments": {}
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "2": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "PRIME",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "2": {
                                                            "type": "AssemblyLocalDefinition",
                                                            "names": {
                                                                "0": {
                                                                    "type": "Identifier",
                                                                    "name": "f6"
                                                                }
                                                            },
                                                            "expression": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mload",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "evaluationsOnCosetPtr",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "HexNumber",
                                                                                "value": "0xc0"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "3": {
                                                            "type": "AssemblyBlock",
                                                            "operations": {
                                                                "0": {
                                                                    "type": "AssemblyLocalDefinition",
                                                                    "names": {
                                                                        "0": {
                                                                            "type": "Identifier",
                                                                            "name": "f7"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mload",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "evaluationsOnCosetPtr",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "HexNumber",
                                                                                        "value": "0xe0"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "1": {
                                                                    "type": "AssemblyAssignment",
                                                                    "names": {
                                                                        "0": {
                                                                            "type": "Identifier",
                                                                            "name": "f6"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "f6",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "f7",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "mulmod",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "add",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "f6",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "sub",
                                                                                                "arguments": {
                                                                                                    "0": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "PRIME",
                                                                                                        "arguments": {}
                                                                                                    },
                                                                                                    "1": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "f7",
                                                                                                        "arguments": {}
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "mulmod",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "friEvalPointDivByX2",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "imaginaryUnit",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "2": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "PRIME",
                                                                                                "arguments": {}
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "2": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "PRIME",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "4": {
                                                            "type": "AssemblyAssignment",
                                                            "names": {
                                                                "0": {
                                                                    "type": "Identifier",
                                                                    "name": "f4"
                                                                }
                                                            },
                                                            "expression": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "f4",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "f6",
                                                                                "arguments": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mulmod",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "mulmod",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "friEvalPointDivByX2",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "friEvalPointDivByX2",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "2": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "PRIME",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "f4",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "sub",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "MPRIME",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "f6",
                                                                                                "arguments": {}
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "2": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "PRIME",
                                                                                "arguments": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "2": {
                                                    "type": "AssemblyAssignment",
                                                    "names": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "f0"
                                                        }
                                                    },
                                                    "expression": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "add",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "f0",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "f4",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mulmod",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "friEvalPointDivByXTessed",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "f0",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "sub",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "MPRIME",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "f4",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "2": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "PRIME",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "9": {
                                            "type": "AssemblyBlock",
                                            "operations": {
                                                "0": {
                                                    "type": "AssemblyLocalDefinition",
                                                    "names": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "f8"
                                                        }
                                                    },
                                                    "expression": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mload",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "evaluationsOnCosetPtr",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "HexNumber",
                                                                        "value": "0x100"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "1": {
                                                    "type": "AssemblyBlock",
                                                    "operations": {
                                                        "0": {
                                                            "type": "AssemblyLocalDefinition",
                                                            "names": {
                                                                "0": {
                                                                    "type": "Identifier",
                                                                    "name": "friEvalPointDivByX4"
                                                                }
                                                            },
                                                            "expression": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mulmod",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "friEvalPointDivByX",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mload",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "friHalfInvGroupPtr",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "HexNumber",
                                                                                        "value": "0x80"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "2": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "PRIME",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "1": {
                                                            "type": "AssemblyBlock",
                                                            "operations": {
                                                                "0": {
                                                                    "type": "AssemblyLocalDefinition",
                                                                    "names": {
                                                                        "0": {
                                                                            "type": "Identifier",
                                                                            "name": "f9"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mload",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "evaluationsOnCosetPtr",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "HexNumber",
                                                                                        "value": "0x120"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "1": {
                                                                    "type": "AssemblyAssignment",
                                                                    "names": {
                                                                        "0": {
                                                                            "type": "Identifier",
                                                                            "name": "f8"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "f8",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "f9",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "mulmod",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "friEvalPointDivByX4",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "add",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "f8",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "sub",
                                                                                                "arguments": {
                                                                                                    "0": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "PRIME",
                                                                                                        "arguments": {}
                                                                                                    },
                                                                                                    "1": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "f9",
                                                                                                        "arguments": {}
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "2": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "PRIME",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "2": {
                                                            "type": "AssemblyLocalDefinition",
                                                            "names": {
                                                                "0": {
                                                                    "type": "Identifier",
                                                                    "name": "f10"
                                                                }
                                                            },
                                                            "expression": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mload",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "evaluationsOnCosetPtr",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "HexNumber",
                                                                                "value": "0x140"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "3": {
                                                            "type": "AssemblyBlock",
                                                            "operations": {
                                                                "0": {
                                                                    "type": "AssemblyLocalDefinition",
                                                                    "names": {
                                                                        "0": {
                                                                            "type": "Identifier",
                                                                            "name": "f11"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mload",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "evaluationsOnCosetPtr",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "HexNumber",
                                                                                        "value": "0x160"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "1": {
                                                                    "type": "AssemblyAssignment",
                                                                    "names": {
                                                                        "0": {
                                                                            "type": "Identifier",
                                                                            "name": "f10"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "f10",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "f11",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "mulmod",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "add",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "f10",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "sub",
                                                                                                "arguments": {
                                                                                                    "0": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "PRIME",
                                                                                                        "arguments": {}
                                                                                                    },
                                                                                                    "1": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "f11",
                                                                                                        "arguments": {}
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "mulmod",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "friEvalPointDivByX4",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "imaginaryUnit",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "2": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "PRIME",
                                                                                                "arguments": {}
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "2": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "PRIME",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "4": {
                                                            "type": "AssemblyAssignment",
                                                            "names": {
                                                                "0": {
                                                                    "type": "Identifier",
                                                                    "name": "f8"
                                                                }
                                                            },
                                                            "expression": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "f8",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "f10",
                                                                                "arguments": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mulmod",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "mulmod",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "friEvalPointDivByX4",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "friEvalPointDivByX4",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "2": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "PRIME",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "f8",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "sub",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "MPRIME",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "f10",
                                                                                                "arguments": {}
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "2": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "PRIME",
                                                                                "arguments": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "2": {
                                                    "type": "AssemblyBlock",
                                                    "operations": {
                                                        "0": {
                                                            "type": "AssemblyLocalDefinition",
                                                            "names": {
                                                                "0": {
                                                                    "type": "Identifier",
                                                                    "name": "f12"
                                                                }
                                                            },
                                                            "expression": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mload",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "evaluationsOnCosetPtr",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "HexNumber",
                                                                                "value": "0x180"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "1": {
                                                            "type": "AssemblyBlock",
                                                            "operations": {
                                                                "0": {
                                                                    "type": "AssemblyLocalDefinition",
                                                                    "names": {
                                                                        "0": {
                                                                            "type": "Identifier",
                                                                            "name": "friEvalPointDivByX6"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mulmod",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "friEvalPointDivByX",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "mload",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "add",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "friHalfInvGroupPtr",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "HexNumber",
                                                                                                "value": "0xc0"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "2": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "PRIME",
                                                                                "arguments": {}
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "1": {
                                                                    "type": "AssemblyBlock",
                                                                    "operations": {
                                                                        "0": {
                                                                            "type": "AssemblyLocalDefinition",
                                                                            "names": {
                                                                                "0": {
                                                                                    "type": "Identifier",
                                                                                    "name": "f13"
                                                                                }
                                                                            },
                                                                            "expression": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "mload",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "add",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "evaluationsOnCosetPtr",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "HexNumber",
                                                                                                "value": "0x1a0"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "1": {
                                                                            "type": "AssemblyAssignment",
                                                                            "names": {
                                                                                "0": {
                                                                                    "type": "Identifier",
                                                                                    "name": "f12"
                                                                                }
                                                                            },
                                                                            "expression": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "add",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "f12",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "f13",
                                                                                                "arguments": {}
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "mulmod",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "friEvalPointDivByX6",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "add",
                                                                                                "arguments": {
                                                                                                    "0": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "f12",
                                                                                                        "arguments": {}
                                                                                                    },
                                                                                                    "1": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "sub",
                                                                                                        "arguments": {
                                                                                                            "0": {
                                                                                                                "type": "AssemblyExpression",
                                                                                                                "functionName": "PRIME",
                                                                                                                "arguments": {}
                                                                                                            },
                                                                                                            "1": {
                                                                                                                "type": "AssemblyExpression",
                                                                                                                "functionName": "f13",
                                                                                                                "arguments": {}
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "2": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "PRIME",
                                                                                                "arguments": {}
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "2": {
                                                                    "type": "AssemblyLocalDefinition",
                                                                    "names": {
                                                                        "0": {
                                                                            "type": "Identifier",
                                                                            "name": "f14"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mload",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "evaluationsOnCosetPtr",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "HexNumber",
                                                                                        "value": "0x1c0"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "3": {
                                                                    "type": "AssemblyBlock",
                                                                    "operations": {
                                                                        "0": {
                                                                            "type": "AssemblyLocalDefinition",
                                                                            "names": {
                                                                                "0": {
                                                                                    "type": "Identifier",
                                                                                    "name": "f15"
                                                                                }
                                                                            },
                                                                            "expression": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "mload",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "add",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "evaluationsOnCosetPtr",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "HexNumber",
                                                                                                "value": "0x1e0"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "1": {
                                                                            "type": "AssemblyAssignment",
                                                                            "names": {
                                                                                "0": {
                                                                                    "type": "Identifier",
                                                                                    "name": "f14"
                                                                                }
                                                                            },
                                                                            "expression": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "add",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "f14",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "f15",
                                                                                                "arguments": {}
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "mulmod",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "add",
                                                                                                "arguments": {
                                                                                                    "0": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "f14",
                                                                                                        "arguments": {}
                                                                                                    },
                                                                                                    "1": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "sub",
                                                                                                        "arguments": {
                                                                                                            "0": {
                                                                                                                "type": "AssemblyExpression",
                                                                                                                "functionName": "PRIME",
                                                                                                                "arguments": {}
                                                                                                            },
                                                                                                            "1": {
                                                                                                                "type": "AssemblyExpression",
                                                                                                                "functionName": "f15",
                                                                                                                "arguments": {}
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "mulmod",
                                                                                                "arguments": {
                                                                                                    "0": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "friEvalPointDivByX6",
                                                                                                        "arguments": {}
                                                                                                    },
                                                                                                    "1": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "imaginaryUnit",
                                                                                                        "arguments": {}
                                                                                                    },
                                                                                                    "2": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "PRIME",
                                                                                                        "arguments": {}
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "2": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "PRIME",
                                                                                                "arguments": {}
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "4": {
                                                                    "type": "AssemblyAssignment",
                                                                    "names": {
                                                                        "0": {
                                                                            "type": "Identifier",
                                                                            "name": "f12"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "f12",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "f14",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "mulmod",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "mulmod",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "friEvalPointDivByX6",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "friEvalPointDivByX6",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "2": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "PRIME",
                                                                                                "arguments": {}
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "add",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "f12",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "sub",
                                                                                                "arguments": {
                                                                                                    "0": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "MPRIME",
                                                                                                        "arguments": {}
                                                                                                    },
                                                                                                    "1": {
                                                                                                        "type": "AssemblyExpression",
                                                                                                        "functionName": "f14",
                                                                                                        "arguments": {}
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "2": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "PRIME",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "2": {
                                                            "type": "AssemblyAssignment",
                                                            "names": {
                                                                "0": {
                                                                    "type": "Identifier",
                                                                    "name": "f8"
                                                                }
                                                            },
                                                            "expression": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "f8",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "f12",
                                                                                "arguments": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mulmod",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "mulmod",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "friEvalPointDivByXTessed",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "imaginaryUnit",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "2": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "PRIME",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "add",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "f8",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "sub",
                                                                                        "arguments": {
                                                                                            "0": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "MPRIME",
                                                                                                "arguments": {}
                                                                                            },
                                                                                            "1": {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "f12",
                                                                                                "arguments": {}
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "2": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "PRIME",
                                                                                "arguments": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "3": {
                                                    "type": "AssemblyAssignment",
                                                    "names": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "nextLayerValue"
                                                        }
                                                    },
                                                    "expression": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "addmod",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "f0",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "f8",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mulmod",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mulmod",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "friEvalPointDivByXTessed",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "friEvalPointDivByXTessed",
                                                                                "arguments": {}
                                                                            },
                                                                            "2": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "PRIME",
                                                                                "arguments": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "f0",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "sub",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "MPRIME",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "f8",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "2": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "PRIME",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            },
                                                            "2": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "PRIME",
                                                                "arguments": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "10": {
                                            "type": "AssemblyBlock",
                                            "operations": {
                                                "0": {
                                                    "type": "AssemblyLocalDefinition",
                                                    "names": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "xInv2"
                                                        }
                                                    },
                                                    "expression": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mulmod",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "cosetOffset_",
                                                                "arguments": {}
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "cosetOffset_",
                                                                "arguments": {}
                                                            },
                                                            "2": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "PRIME",
                                                                "arguments": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "1": {
                                                    "type": "AssemblyLocalDefinition",
                                                    "names": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "xInv4"
                                                        }
                                                    },
                                                    "expression": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mulmod",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "xInv2",
                                                                "arguments": {}
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "xInv2",
                                                                "arguments": {}
                                                            },
                                                            "2": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "PRIME",
                                                                "arguments": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "2": {
                                                    "type": "AssemblyLocalDefinition",
                                                    "names": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "xInv8"
                                                        }
                                                    },
                                                    "expression": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mulmod",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "xInv4",
                                                                "arguments": {}
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "xInv4",
                                                                "arguments": {}
                                                            },
                                                            "2": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "PRIME",
                                                                "arguments": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "3": {
                                                    "type": "AssemblyAssignment",
                                                    "names": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "nextXInv"
                                                        }
                                                    },
                                                    "expression": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mulmod",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "xInv8",
                                                                "arguments": {}
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "xInv8",
                                                                "arguments": {}
                                                            },
                                                            "2": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "PRIME",
                                                                "arguments": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "13": {
                    "type": "FunctionDefinition",
                    "name": "gatherCosetInputs",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "channelPtr",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "friCtx",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "2": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "friQueueHead_",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "3": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "cosetSize",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "friQueueHead",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "cosetIdx",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "2": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "cosetOffset_",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "evaluationsOnCosetPtr",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "+",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "friCtx"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "FRI_CTX_TO_COSET_EVALUATIONS_OFFSET"
                                    }
                                }
                            },
                            "1": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "friGroupPtr",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "+",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "friCtx"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "FRI_CTX_TO_FRI_GROUP_OFFSET"
                                    }
                                }
                            },
                            "2": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "friQueueHead"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "friQueueHead_"
                                    }
                                }
                            },
                            "3": {
                                "type": "InLineAssemblyStatement",
                                "language": null,
                                "body": {
                                    "type": "AssemblyBlock",
                                    "operations": {
                                        "0": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "queueItemIdx"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "friQueueHead",
                                                        "arguments": {}
                                                    }
                                                }
                                            }
                                        },
                                        "1": {
                                            "type": "AssemblyAssignment",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "cosetIdx"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "and",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "queueItemIdx",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "not",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "sub",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "cosetSize",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "DecimalNumber",
                                                                        "value": "1"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "2": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "nextCosetIdx"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "add",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "cosetIdx",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "cosetSize",
                                                        "arguments": {}
                                                    }
                                                }
                                            }
                                        },
                                        "3": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "PRIME"
                                                }
                                            },
                                            "expression": {
                                                "type": "HexNumber",
                                                "value": "0x800000000000011000000000000000000000000000000000000000000000001"
                                            }
                                        },
                                        "4": {
                                            "type": "AssemblyAssignment",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "cosetOffset_"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mulmod",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mload",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "friQueueHead",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "HexNumber",
                                                                        "value": "0x40"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "1": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mload",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "friGroupPtr",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mul",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "sub",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "queueItemIdx",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "cosetIdx",
                                                                                        "arguments": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "1": {
                                                                                "type": "HexNumber",
                                                                                "value": "0x20"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "2": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "PRIME",
                                                        "arguments": {}
                                                    }
                                                }
                                            }
                                        },
                                        "5": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "proofPtr"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "channelPtr",
                                                        "arguments": {}
                                                    }
                                                }
                                            }
                                        },
                                        "6": {
                                            "type": "AssemblyFor",
                                            "pre": {
                                                "type": "AssemblyBlock",
                                                "operations": {
                                                    "0": {
                                                        "type": "AssemblyLocalDefinition",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "index"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "cosetIdx",
                                                            "arguments": {}
                                                        }
                                                    }
                                                }
                                            },
                                            "condition": {
                                                "type": "AssemblyExpression",
                                                "functionName": "lt",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "index",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "nextCosetIdx",
                                                        "arguments": {}
                                                    }
                                                }
                                            },
                                            "post": {
                                                "type": "AssemblyBlock",
                                                "operations": {
                                                    "0": {
                                                        "type": "AssemblyAssignment",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "index"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "add",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "index",
                                                                    "arguments": {}
                                                                },
                                                                "1": {
                                                                    "type": "DecimalNumber",
                                                                    "value": "1"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "body": {
                                                "type": "AssemblyBlock",
                                                "operations": {
                                                    "0": {
                                                        "type": "AssemblyLocalDefinition",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "fieldElementPtr"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "proofPtr",
                                                            "arguments": {}
                                                        }
                                                    },
                                                    "1": {
                                                        "type": "AssemblyAssignment",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "proofPtr"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "add",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "proofPtr",
                                                                    "arguments": {}
                                                                },
                                                                "1": {
                                                                    "type": "HexNumber",
                                                                    "value": "0x20"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "2": {
                                                        "type": "AssemblyIf",
                                                        "condition": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "eq",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "index",
                                                                    "arguments": {}
                                                                },
                                                                "1": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "queueItemIdx",
                                                                    "arguments": {}
                                                                }
                                                            }
                                                        },
                                                        "body": {
                                                            "type": "AssemblyBlock",
                                                            "operations": {
                                                                "0": {
                                                                    "type": "AssemblyAssignment",
                                                                    "names": {
                                                                        "0": {
                                                                            "type": "Identifier",
                                                                            "name": "fieldElementPtr"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "friQueueHead",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "HexNumber",
                                                                                "value": "0x20"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "1": {
                                                                    "type": "AssemblyAssignment",
                                                                    "names": {
                                                                        "0": {
                                                                            "type": "Identifier",
                                                                            "name": "proofPtr"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "sub",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "proofPtr",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "HexNumber",
                                                                                "value": "0x20"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "2": {
                                                                    "type": "AssemblyAssignment",
                                                                    "names": {
                                                                        "0": {
                                                                            "type": "Identifier",
                                                                            "name": "friQueueHead"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "friQueueHead",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "HexNumber",
                                                                                "value": "0x60"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "3": {
                                                                    "type": "AssemblyAssignment",
                                                                    "names": {
                                                                        "0": {
                                                                            "type": "Identifier",
                                                                            "name": "queueItemIdx"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mload",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "friQueueHead",
                                                                                "arguments": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "3": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mstore",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "evaluationsOnCosetPtr",
                                                                "arguments": {}
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "mod",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mload",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "fieldElementPtr",
                                                                                "arguments": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "PRIME",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "4": {
                                                        "type": "AssemblyAssignment",
                                                        "names": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "evaluationsOnCosetPtr"
                                                            }
                                                        },
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "add",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "evaluationsOnCosetPtr",
                                                                    "arguments": {}
                                                                },
                                                                "1": {
                                                                    "type": "HexNumber",
                                                                    "value": "0x20"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "7": {
                                            "type": "AssemblyExpression",
                                            "functionName": "mstore",
                                            "arguments": {
                                                "0": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "channelPtr",
                                                    "arguments": {}
                                                },
                                                "1": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "proofPtr",
                                                    "arguments": {}
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "14": {
                    "type": "FunctionDefinition",
                    "name": "bitReverse",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "num",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "numberOfBits",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "numReversed",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "assert"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "BinaryOperation",
                                            "operator": "||",
                                            "left": {
                                                "type": "TupleExpression",
                                                "components": {
                                                    "0": {
                                                        "type": "BinaryOperation",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "numberOfBits"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "256",
                                                            "subdenomination": null
                                                        }
                                                    }
                                                },
                                                "isArray": false
                                            },
                                            "right": {
                                                "type": "TupleExpression",
                                                "components": {
                                                    "0": {
                                                        "type": "BinaryOperation",
                                                        "operator": "<",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "num"
                                                        },
                                                        "right": {
                                                            "type": "BinaryOperation",
                                                            "operator": "**",
                                                            "left": {
                                                                "type": "NumberLiteral",
                                                                "number": "2",
                                                                "subdenomination": null
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "numberOfBits"
                                                            }
                                                        }
                                                    }
                                                },
                                                "isArray": false
                                            }
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "1": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "n",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "Identifier",
                                    "name": "num"
                                }
                            },
                            "2": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "r",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "NumberLiteral",
                                    "number": "0",
                                    "subdenomination": null
                                }
                            },
                            "3": {
                                "type": "ForStatement",
                                "initExpression": {
                                    "type": "VariableDeclarationStatement",
                                    "variables": {
                                        "0": {
                                            "type": "VariableDeclaration",
                                            "typeName": {
                                                "type": "ElementaryTypeName",
                                                "name": "uint256"
                                            },
                                            "name": "k",
                                            "storageLocation": null
                                        }
                                    },
                                    "initialValue": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "conditionExpression": {
                                    "type": "BinaryOperation",
                                    "operator": "<",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "k"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "numberOfBits"
                                    }
                                },
                                "loopExpression": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "UnaryOperation",
                                        "operator": "++",
                                        "subExpression": {
                                            "type": "Identifier",
                                            "name": "k"
                                        },
                                        "isPrefix": false
                                    }
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": {
                                        "0": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "r"
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "|",
                                                    "left": {
                                                        "type": "TupleExpression",
                                                        "components": {
                                                            "0": {
                                                                "type": "BinaryOperation",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "r"
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "2",
                                                                    "subdenomination": null
                                                                }
                                                            }
                                                        },
                                                        "isArray": false
                                                    },
                                                    "right": {
                                                        "type": "TupleExpression",
                                                        "components": {
                                                            "0": {
                                                                "type": "BinaryOperation",
                                                                "operator": "%",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "n"
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "2",
                                                                    "subdenomination": null
                                                                }
                                                            }
                                                        },
                                                        "isArray": false
                                                    }
                                                }
                                            }
                                        },
                                        "1": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "n"
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "n"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "2",
                                                        "subdenomination": null
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "4": {
                                "type": "Identifier",
                                "name": "r"
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "15": {
                    "type": "FunctionDefinition",
                    "name": "initFriGroups",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "friCtx",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {},
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "friGroupPtr",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "+",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "friCtx"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "FRI_CTX_TO_FRI_GROUP_OFFSET"
                                    }
                                }
                            },
                            "1": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "friHalfInvGroupPtr",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "+",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "friCtx"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "FRI_CTX_TO_FRI_HALF_INV_GROUP_OFFSET"
                                    }
                                }
                            },
                            "2": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "genFriGroup",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "Identifier",
                                    "name": "FRI_GROUP_GEN"
                                }
                            },
                            "3": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "genFriGroupInv",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "fpow"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "Identifier",
                                            "name": "genFriGroup"
                                        },
                                        "1": {
                                            "type": "TupleExpression",
                                            "components": {
                                                "0": {
                                                    "type": "BinaryOperation",
                                                    "operator": "-",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "MAX_COSET_SIZE"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "1",
                                                        "subdenomination": null
                                                    }
                                                }
                                            },
                                            "isArray": false
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "4": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "lastVal",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "Identifier",
                                    "name": "ONE_VAL"
                                }
                            },
                            "5": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "lastValInv",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "Identifier",
                                    "name": "ONE_VAL"
                                }
                            },
                            "6": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "prime",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "MemberAccess",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "PrimeFieldElement0"
                                    },
                                    "memberName": "K_MODULUS"
                                }
                            },
                            "7": {
                                "type": "InLineAssemblyStatement",
                                "language": null,
                                "body": {
                                    "type": "AssemblyBlock",
                                    "operations": {
                                        "0": {
                                            "type": "AssemblyExpression",
                                            "functionName": "mstore",
                                            "arguments": {
                                                "0": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "friHalfInvGroupPtr",
                                                    "arguments": {}
                                                },
                                                "1": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "lastValInv",
                                                    "arguments": {}
                                                }
                                            }
                                        },
                                        "1": {
                                            "type": "AssemblyExpression",
                                            "functionName": "mstore",
                                            "arguments": {
                                                "0": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "friGroupPtr",
                                                    "arguments": {}
                                                },
                                                "1": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "lastVal",
                                                    "arguments": {}
                                                }
                                            }
                                        },
                                        "2": {
                                            "type": "AssemblyExpression",
                                            "functionName": "mstore",
                                            "arguments": {
                                                "0": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "add",
                                                    "arguments": {
                                                        "0": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "friGroupPtr",
                                                            "arguments": {}
                                                        },
                                                        "1": {
                                                            "type": "HexNumber",
                                                            "value": "0x20"
                                                        }
                                                    }
                                                },
                                                "1": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "sub",
                                                    "arguments": {
                                                        "0": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "prime",
                                                            "arguments": {}
                                                        },
                                                        "1": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "lastVal",
                                                            "arguments": {}
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "8": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "halfCosetSize",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "/",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "MAX_COSET_SIZE"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "2",
                                        "subdenomination": null
                                    }
                                }
                            },
                            "9": {
                                "type": "ForStatement",
                                "initExpression": {
                                    "type": "VariableDeclarationStatement",
                                    "variables": {
                                        "0": {
                                            "type": "VariableDeclaration",
                                            "typeName": {
                                                "type": "ElementaryTypeName",
                                                "name": "uint256"
                                            },
                                            "name": "i",
                                            "storageLocation": null
                                        }
                                    },
                                    "initialValue": {
                                        "type": "NumberLiteral",
                                        "number": "1",
                                        "subdenomination": null
                                    }
                                },
                                "conditionExpression": {
                                    "type": "BinaryOperation",
                                    "operator": "<",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "i"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "halfCosetSize"
                                    }
                                },
                                "loopExpression": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "UnaryOperation",
                                        "operator": "++",
                                        "subExpression": {
                                            "type": "Identifier",
                                            "name": "i"
                                        },
                                        "isPrefix": false
                                    }
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": {
                                        "0": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "lastVal"
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "fmul"
                                                    },
                                                    "arguments": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "lastVal"
                                                        },
                                                        "1": {
                                                            "type": "Identifier",
                                                            "name": "genFriGroup"
                                                        }
                                                    },
                                                    "names": {}
                                                }
                                            }
                                        },
                                        "1": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "lastValInv"
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "fmul"
                                                    },
                                                    "arguments": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "lastValInv"
                                                        },
                                                        "1": {
                                                            "type": "Identifier",
                                                            "name": "genFriGroupInv"
                                                        }
                                                    },
                                                    "names": {}
                                                }
                                            }
                                        },
                                        "2": {
                                            "type": "VariableDeclarationStatement",
                                            "variables": {
                                                "0": {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "uint256"
                                                    },
                                                    "name": "idx",
                                                    "storageLocation": null
                                                }
                                            },
                                            "initialValue": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "bitReverse"
                                                },
                                                "arguments": {
                                                    "0": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                    },
                                                    "1": {
                                                        "type": "BinaryOperation",
                                                        "operator": "-",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "FRI_MAX_FRI_STEP"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "1",
                                                            "subdenomination": null
                                                        }
                                                    }
                                                },
                                                "names": {}
                                            }
                                        },
                                        "3": {
                                            "type": "InLineAssemblyStatement",
                                            "language": null,
                                            "body": {
                                                "type": "AssemblyBlock",
                                                "operations": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mstore",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "friHalfInvGroupPtr",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mul",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "idx",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "HexNumber",
                                                                                "value": "0x20"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "lastValInv",
                                                                "arguments": {}
                                                            }
                                                        }
                                                    },
                                                    "1": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mstore",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "friGroupPtr",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "mul",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "idx",
                                                                                "arguments": {}
                                                                            },
                                                                            "1": {
                                                                                "type": "HexNumber",
                                                                                "value": "0x40"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "lastVal",
                                                                "arguments": {}
                                                            }
                                                        }
                                                    },
                                                    "2": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mstore",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "add",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "friGroupPtr",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "add",
                                                                        "arguments": {
                                                                            "0": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "mul",
                                                                                "arguments": {
                                                                                    "0": {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "idx",
                                                                                        "arguments": {}
                                                                                    },
                                                                                    "1": {
                                                                                        "type": "HexNumber",
                                                                                        "value": "0x40"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "1": {
                                                                                "type": "HexNumber",
                                                                                "value": "0x20"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "sub",
                                                                "arguments": {
                                                                    "0": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "prime",
                                                                        "arguments": {}
                                                                    },
                                                                    "1": {
                                                                        "type": "AssemblyExpression",
                                                                        "functionName": "lastVal",
                                                                        "arguments": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                "16": {
                    "type": "FunctionDefinition",
                    "name": "doFriSteps",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "friCtx",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "friQueueTail",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "2": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "cosetOffset_",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "3": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "friEvalPoint",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "4": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "friCosetSize",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "5": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "index",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "6": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "merkleQueuePtr",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {},
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "friValue",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": null
                            },
                            "1": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "evaluationsOnCosetPtr",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "+",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "friCtx"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "FRI_CTX_TO_COSET_EVALUATIONS_OFFSET"
                                    }
                                }
                            },
                            "2": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "friHalfInvGroupPtr",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "+",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "friCtx"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "FRI_CTX_TO_FRI_HALF_INV_GROUP_OFFSET"
                                    }
                                }
                            },
                            "3": {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "==",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "friCosetSize"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "8",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": {
                                        "0": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "TupleExpression",
                                                    "components": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "friValue"
                                                        },
                                                        "1": {
                                                            "type": "Identifier",
                                                            "name": "cosetOffset_"
                                                        }
                                                    },
                                                    "isArray": false
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "do3FriSteps"
                                                    },
                                                    "arguments": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "friHalfInvGroupPtr"
                                                        },
                                                        "1": {
                                                            "type": "Identifier",
                                                            "name": "evaluationsOnCosetPtr"
                                                        },
                                                        "2": {
                                                            "type": "Identifier",
                                                            "name": "cosetOffset_"
                                                        },
                                                        "3": {
                                                            "type": "Identifier",
                                                            "name": "friEvalPoint"
                                                        }
                                                    },
                                                    "names": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "FalseBody": {
                                    "type": "IfStatement",
                                    "condition": {
                                        "type": "BinaryOperation",
                                        "operator": "==",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "friCosetSize"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "4",
                                            "subdenomination": null
                                        }
                                    },
                                    "TrueBody": {
                                        "type": "Block",
                                        "statements": {
                                            "0": {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "BinaryOperation",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "TupleExpression",
                                                        "components": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "friValue"
                                                            },
                                                            "1": {
                                                                "type": "Identifier",
                                                                "name": "cosetOffset_"
                                                            }
                                                        },
                                                        "isArray": false
                                                    },
                                                    "right": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "do2FriSteps"
                                                        },
                                                        "arguments": {
                                                            "0": {
                                                                "type": "Identifier",
                                                                "name": "friHalfInvGroupPtr"
                                                            },
                                                            "1": {
                                                                "type": "Identifier",
                                                                "name": "evaluationsOnCosetPtr"
                                                            },
                                                            "2": {
                                                                "type": "Identifier",
                                                                "name": "cosetOffset_"
                                                            },
                                                            "3": {
                                                                "type": "Identifier",
                                                                "name": "friEvalPoint"
                                                            }
                                                        },
                                                        "names": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "FalseBody": {
                                        "type": "IfStatement",
                                        "condition": {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "friCosetSize"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "16",
                                                "subdenomination": null
                                            }
                                        },
                                        "TrueBody": {
                                            "type": "Block",
                                            "statements": {
                                                "0": {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "BinaryOperation",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "TupleExpression",
                                                            "components": {
                                                                "0": {
                                                                    "type": "Identifier",
                                                                    "name": "friValue"
                                                                },
                                                                "1": {
                                                                    "type": "Identifier",
                                                                    "name": "cosetOffset_"
                                                                }
                                                            },
                                                            "isArray": false
                                                        },
                                                        "right": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "do4FriSteps"
                                                            },
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "Identifier",
                                                                    "name": "friHalfInvGroupPtr"
                                                                },
                                                                "1": {
                                                                    "type": "Identifier",
                                                                    "name": "evaluationsOnCosetPtr"
                                                                },
                                                                "2": {
                                                                    "type": "Identifier",
                                                                    "name": "cosetOffset_"
                                                                },
                                                                "3": {
                                                                    "type": "Identifier",
                                                                    "name": "friEvalPoint"
                                                                }
                                                            },
                                                            "names": {}
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "FalseBody": {
                                            "type": "Block",
                                            "statements": {
                                                "0": {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "require"
                                                        },
                                                        "arguments": {
                                                            "0": {
                                                                "type": "BooleanLiteral",
                                                                "value": false
                                                            },
                                                            "1": {
                                                                "type": "stringLiteral",
                                                                "value": "Only step sizes of 2, 3 or 4 are supported."
                                                            }
                                                        },
                                                        "names": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "4": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "lhashMask",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "getHashMask"
                                    },
                                    "arguments": {},
                                    "names": {}
                                }
                            },
                            "5": {
                                "type": "InLineAssemblyStatement",
                                "language": null,
                                "body": {
                                    "type": "AssemblyBlock",
                                    "operations": {
                                        "0": {
                                            "type": "AssemblyLocalDefinition",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "indexInNextStep"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "div",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "index",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "friCosetSize",
                                                        "arguments": {}
                                                    }
                                                }
                                            }
                                        },
                                        "1": {
                                            "type": "AssemblyExpression",
                                            "functionName": "mstore",
                                            "arguments": {
                                                "0": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "merkleQueuePtr",
                                                    "arguments": {}
                                                },
                                                "1": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "indexInNextStep",
                                                    "arguments": {}
                                                }
                                            }
                                        },
                                        "2": {
                                            "type": "AssemblyExpression",
                                            "functionName": "mstore",
                                            "arguments": {
                                                "0": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "add",
                                                    "arguments": {
                                                        "0": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "merkleQueuePtr",
                                                            "arguments": {}
                                                        },
                                                        "1": {
                                                            "type": "HexNumber",
                                                            "value": "0x20"
                                                        }
                                                    }
                                                },
                                                "1": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "and",
                                                    "arguments": {
                                                        "0": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "lhashMask",
                                                            "arguments": {}
                                                        },
                                                        "1": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "keccak256",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "evaluationsOnCosetPtr",
                                                                    "arguments": {}
                                                                },
                                                                "1": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "mul",
                                                                    "arguments": {
                                                                        "0": {
                                                                            "type": "HexNumber",
                                                                            "value": "0x20"
                                                                        },
                                                                        "1": {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "friCosetSize",
                                                                            "arguments": {}
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "3": {
                                            "type": "AssemblyExpression",
                                            "functionName": "mstore",
                                            "arguments": {
                                                "0": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "friQueueTail",
                                                    "arguments": {}
                                                },
                                                "1": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "indexInNextStep",
                                                    "arguments": {}
                                                }
                                            }
                                        },
                                        "4": {
                                            "type": "AssemblyExpression",
                                            "functionName": "mstore",
                                            "arguments": {
                                                "0": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "add",
                                                    "arguments": {
                                                        "0": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "friQueueTail",
                                                            "arguments": {}
                                                        },
                                                        "1": {
                                                            "type": "HexNumber",
                                                            "value": "0x20"
                                                        }
                                                    }
                                                },
                                                "1": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "friValue",
                                                    "arguments": {}
                                                }
                                            }
                                        },
                                        "5": {
                                            "type": "AssemblyExpression",
                                            "functionName": "mstore",
                                            "arguments": {
                                                "0": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "add",
                                                    "arguments": {
                                                        "0": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "friQueueTail",
                                                            "arguments": {}
                                                        },
                                                        "1": {
                                                            "type": "HexNumber",
                                                            "value": "0x40"
                                                        }
                                                    }
                                                },
                                                "1": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "cosetOffset_",
                                                    "arguments": {}
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                "17": {
                    "type": "FunctionDefinition",
                    "name": "computeNextLayer",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "channelPtr",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "friQueuePtr",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "2": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "merkleQueuePtr",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "3": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "nQueries",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "4": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "friEvalPoint",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "5": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "friCosetSize",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "6": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "friCtx",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "nLiveQueries",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "merkleQueueTail",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "Identifier",
                                    "name": "merkleQueuePtr"
                                }
                            },
                            "1": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "friQueueHead",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "Identifier",
                                    "name": "friQueuePtr"
                                }
                            },
                            "2": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "friQueueTail",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "Identifier",
                                    "name": "friQueuePtr"
                                }
                            },
                            "3": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "friQueueEnd",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "+",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "friQueueHead"
                                    },
                                    "right": {
                                        "type": "TupleExpression",
                                        "components": {
                                            "0": {
                                                "type": "BinaryOperation",
                                                "operator": "*",
                                                "left": {
                                                    "type": "NumberLiteral",
                                                    "number": "0x60",
                                                    "subdenomination": null
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "nQueries"
                                                }
                                            }
                                        },
                                        "isArray": false
                                    }
                                }
                            },
                            "4": {
                                "type": "DoWhileStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "<",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "friQueueHead"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "friQueueEnd"
                                    }
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": {
                                        "0": {
                                            "type": "VariableDeclarationStatement",
                                            "variables": {
                                                "0": {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "uint256"
                                                    },
                                                    "name": "cosetOffset",
                                                    "storageLocation": null
                                                }
                                            },
                                            "initialValue": null
                                        },
                                        "1": {
                                            "type": "VariableDeclarationStatement",
                                            "variables": {
                                                "0": {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "uint256"
                                                    },
                                                    "name": "index",
                                                    "storageLocation": null
                                                }
                                            },
                                            "initialValue": null
                                        },
                                        "2": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "TupleExpression",
                                                    "components": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "friQueueHead"
                                                        },
                                                        "1": {
                                                            "type": "Identifier",
                                                            "name": "index"
                                                        },
                                                        "2": {
                                                            "type": "Identifier",
                                                            "name": "cosetOffset"
                                                        }
                                                    },
                                                    "isArray": false
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "gatherCosetInputs"
                                                    },
                                                    "arguments": {
                                                        "0": {
                                                            "type": "Identifier",
                                                            "name": "channelPtr"
                                                        },
                                                        "1": {
                                                            "type": "Identifier",
                                                            "name": "friCtx"
                                                        },
                                                        "2": {
                                                            "type": "Identifier",
                                                            "name": "friQueueHead"
                                                        },
                                                        "3": {
                                                            "type": "Identifier",
                                                            "name": "friCosetSize"
                                                        }
                                                    },
                                                    "names": {}
                                                }
                                            }
                                        },
                                        "3": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "doFriSteps"
                                                },
                                                "arguments": {
                                                    "0": {
                                                        "type": "Identifier",
                                                        "name": "friCtx"
                                                    },
                                                    "1": {
                                                        "type": "Identifier",
                                                        "name": "friQueueTail"
                                                    },
                                                    "2": {
                                                        "type": "Identifier",
                                                        "name": "cosetOffset"
                                                    },
                                                    "3": {
                                                        "type": "Identifier",
                                                        "name": "friEvalPoint"
                                                    },
                                                    "4": {
                                                        "type": "Identifier",
                                                        "name": "friCosetSize"
                                                    },
                                                    "5": {
                                                        "type": "Identifier",
                                                        "name": "index"
                                                    },
                                                    "6": {
                                                        "type": "Identifier",
                                                        "name": "merkleQueueTail"
                                                    }
                                                },
                                                "names": {}
                                            }
                                        },
                                        "4": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "merkleQueueTail"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "0x40",
                                                    "subdenomination": null
                                                }
                                            }
                                        },
                                        "5": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "friQueueTail"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "0x60",
                                                    "subdenomination": null
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "5": {
                                "type": "BinaryOperation",
                                "operator": "/",
                                "left": {
                                    "type": "TupleExpression",
                                    "components": {
                                        "0": {
                                            "type": "BinaryOperation",
                                            "operator": "-",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "friQueueTail"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "friQueuePtr"
                                            }
                                        }
                                    },
                                    "isArray": false
                                },
                                "right": {
                                    "type": "NumberLiteral",
                                    "number": "0x60",
                                    "subdenomination": null
                                }
                            }
                        }
                    },
                    "visibility": "internal",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                }
            },
            "kind": "contract"
        },
        "8": {
            "type": "ContractDefinition",
            "name": "FriStatementContract",
            "baseContracts": {
                "0": {
                    "type": "InheritanceSpecifier",
                    "baseName": {
                        "type": "UserDefinedTypeName",
                        "namePath": "FriLayer"
                    },
                    "arguments": null
                },
                "1": {
                    "type": "InheritanceSpecifier",
                    "baseName": {
                        "type": "UserDefinedTypeName",
                        "namePath": "FactRegistry"
                    },
                    "arguments": null
                }
            },
            "subNodes": {
                "0": {
                    "type": "FunctionDefinition",
                    "name": "verifyFRI",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": {
                            "0": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ArrayTypeName",
                                    "baseTypeName": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    },
                                    "length": null
                                },
                                "name": "proof",
                                "storageLocation": "memory",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "1": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ArrayTypeName",
                                    "baseTypeName": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    },
                                    "length": null
                                },
                                "name": "friQueue",
                                "storageLocation": "memory",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "2": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "evaluationPoint",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "3": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "friStepSize",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            "4": {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "expectedRoot",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        }
                    },
                    "returnParameters": {},
                    "body": {
                        "type": "Block",
                        "statements": {
                            "0": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "BinaryOperation",
                                            "operator": "<=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "friStepSize"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "FRI_MAX_FRI_STEP"
                                            }
                                        },
                                        "1": {
                                            "type": "stringLiteral",
                                            "value": "FRI step size too large"
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "1": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": "%",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "friQueue"
                                                    },
                                                    "memberName": "length"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "3",
                                                    "subdenomination": null
                                                }
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            }
                                        },
                                        "1": {
                                            "type": "stringLiteral",
                                            "value": "FRI Queue must be composed of triplets plus one delimiter cell"
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "2": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "friQueue"
                                                },
                                                "memberName": "length"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "4",
                                                "subdenomination": null
                                            }
                                        },
                                        "1": {
                                            "type": "stringLiteral",
                                            "value": "No query to process"
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "3": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "mmFriCtxSize",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "Identifier",
                                    "name": "FRI_CTX_SIZE"
                                }
                            },
                            "4": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "nQueries",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "/",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "friQueue"
                                        },
                                        "memberName": "length"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "3",
                                        "subdenomination": null
                                    }
                                }
                            },
                            "5": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "friQueue"
                                        },
                                        "index": {
                                            "type": "BinaryOperation",
                                            "operator": "*",
                                            "left": {
                                                "type": "NumberLiteral",
                                                "number": "3",
                                                "subdenomination": null
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "nQueries"
                                            }
                                        }
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                }
                            },
                            "6": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "merkleQueuePtr",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": null
                            },
                            "7": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "friQueuePtr",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": null
                            },
                            "8": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "channelPtr",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": null
                            },
                            "9": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "friCtx",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": null
                            },
                            "10": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "dataToHash",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": null
                            },
                            "11": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "BinaryOperation",
                                            "operator": "<",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "evaluationPoint"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "K_MODULUS"
                                            }
                                        },
                                        "1": {
                                            "type": "stringLiteral",
                                            "value": "INVALID_EVAL_POINT"
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "12": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "prevQuery",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": {
                                    "type": "NumberLiteral",
                                    "number": "0",
                                    "subdenomination": null
                                }
                            },
                            "13": {
                                "type": "ForStatement",
                                "initExpression": {
                                    "type": "VariableDeclarationStatement",
                                    "variables": {
                                        "0": {
                                            "type": "VariableDeclaration",
                                            "typeName": {
                                                "type": "ElementaryTypeName",
                                                "name": "uint256"
                                            },
                                            "name": "i",
                                            "storageLocation": null
                                        }
                                    },
                                    "initialValue": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "conditionExpression": {
                                    "type": "BinaryOperation",
                                    "operator": "<",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "i"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "nQueries"
                                    }
                                },
                                "loopExpression": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "UnaryOperation",
                                        "operator": "++",
                                        "subExpression": {
                                            "type": "Identifier",
                                            "name": "i"
                                        },
                                        "isPrefix": false
                                    }
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": {
                                        "0": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": {
                                                    "0": {
                                                        "type": "BinaryOperation",
                                                        "operator": ">",
                                                        "left": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "Identifier",
                                                                "name": "friQueue"
                                                            },
                                                            "index": {
                                                                "type": "BinaryOperation",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "3",
                                                                    "subdenomination": null
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "i"
                                                                }
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "prevQuery"
                                                        }
                                                    },
                                                    "1": {
                                                        "type": "stringLiteral",
                                                        "value": "INVALID_QUERY_VALUE"
                                                    }
                                                },
                                                "names": {}
                                            }
                                        },
                                        "1": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": {
                                                    "0": {
                                                        "type": "BinaryOperation",
                                                        "operator": "<",
                                                        "left": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "Identifier",
                                                                "name": "friQueue"
                                                            },
                                                            "index": {
                                                                "type": "BinaryOperation",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "*",
                                                                    "left": {
                                                                        "type": "NumberLiteral",
                                                                        "number": "3",
                                                                        "subdenomination": null
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "i"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "1",
                                                                    "subdenomination": null
                                                                }
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "K_MODULUS"
                                                        }
                                                    },
                                                    "1": {
                                                        "type": "stringLiteral",
                                                        "value": "INVALID_FRI_VALUE"
                                                    }
                                                },
                                                "names": {}
                                            }
                                        },
                                        "2": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": {
                                                    "0": {
                                                        "type": "BinaryOperation",
                                                        "operator": "<",
                                                        "left": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "Identifier",
                                                                "name": "friQueue"
                                                            },
                                                            "index": {
                                                                "type": "BinaryOperation",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "*",
                                                                    "left": {
                                                                        "type": "NumberLiteral",
                                                                        "number": "3",
                                                                        "subdenomination": null
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "i"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "2",
                                                                    "subdenomination": null
                                                                }
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "K_MODULUS"
                                                        }
                                                    },
                                                    "1": {
                                                        "type": "stringLiteral",
                                                        "value": "INVALID_FRI_INVERSE_POINT"
                                                    }
                                                },
                                                "names": {}
                                            }
                                        },
                                        "3": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "prevQuery"
                                                },
                                                "right": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "friQueue"
                                                    },
                                                    "index": {
                                                        "type": "BinaryOperation",
                                                        "operator": "*",
                                                        "left": {
                                                            "type": "NumberLiteral",
                                                            "number": "3",
                                                            "subdenomination": null
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "i"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "14": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "BinaryOperation",
                                            "operator": "<",
                                            "left": {
                                                "type": "TupleExpression",
                                                "components": {
                                                    "0": {
                                                        "type": "BinaryOperation",
                                                        "operator": "^",
                                                        "left": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "Identifier",
                                                                "name": "friQueue"
                                                            },
                                                            "index": {
                                                                "type": "NumberLiteral",
                                                                "number": "0",
                                                                "subdenomination": null
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "Identifier",
                                                                "name": "friQueue"
                                                            },
                                                            "index": {
                                                                "type": "BinaryOperation",
                                                                "operator": "-",
                                                                "left": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "*",
                                                                    "left": {
                                                                        "type": "NumberLiteral",
                                                                        "number": "3",
                                                                        "subdenomination": null
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "nQueries"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "3",
                                                                    "subdenomination": null
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "isArray": false
                                            },
                                            "right": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "friQueue"
                                                },
                                                "index": {
                                                    "type": "NumberLiteral",
                                                    "number": "0",
                                                    "subdenomination": null
                                                }
                                            }
                                        },
                                        "1": {
                                            "type": "stringLiteral",
                                            "value": "INVALID_QUERIES_RANGE"
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "15": {
                                "type": "InLineAssemblyStatement",
                                "language": null,
                                "body": {
                                    "type": "AssemblyBlock",
                                    "operations": {
                                        "0": {
                                            "type": "AssemblyAssignment",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "friQueuePtr"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "add",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "friQueue",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "HexNumber",
                                                        "value": "0x20"
                                                    }
                                                }
                                            }
                                        },
                                        "1": {
                                            "type": "AssemblyAssignment",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "channelPtr"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": {
                                                    "0": {
                                                        "type": "HexNumber",
                                                        "value": "0x40"
                                                    }
                                                }
                                            }
                                        },
                                        "2": {
                                            "type": "AssemblyExpression",
                                            "functionName": "mstore",
                                            "arguments": {
                                                "0": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "channelPtr",
                                                    "arguments": {}
                                                },
                                                "1": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "add",
                                                    "arguments": {
                                                        "0": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "proof",
                                                            "arguments": {}
                                                        },
                                                        "1": {
                                                            "type": "HexNumber",
                                                            "value": "0x20"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "3": {
                                            "type": "AssemblyAssignment",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "merkleQueuePtr"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "add",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "channelPtr",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "HexNumber",
                                                        "value": "0x20"
                                                    }
                                                }
                                            }
                                        },
                                        "4": {
                                            "type": "AssemblyAssignment",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "friCtx"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "add",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "merkleQueuePtr",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mul",
                                                        "arguments": {
                                                            "0": {
                                                                "type": "HexNumber",
                                                                "value": "0x40"
                                                            },
                                                            "1": {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "nQueries",
                                                                "arguments": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "5": {
                                            "type": "AssemblyAssignment",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "dataToHash"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "add",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "friCtx",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "mmFriCtxSize",
                                                        "arguments": {}
                                                    }
                                                }
                                            }
                                        },
                                        "6": {
                                            "type": "AssemblyExpression",
                                            "functionName": "mstore",
                                            "arguments": {
                                                "0": {
                                                    "type": "HexNumber",
                                                    "value": "0x40"
                                                },
                                                "1": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "add",
                                                    "arguments": {
                                                        "0": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "dataToHash",
                                                            "arguments": {}
                                                        },
                                                        "1": {
                                                            "type": "HexNumber",
                                                            "value": "0xa0"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "7": {
                                            "type": "AssemblyExpression",
                                            "functionName": "mstore",
                                            "arguments": {
                                                "0": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "dataToHash",
                                                    "arguments": {}
                                                },
                                                "1": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "evaluationPoint",
                                                    "arguments": {}
                                                }
                                            }
                                        },
                                        "8": {
                                            "type": "AssemblyExpression",
                                            "functionName": "mstore",
                                            "arguments": {
                                                "0": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "add",
                                                    "arguments": {
                                                        "0": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "dataToHash",
                                                            "arguments": {}
                                                        },
                                                        "1": {
                                                            "type": "HexNumber",
                                                            "value": "0x20"
                                                        }
                                                    }
                                                },
                                                "1": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "friStepSize",
                                                    "arguments": {}
                                                }
                                            }
                                        },
                                        "9": {
                                            "type": "AssemblyExpression",
                                            "functionName": "mstore",
                                            "arguments": {
                                                "0": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "add",
                                                    "arguments": {
                                                        "0": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "dataToHash",
                                                            "arguments": {}
                                                        },
                                                        "1": {
                                                            "type": "HexNumber",
                                                            "value": "0x80"
                                                        }
                                                    }
                                                },
                                                "1": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "expectedRoot",
                                                    "arguments": {}
                                                }
                                            }
                                        },
                                        "10": {
                                            "type": "AssemblyExpression",
                                            "functionName": "mstore",
                                            "arguments": {
                                                "0": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "add",
                                                    "arguments": {
                                                        "0": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "dataToHash",
                                                            "arguments": {}
                                                        },
                                                        "1": {
                                                            "type": "HexNumber",
                                                            "value": "0x40"
                                                        }
                                                    }
                                                },
                                                "1": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "keccak256",
                                                    "arguments": {
                                                        "0": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "friQueuePtr",
                                                            "arguments": {}
                                                        },
                                                        "1": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "mul",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "HexNumber",
                                                                    "value": "0x60"
                                                                },
                                                                "1": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "nQueries",
                                                                    "arguments": {}
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "16": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "initFriGroups"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "Identifier",
                                            "name": "friCtx"
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "17": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "nQueries"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "computeNextLayer"
                                        },
                                        "arguments": {
                                            "0": {
                                                "type": "Identifier",
                                                "name": "channelPtr"
                                            },
                                            "1": {
                                                "type": "Identifier",
                                                "name": "friQueuePtr"
                                            },
                                            "2": {
                                                "type": "Identifier",
                                                "name": "merkleQueuePtr"
                                            },
                                            "3": {
                                                "type": "Identifier",
                                                "name": "nQueries"
                                            },
                                            "4": {
                                                "type": "Identifier",
                                                "name": "evaluationPoint"
                                            },
                                            "5": {
                                                "type": "BinaryOperation",
                                                "operator": "**",
                                                "left": {
                                                    "type": "NumberLiteral",
                                                    "number": "2",
                                                    "subdenomination": null
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "friStepSize"
                                                }
                                            },
                                            "6": {
                                                "type": "Identifier",
                                                "name": "friCtx"
                                            }
                                        },
                                        "names": {}
                                    }
                                }
                            },
                            "18": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "verify"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "Identifier",
                                            "name": "channelPtr"
                                        },
                                        "1": {
                                            "type": "Identifier",
                                            "name": "merkleQueuePtr"
                                        },
                                        "2": {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "ElementaryTypeName",
                                                "name": "bytes32"
                                            },
                                            "arguments": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "expectedRoot"
                                                }
                                            },
                                            "names": {}
                                        },
                                        "3": {
                                            "type": "Identifier",
                                            "name": "nQueries"
                                        }
                                    },
                                    "names": {}
                                }
                            },
                            "19": {
                                "type": "VariableDeclarationStatement",
                                "variables": {
                                    "0": {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "bytes32"
                                        },
                                        "name": "factHash",
                                        "storageLocation": null
                                    }
                                },
                                "initialValue": null
                            },
                            "20": {
                                "type": "InLineAssemblyStatement",
                                "language": null,
                                "body": {
                                    "type": "AssemblyBlock",
                                    "operations": {
                                        "0": {
                                            "type": "AssemblyExpression",
                                            "functionName": "mstore",
                                            "arguments": {
                                                "0": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "add",
                                                    "arguments": {
                                                        "0": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "dataToHash",
                                                            "arguments": {}
                                                        },
                                                        "1": {
                                                            "type": "HexNumber",
                                                            "value": "0x60"
                                                        }
                                                    }
                                                },
                                                "1": {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "keccak256",
                                                    "arguments": {
                                                        "0": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "friQueuePtr",
                                                            "arguments": {}
                                                        },
                                                        "1": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "mul",
                                                            "arguments": {
                                                                "0": {
                                                                    "type": "HexNumber",
                                                                    "value": "0x60"
                                                                },
                                                                "1": {
                                                                    "type": "AssemblyExpression",
                                                                    "functionName": "nQueries",
                                                                    "arguments": {}
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "1": {
                                            "type": "AssemblyAssignment",
                                            "names": {
                                                "0": {
                                                    "type": "Identifier",
                                                    "name": "factHash"
                                                }
                                            },
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "keccak256",
                                                "arguments": {
                                                    "0": {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "dataToHash",
                                                        "arguments": {}
                                                    },
                                                    "1": {
                                                        "type": "HexNumber",
                                                        "value": "0xa0"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "21": {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "registerFact"
                                    },
                                    "arguments": {
                                        "0": {
                                            "type": "Identifier",
                                            "name": "factHash"
                                        }
                                    },
                                    "names": {}
                                }
                            }
                        }
                    },
                    "visibility": "public",
                    "modifiers": {},
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                }
            },
            "kind": "contract"
        }
    }
}